{"created_by":"Tampermonkey","version":"1","scripts":[{"name":"AC-baidu-重定向优化百度搜狗谷歌必应搜索_favicon_双列","options":{"check_for_updates":true,"comment":null,"compat_foreach":false,"compat_metadata":false,"compat_prototypes":false,"compat_wrappedjsobject":false,"compatopts_for_requires":true,"noframes":null,"override":{"merge_connects":true,"merge_excludes":true,"merge_includes":true,"merge_matches":true,"orig_excludes":["*://*.google*/sorry*","https://zhidao.baidu.com/*","https://*.zhidao.baidu.com/*","https://www.baidu.com/img/*"],"orig_includes":["*://ipv6.baidu.com/*","*://www.baidu.com/*","*://www1.baidu.com/*","*://m.baidu.com/*","*://xueshu.baidu.com/s*","*://www.so.com/s?*","*://*.bing.com/*","*://encrypted.google.*/search*","*://*.google*/search*","*://*.google*/webhp*","*://*.zhihu.com/*","*://*duckduckgo.com/*","*://*.dogedoge.com/*"],"orig_matches":[],"orig_noframes":null,"orig_run_at":"document-start","use_blockers":[],"use_connects":[],"use_excludes":[],"use_includes":[],"use_matches":[]},"run_at":null},"storage":{"data":{"Config":"s{\"isRedirectEnable\":true,\"isAdsEnable\":true,\"isAutopage\":true,\"isBlockEnable\":false,\"isBlockDisplay\":false,\"isBlockBtnNotDisplay\":false,\"AdsStyleEnable\":true,\"baidu\":{\"name\":\"baidu\",\"AdsStyleMode\":\"2\",\"HuYanMode\":false},\"google\":{\"name\":\"google\",\"AdsStyleMode\":\"2\",\"HuYanMode\":false},\"bing\":{\"name\":\"bing\",\"AdsStyleMode\":\"3\",\"HuYanMode\":false},\"duck\":{\"name\":\"duck\",\"AdsStyleMode\":\"3\",\"HuYanMode\":false},\"doge\":{\"name\":\"doge\",\"AdsStyleMode\":\"3\",\"HuYanMode\":false},\"sogou\":{\"name\":\"sogou\",\"AdsStyleMode\":\"1\",\"HuYanMode\":false},\"zhihu\":{\"name\":\"zhihu\",\"AdsStyleMode\":\"0\",\"HuYanMode\":false},\"other\":{\"name\":\"other\",\"AdsStyleMode\":\"0\",\"HuYanMode\":false},\"Style_BaiduLite\":true,\"defaultHuYanColor\":\"#DEF1EF\",\"isUserColorEnable\":true,\"isFaviconEnable\":true,\"defaultFaviconUrl\":\"https://cdn.jsdelivr.net/gh/Jintaovo/cdn@master/img/logo/0.ico\",\"doDisableSug\":true,\"isRightDisplayEnable\":false,\"isCounterEnable\":false,\"isALineEnable\":false,\"isUserStyleEnable\":true,\"normalizeDuck\":true,\"acceptLicense\":true,\"isEnLang\":false,\"isGooleInBaiduModeEnable\":false,\"UserBlockList\":[],\"UserStyleText\":\"/**计数器的颜色样式*/\\ndiv .AC-CounterT{\\n  background: #FD9999;\\n}\\n/**右侧栏的样式-其实不开启更好看一些*/\\n#content_right{\\n  padding: 20px 15px 15px;\\n  border-radius: 5px;\\n  background-color: #fff;\\n  box-sizing: border-box;\\n  box-shadow: 0 0 20px 2px rgba(0, 0, 0, .1);\\n  -webkit-box-shadow: 0 0 20px 2px rgba(0, 0, 0, .1);\\n  -moz-box-shadow: 0 0 20px 2px rgba(0, 0, 0, .1);\\n}\\nbody[baidu] {\\n  position: relative;\\n}\\nbody[baidu]:before {\\n  position: fixed;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  left: 0;\\n  content: '';\\n  background: linear-gradient( 90deg, rgba(247, 149, 51, 0.1) 0, rgba(243, 112, 85, 0.1) 15%, rgba(239, 78, 123, 0.1) 30%, rgba(161, 102, 171, 0.1) 44%, rgba(80, 115, 184, 0.1) 58%, rgba(16, 152, 173, 0.1) 72%, rgba(7, 179, 155, 0.1) 86%, rgba(109, 186, 130, 0.1) 100% );;\\n  background-size: 100% auto;\\n  opacity: 1; /*背景图透明度=0.8，最大1*/\\n}\\n/**隐藏首页的大图标-修复可能导致外援样式异常**/\\nbody[baidu] #s_lg_img_new{\\n  display:none !important;\\n}\\nbody[baidu] .c-container{\\n  border-radius: 5px;\\n  background-color: rgba(255,255,255, 0.3) !important; /*百度搜索块体的颜色；透明度=0.1，最大1*/\\n}\\nbody[baidu] .c-container h3{\\n  background-color: rgba(248,248,248, 0.3) !important; /*百度搜索块体 - 标题的颜色；透明度=0.1，最大1*/\\n}\",\"oldVersion\":\"24.26\",\"lastSaveTime\":1635732164207}"},"ts":1635732164207},"enabled":true,"position":1,"file_url":"https://greasyfork.org/scripts/14178-ac-baidu-%E9%87%8D%E5%AE%9A%E5%90%91%E4%BC%98%E5%8C%96%E7%99%BE%E5%BA%A6%E6%90%9C%E7%8B%97%E8%B0%B7%E6%AD%8C%E5%BF%85%E5%BA%94%E6%90%9C%E7%B4%A2-favicon-%E5%8F%8C%E5%88%97/code/AC-baidu-%E9%87%8D%E5%AE%9A%E5%90%91%E4%BC%98%E5%8C%96%E7%99%BE%E5%BA%A6%E6%90%9C%E7%8B%97%E8%B0%B7%E6%AD%8C%E5%BF%85%E5%BA%94%E6%90%9C%E7%B4%A2_favicon_%E5%8F%8C%E5%88%97.user.js","uuid":"fcd21d3c-9141-4866-a9f5-bbcb50734fbf","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgQUMtYmFpZHUt6YeN5a6a5ZCR5LyY5YyW55m+5bqm5pCc54uX6LC35q2M5b+F5bqU5pCc57SiX2Zhdmljb25f5Y+M5YiXCi8vIEBuYW1lOmVuICAgIEFDLWJhaWR1LWdvb2dsZV9zb2dvdV9iaW5nX1JlZGlyZWN0UmVtb3ZlX2Zhdmljb25fYWRhd2F5X1R3b0xpbmUKLy8gQG5hbWU6emggICAgQUMtYmFpZHUt6YeN5a6a5ZCR5LyY5YyW55m+5bqm5pCc54uX6LC35q2M5b+F5bqU5pCc57SiX2Zhdmljb25f5Y+M5YiXCi8vIEBuYW1lOmphICAgIEFDLWJhaWR1LemHjeWumuWQkeacgOmBqeWMlkJhaWR144Gu5pCc54uX44GuR29vZ2xl44GuQmluZ+aknOe0oue1kOaenOOBruODquODgOOCpOODrOOCr+ODiOmZpOWOuytmYXZpY29uCi8vIEBkZXNjcmlwdGlvbiAgMS7nuZ7pgY7nmb7luqbjgIHmkJzni5fjgIHosLfmrYzjgIHlpb3mkJzmkJzntKLntZDmnpzkuK3nmoToh6rlt7HnmoTot7PovYnpj4jmjqXvvIznm7TmjqXoqKrllY/ljp/lp4vntrLpoIEt5Y+N5q2j6YO96IO955yL5oeCIDIu5paw5aKe6Ieq5a6a5LmJ572R56uZ5oum5oiq5Yqf6IO9IDPmt7vliqBGYXZpY29u5pi+56S6IDQu6aG16Z2iQ1NTIDUu5re75Yqg6K6h5pWwIDYu5byA5YWz6YCJ5oup5Lul5LiK5Yqf6IO9IDcu6Ieq5Yqo57+76aG15Yqf6IO9Ci8vIEBkZXNjcmlwdGlvbjplbiAgMS5ieXBhc3MgdGhlIHJlZGlyZWN0IGxpbmsgYXQgYmFpZHVcc29nb3VcZ29vZ2xlXGhhb3NvdTsgMi5yZW1vdmUgYWRzIGF0IGJhaWR1OyAzLmFkZCBGYXZpY29uIGZvciBlYWNoIHdlYnNpdGU7IDQucmVuZGVyIHlvdXIgb3duIHN0eWxlOyA1LmNvdW50ZXI7IDYuU3dpdGNoIHRvIGhhbmRsZSBhbGwgNy5BdXRvIFBhZ2VyCi8vIEBkZXNjcmlwdGlvbjpqYSAgMS7ov4Llm55CYWlkdeOAgVNvZ29144CBR29vZ2xl44CBSGFvc2915qSc57Si5qSc57Si57WQ5p6c44Gu5Lit44Gu6Ieq5YiG44Gu6YG356e744Oq44Oz44KvOyAyLkJhaWR144Gu5L2Z5YiG44Gq5bqD5ZGK44KS5Y+W44KK6Zmk44GPOyAzLuOCs+ODoeODs+ODiOOCkui/veWKoDsgNC7jg5rjg7zjgrjjga7jgqvjgrnjgr/jg6BDU1A7IDUu44Kr44Km44Oz44OI44KS6L+95YqgOyA2LuOCueOCpOODg+ODgeOBr+S7peS4iuOBruapn+iDveOCkumBuOaKnuOBl+OBvuOBmTsgNy7oh6rli5Xjg5rjg7zjgrjjgoHjgY/jgoouCi8vIEBpY29uICAgIGh0dHBzOi8vYWUwMS5hbGljZG4uY29tL2tmL0hhYzFhNTgwNTVjNTA0N2NkYjkxMzQ5ZTkxYWEyMDhkNWsuanBnCi8vIEBhdXRob3IgICAgQUMKLy8gQGxpY2Vuc2UgICAgR1BMLTMuMC1vbmx5Ci8vIEBjcmVhdGUgICAgIDIwMTUtMTEtMjUKLy8gQHJ1bi1hdCAgICAgZG9jdW1lbnQtc3RhcnQKLy8gQHZlcnNpb24gICAgMjQuMjYKLy8gQGNvbm5lY3QgICAgYmFpZHUuY29tCi8vIEBjb25uZWN0ICAgIGdvb2dsZS5jb20KLy8gQGNvbm5lY3QgICAgZ29vZ2xlLmNvbS5oawovLyBAY29ubmVjdCAgICBnb29nbGUuY29tLmpwCi8vIEBjb25uZWN0ICAgIGJpbmcuY29tCi8vIEBjb25uZWN0ICAgIGR1Y2tkdWNrZ28uY29tCi8vIEBjb25uZWN0ICAgIGRvZ2Vkb2dlLmNvbQovLyBAY29ubmVjdCAgICBzby5jb20KLy8gQGluY2x1ZGUgICAgKjovL2lwdjYuYmFpZHUuY29tLyoKLy8gQGluY2x1ZGUgICAgKjovL3d3dy5iYWlkdS5jb20vKgovLyBAaW5jbHVkZSAgICAqOi8vd3d3MS5iYWlkdS5jb20vKgovLyBAaW5jbHVkZSAgICAqOi8vbS5iYWlkdS5jb20vKgovLyBAaW5jbHVkZSAgICAqOi8veHVlc2h1LmJhaWR1LmNvbS9zKgovLyBAaW5jbHVkZSAgICAqOi8vd3d3LnNvLmNvbS9zPyoKLy8gQGluY2x1ZGUgICAgKjovLyouYmluZy5jb20vKgovLyBAaW5jbHVkZSAgICAqOi8vZW5jcnlwdGVkLmdvb2dsZS4qL3NlYXJjaCoKLy8gQGluY2x1ZGUgICAgKjovLyouZ29vZ2xlKi9zZWFyY2gqCi8vIEBpbmNsdWRlICAgICo6Ly8qLmdvb2dsZSovd2ViaHAqCi8vIEBpbmNsdWRlICAgICo6Ly8qLnpoaWh1LmNvbS8qCi8vIEBpbmNsdWRlICAgICo6Ly8qZHVja2R1Y2tnby5jb20vKgovLyBAaW5jbHVkZSAgICAqOi8vKi5kb2dlZG9nZS5jb20vKgovLyBAZXhjbHVkZSAgICAqOi8vKi5nb29nbGUqL3NvcnJ5KgovLyBAZXhjbHVkZSAgICBodHRwczovL3poaWRhby5iYWlkdS5jb20vKgovLyBAZXhjbHVkZSAgICBodHRwczovLyouemhpZGFvLmJhaWR1LmNvbS8qCi8vIEBleGNsdWRlICAgIGh0dHBzOi8vd3d3LmJhaWR1LmNvbS9pbWcvKgovLyBAc3VwcG9ydFVSTCAgaHR0cHM6Ly9hYy50dWppZHUuY29tLwovLyBAaG9tZS11cmwgICBodHRwczovL2dyZWFzeWZvcmsub3JnL3poLVRXL3NjcmlwdHMvMTQxNzgKLy8gQGhvbWUtdXJsMiAgaHR0cHM6Ly9naXRodWIuY29tL2xhbmdyZW4xMzUzL0dNX3NjcmlwdAovLyBAaG9tZXBhZ2VVUkwgIGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvemgtVFcvc2NyaXB0cy8xNDE3OAovLyBAY29weXJpZ2h0ICAyMDE1LTIwMjAsIEFDCi8vIEBsYXN0bW9kaWZpZWQgIDIwMjEtMDktMDIKLy8gQGZlZWRiYWNrLXVybCAgaHR0cHM6Ly9naXRodWIuY29tL2xhbmdyZW4xMzUzL0dNX3NjcmlwdAovLyBAbm90ZSAgICAyMDIxLjA5LTAyLVYyNC4yNiDkv67lpI3lv4XlupTlpJpmYXZpY29u77yM5L+u5aSN55m+5bqm55m+56eR6Zeu6aKY77yb5L+u5aSN6LC35q2M5LiA5Liq5bCP6Zeu6aKYCi8vIEBub3RlICAgIDIwMjEuMDctMTYtVjI0LjI1IOS/ruWkjeS4gOS4qmJ1Z++8m+WFvOWuueeZvuW6puS4i+aQnOe0ouiCoeelqHRhZ++8mwovLyBAbm90ZSAgICAyMDIxLjA2LTE1LVYyNC4yNCDmm7TmjaJjZG7lnLDlnYAKLy8gQG5vdGUgICAgMjAyMS4wNC0xMi1WMjQuMjMg5L+u5aSN6LC35q2M5aSa5YiX5aSx5pWI55qE6Zeu6aKYICYmIOS/ruWkjeiwt+atjOe/u+mhteWkseaViCAmJiDkv67lpI3osLfmrYzmiqTnnLzpl67popgKLy8gQG5vdGUgICAgMjAyMS4wNC0xMi1WMjQuMjEg5L+u5aSN6LC35q2M5pCc57Si6ZSZ5L2N55qE6Zeu6aKYICYmIOS/ruWkjeiwt+atjOWbvueJh+WKoOi9veeahOmXrumimCAmJiDkv67lpI3osLfmrYznv7vpobXnmoTpl67popgKLy8gQG5vdGUgICAgMjAyMS4wMi0xMC1WMjQuMjAg5L+u5aSN6LC35q2M6YOo5YiG5aSx5pWI55qE6Zeu6aKYICYmIOS/ruWkjeeUseS6jkJB5aSx5pWI5a+86Ie055qE6ISa5pys5peg5pWI55qE6Zeu6aKYCi8vIEBub3RlICAgIDIwMjEuMDItMDItVjI0LjE5IOaVsOaNruacrOWcsOe8k+WtmO+8jOS4gOWumueoi+W6puS4iuS/neivgemHjeijheWQjuaVsOaNruS4jeS4ouWksSAmJiDkv67lpI3osLfmrYzpg6jliIblhoXlrrnlpLHmlYjnmoTpl67popgKLy8gQG5vdGUgICAgMjAyMC4xMi0yOS1WMjQuMTgg6LCD5pW05L6n6L655qCP5Yqf6IO95pWI5p6c77yM5LyY5YyW5Y+M5YiX5pi+56S65pWI5p6c77yM5aSE55CGZHVja2R1Y2vnmoTmoLflvI8KLy8gQG5vdGUgICAgMjAyMC4xMi0yOS1WMjQuMTcg6LCD5pW06LC35q2M44CB55m+5bqm5Y+M5YiX5pi+56S65pWI5p6cLeWQhOS4quWIhui+qOeOh++8m+S/ruWkjeeZvuW6pumDqOWIhueCueWHu+WkseaViOeahOmXrumimO+8mwovLyBAbm90ZSAgICAyMDIwLjEyLTIyLVYyNC4xNiDosIPmlbTku6PnoIEt5YeP5bCR6Ie05ZG95byC5bi477yb5L+u5aSN6LC35q2M5Y+M5YiX6Zeu6aKYCi8vIEBub3RlICAgIDIwMjAuMTItMTktVjI0LjE0IOS/ruWkjemDqOWIhuWGheaguOS4iueZvuW6puWkmuWIl+aYvuekuueahOmXrumimO+8m+S/ruWkjeiwt+atjOWkmuWIl+eahOaYvuekuumXrumimAovLyBAbm90ZSAgICAyMDIwLjEyLTE4LVYyNC4xMyDkv67lpI1mYXZpY29u5Zyo55+l5LmO5LiK55qE5o6S54mI6Zeu6aKY77yb5L+u5aSNRHVja+agt+W8j+aXoOaViOeahOmXrumimO+8m+S/ruWkjeacgOaWsOiwt+atjOWPjOWIl+WkseaViOeahOmXrumimCAtIOWwneivleS/ruWkjemDqOWIhueUqOaIt+e/u+mhteWkseaViOmXrumimO+8m+S/ruWkjeiuoeaVsOWZqOe8luWPt+W8guW4uOeahOmXrumimO+8m+abtOWQjeWwneivleS/ruWkjeWunuaViOmXrumimAovLyBAbm90ZSAgICAyMDIwLjEwLTE5LVYyNC4xMiDmi6bmiKrml7bmlK/mjIFVUkzlnLDlnYDnmoTljLnphY3vvIzosIPmlbRmYXZpY29u5Lya5b2x5ZON5qCH6aKY5paH5a2X6YCJ5Lit55qE6Zeu6aKY77yb5L+u5aSN6LC35q2M5oum5oiq5qih5byP5aSx5pWI55qE6Zeu6aKY77yM5L+u5aSN6LC35q2M57yW5Y+36Zeu6aKY77yb5L+u5aSN5b+F5bqU5Zu+54mH5YGP5Y+z55qE6Zeu6aKYCi8vIEBub3RlICAgIDIwMjAuMDktMjktVjI0LjExIOmSiOWvueeZvuW6puW+i+W4iOWHveWGheWuueWvueiEmuacrOi/m+ihjOiwg+aVtO+8jOaJqeWxleKAnOeZvuW6puS8mOWMluKAneW3sue7j+awuOS5heS4i+e6vwovLyBAbm90ZSAgICAyMDIwLjA5LTI3LVYyNC4xMCDkv67lpI3nmb7luqbmi6bmiKrmqKHlvI/nmoTpl67popjku6Xlj4rlsI/lnLDlnYDlsL7ms6jvvJvkv67lpI3lpb3mkJznmoTmi6bmiKrlip/og73vvJvkv67lpI3pg6jliIbmoLflvI/pl67popgKLy8gQG5vdGUgICAgMjAyMC4wOS0xMi1WMjQuMDkg5L+u5aSN57+76aG15aSx5pWI55qE6Zeu6aKY77yb5pu05paw6YOo5YiG5qC35byP5YaF5a65Ci8vIEBub3RlICAgIDIwMjAuMDktMTEtVjI0LjA4IOabtOaNolZ1ZeeahGNkbuWcsOWdgO+8jOWwvemHj+WKoOW/q+aVsOaNrueahOi9veWFpemAn+W6pu+8m+S4uuS6huWFvOWuuXNhZmFyaeWwhueZvuW6pueahGh0dHBz5Zyw5Z2A5pu/5o2i5Li65LqGaHR0cOWcsOWdgO+8m+S/ruWkjWZhdmljb27ojrflj5bnmoTpl67popjvvJvlop7liqBmYXZpY29u5Yqo5oCB5Yi35paw77yb5L+u5aSN6YOo5YiG5qC35byP6Zeu6aKYCi8vIEBub3RlICAgIDIwMjAuMDgtMDYtVjI0LjA3IOS/ruWkjeS/neWtmOaXoOaViOeahOmXrumimO+8m+S/ruWkjeeZvuW6puWcqOWNleWIl+WxheS4reeahOaXtuWAmemUmeS9jeeahOmXrumimAovLyBAbm90ZSAgICAyMDIwLjA4LTA1LVYyNC4wNiDkv67lpI3oh6rlrprkuYnlgbblsJTmiZPkuI3lvIDnmoTpl67popjvvJvkv67lpI3lrprml7blmajlj6/og73kvJrpgKDmiJDnmoTlpLHmlYjnmoTpl67popjvvJvkv67lpI3lvZPlrZjlnKjlpJrkuKrohJrmnKzlj6/og73pgKDmiJDnmoTlhrLnqoHpl67popgKLy8gQG5vdGUgICAgMjAyMC4wOC0wMy1WMjQuMDUg5pu05paw5L+u5aSN5oqk55y85qih5byP55qE6Zeu6aKY77yb5L+u5aSN5omp5bGV5LiK5YG25bCU5aSx5pWI55qE6Zeu6aKY77yb5penRWRnZeS8vOS5jue7j+W4uOacieS/neWtmOS4jeeUn+aViOeahOmXrumimO+8jOa1i+ivleS4jeaYr+aIkeeahOWOn+WboAovLyBAbm90ZSAgICAyMDIwLjA4LTAyLVYyNC4wNCDliqjmgIHmoLflvI/liIfmjaLvvIzlpJrliJfmlYjmnpzkuIDplK7liIfmjaLvvIzml6DpnIDliLfmlrAg5L+u5aSN5ZCE56eN5qC35byP6Zeu6aKYIOS/ruWkjeW/heW6lOe/u+mhtemXrumimCDmtYvor5XlhbzlrrlHTeWSjFZNLuW9u+W6leS4jeaUr+aMgeaQnOeLl+aQnOe0oi0t5Yir6Zeu5Li65LuA5LmI77yM5oiR6L+Y5oOz5aSa5rS75Yeg5bm0Ci8vIEBub3RlICAgIDIwMjAuMDctMjctVjI0LjImMyDmm7TmjaJWdWXkuLo3NeWboueahOWcsOWdgCDkv67lpI3nmb7luqbnmoRsaXRl5qih5byP5YiH5o2i5peg5pWI55qE6Zeu6aKYCi8vIEBub3RlICAgIDIwMjAuMDctMjctVjI0LjAxIOabtOaWsOaUr+aMgUxpbnV45LiL55qERmlyZWZveCBlbW3kv67lpI3kuIrmrKHmj5DkuqTov4fkuo7nnYDmgKXlr7zoh7TnmoTmoLflvI/mnKrmj5DkuqQg5pu05paw5pSv5oyBRG9nZURvZ2XlpJrlkInmkJzntKIt5L2G5LiN5aSE55CG6YeN5a6a5ZCRCi8vIEBub3RlICAgIDIwMjAuMDctMjYtVjI0LjAwIOmDqOWIhuWGheWuueabtOaNouS4ulZ1ZeWIneWni+WMlu+8jOWHj+WwkeS4gOWumueahOi1hOa6kOWNoOeUqCAmJiDmlrDlop5EdWNrR29Hb+eahOagt+W8j+aViOaenCAtIOiAg+iZkeWIsER1Y2tHb0dv55qE54m55oCn77yM5LiN5a+55YW26L+b6KGM5bm/5ZGK6L+H5rukCi8vIEBub3RlICAgIDIwMjAuMDctMDktVjIzLjMzIOS/ruWkjWJpbmfnmoTpobbpg6jliIfmjaLplJnkvY3nmoTpl67popjvvJvlop7liqB3dzEuYmFpZHUuY29t5Z+f77yb5L+u5aSN5ZCE56eN5qC35byPKOeZvuW6puOAgeiwt+atjOOAgeWlveaQnOOAgeW/heW6lCnplJnkvY3nmoTpl67popgKLy8gQG5vdGUgICAgMjAyMC4wNC0yNC1WMjMuMzIg54mI5pys5YCS6YCA77ya5a6J5YWo6LW36KeB77ya6buY6K6k5YWz6Zet5pCc54uX55qE6Ieq5a6a5LmJ5Z+f5ZCN5oum5oiq5Yqf6IO95ZKM6YeN5a6a5ZCR5Yqf6IO9LeS7peWQjuiAg+iZkeabtOaNouaWueW8j++8m+m7mOiupOS4jeW8gOWQr+mHjeWumuWQkeWKn+iDveOAgem7mOiupOS4jeW8gOWQr+W5v+WRiuaLpuaIquWKn+iDve+8m+abtOaWsOmDqOWIhuivtOaYjuWGheWuue+8m+WQjOaXtuS5n+WvuemDqOWIhuaUr+aMgeS4jeWIsOS9jeeahO+8jOWFvOWuueS4jeWlveeahOaViOaenOWQkeWkp+WutuivtOS4gOWjsOaKseatie+8jOS5i+WQjuaIkeS8muabtOWKoOWKquWKm+iuqeaQnOe0oue7k+aenOabtOWKoOaWueS+v+afpeeci+WSjOS9v+eUqAovLyBAbm90ZSAgICAyMDIwLjAzLTI3LVYyMy4zMSDkv67lpI1nb29nbGXnlLHkuo7pobXpnaLnu5PmnoTmm7TmlrDlr7zoh7TnmoRibG9ja+WKn+iDveWkseaViOeahOmXrumimO+8jOWQjOaXtuS/ruWkjeiwt+atjOaKpOecvOaooeW8j+S5n+WkseaViOeahOmXrumimOOAguaWsOWinue/u+mhteeahOaMiemSruS6i+S7tu+8jOaWsOWinuS9v+eUqOWcqOe6v2NvbmZpZ++8jOmBv+WFjeeUseS6jumhtemdoue7k+aehOaUueWKqOWPiOmcgOimgemHjeaWsOaPkOS6pOiEmuacrOabtOaWsAovLyBAbm90ZSAgICAyMDE3LjA1LjEyIC0+IDIwMjAuMDMtMjYgJiYgVjguNiAtPiBWMjMuMzAg5ZCE56eN5ZCE5qC355qE5Y6G5Y+y5pu05paw6K6w5b2V77yM5LuO5LiA5Liq54mI5pys6L+t5Luj5Yiw5Y+m5LiA5Liq54mI5pysCi8vIEBub3RlICAgIDIwMTcuMDUuMTItVjguNCDmlrDlop7vvJrpu5jorqTlsY/olL3osLfmrYznmoTlronlhajmkJzntKLlip/og70KLy8gQG5vdGUgICAgMjAxNy4wNS4wNS1WOC4zIOS/ruWkjWluY2x1ZGXojIPlm7TlpKrlsI/lr7zoh7TnmoTnmb7luqbnn6XpgZPnmoTlsY/olL3pl67popgKLy8gQG5vdGUgICAgMjAxNy4wNS4wNC1WOC4yIOe7iOS6juS/ruWkjeS6hueZvuW6puefpemBk+WbvueJh+abv+aNouS6huaWh+Wtl+eahOi/meS4quWkp0JVRzsg6aG65L6/5aSE55CG5LqGc3VwZXJhcGkuemhpZGFvLmJhaWR1LmNvbTsg5paw5aKe6LC35q2M5pCc57Si57uT5p6c6YeN5a6a5ZCR5Y676ZmkCi8vIEBub3RlICAgIDIwMTcuMDUuMDQtVjguMSDnu4jkuo7kv67lpI3kuobnmb7luqbnn6XpgZPlm77niYfmm7/mjaLkuobmloflrZfnmoTov5nkuKrlpKdCVUfvvIzpobrkvr/lpITnkIbkuoZzdXBlcmFwaS56aGlkYW8uYmFpZHUuY29tCi8vIEBub3RlICAgIDIwMTcuMDUuMDQtVjguMCDnu4jkuo7kv67lpI3kuobnmb7luqbnn6XpgZPlm77niYfmm7/mjaLkuobmloflrZfnmoTov5nkuKrlpKdCVUfvvIzlvoXmtYvor5UKLy8gQG5vdGUgICAgMjAxNy4wMy4yOC1WNy42IOS/ruWkjeWcqFZpb2xlbnRNb25rZXnkuIrnmoTkuI3mlK/mjIHnmoTpl67popgKLy8gQG5vdGUgICAgMjAxNy4wMy4yOC1WNy41IOWwneivleS/ruWkjWNocm9tZeS4iueahOmXrumimAovLyBAbm90ZSAgICAyMDE3LjAzLjIxLVY3LjQg5bCd6K+V5aSE55CGRWRnZeS4iuS4jeaUr+aMgeeahOmXrumimO+8jOe7k+aenOWPkeeOsOaYr0VkZ2XmnKzouqvnmoRUYW1wZXJNb25rZXnmlK/mjIHmnInpl67popgKLy8gQG5vdGUgICAgMjAxNy4wMy4xOS1WNy4zIOS/ruWkjeaJk+W8gOeZvuW6puS5i+WQjuWGjeasoeeCueWHu+KAnOeZvuW6puS4gOS4i+KAneWvvOiHtOeahOaXoOazleabtOaWsOmHjeWumuWQkemXrumimAovLyBAbm90ZSAgICAyMDE3LjAzLjE5LVY3LjIg5pyq55+l5Y6f5ZugY2hyb21l55qETXV0YXRpb25PYnNlcnZlcuaXoOazleS9v+eUqOS6hu+8jOe7p+e7reWbnuW9kuS7peWJjeeahERPTU5vZGVJbnNlcnRlZAovLyBAbm90ZSAgICAyMDE3LjAyLjE3LVY3LjAg5L+u5aSN5pCc54uX55qE5pCc57Si57uT5p6c6YeN5a6a5ZCR6Zeu6aKYK+aUueS4quWQjeWtlwovLyBAbm90ZSAgICAyMDE3LjAyLjE3LVY2Ljkg5L+u5aSN5pCc54uX55qE5pCc57Si57uT5p6c6YeN5a6a5ZCR6Zeu6aKYCi8vIEBub3RlICAgIDIwMTYuMTAuMjctVjYuNyDkv67lpI3kuobku6XliY3nmoTph43lpI3or7fmsYLvvIznjrDlnKjnmoTor7fmsYLmlbDlupTor6XlsI/kuoblvojlpJrvvIznvZHnu5zkuZ/lsLHkuI3ljaHkuobvvIzmhJ/op4nokIzokIzlk5IKLy8gQG5vdGUgICAgMjAxNi4wNC4yNC1WNi42IOaBouWkjeS7peWJjeeahOeJiOacrO+8jOWboOS4uuWFvOWuueaAp+mXrumimAovLyBAbm90ZSAgICAyMDE1LjEyLjAxLVY1LjAg5Yqg5YWl5pCc54uX55qE5pSv5oyB77yM5L2G5piv5pSv5oyB5LiN5piv5b6I5aW9Ci8vIEBub3RlICAgIDIwMTUuMTEuMjUtVjIuMCDkvJjljJbvvIzlt7Lnu4/mmK/nnJ/lrp7lnLDlnYDnmoTkuI3lho3lsJ3or5Xojrflj5YKLy8gQG5vdGUgICAgMjAxNS4xMS4yNS1WMS4wIOWujOaIkOWOu+aOieeZvuW6pumHjeWumuWQkeeahOWKn+iDvQovLyBAcmVzb3VyY2UgIGJhaWR1Q29tbW9uU3R5bGUgICBodHRwOi8vaWJhaWR1LnR1amlkdS5jb20vbmV3Y3NzL2JhaWR1Q29tbW9uU3R5bGUuY3NzP3Q9MjQuMjYKLy8gQHJlc291cmNlICBiYWlkdU9uZVBhZ2VTdHlsZSAgaHR0cDovL2liYWlkdS50dWppZHUuY29tL25ld2Nzcy9iYWlkdU9uZVBhZ2VTdHlsZS5jc3M/dD0yNC4yNgovLyBAcmVzb3VyY2UgIGJhaWR1VHdvUGFnZVN0eWxlICBodHRwOi8vaWJhaWR1LnR1amlkdS5jb20vbmV3Y3NzL2JhaWR1VHdvUGFnZVN0eWxlLmNzcz90PTI0LjI2Ci8vIEByZXNvdXJjZSAgYmFpZHVMaXRlU3R5bGUgICAgIGh0dHA6Ly9pYmFpZHUudHVqaWR1LmNvbS9uZXdjc3MvYmFpZHVMaXRlU3R5bGUuY3NzP3Q9MjQuMjYKLy8gQHJlc291cmNlICBnb29nbGVDb21tb25TdHlsZSAgaHR0cDovL2liYWlkdS50dWppZHUuY29tL25ld2Nzcy9nb29nbGVDb21tb25TdHlsZS5jc3M/dD0yNC4yNgovLyBAcmVzb3VyY2UgIGdvb2dsZU9uZVBhZ2VTdHlsZSBodHRwOi8vaWJhaWR1LnR1amlkdS5jb20vbmV3Y3NzL2dvb2dsZU9uZVBhZ2VTdHlsZS5jc3M/dD0yNC4yNgovLyBAcmVzb3VyY2UgIGdvb2dsZVR3b1BhZ2VTdHlsZSBodHRwOi8vaWJhaWR1LnR1amlkdS5jb20vbmV3Y3NzL2dvb2dsZVR3b1BhZ2VTdHlsZS5jc3M/dD0yNC4yNgovLyBAcmVzb3VyY2UgIGJpbmdDb21tb25TdHlsZSAgICBodHRwOi8vaWJhaWR1LnR1amlkdS5jb20vbmV3Y3NzL2JpbmdDb21tb25TdHlsZS5jc3M/dD0yNC4yNgovLyBAcmVzb3VyY2UgIGJpbmdPbmVQYWdlU3R5bGUgICBodHRwOi8vaWJhaWR1LnR1amlkdS5jb20vbmV3Y3NzL2JpbmdPbmVQYWdlU3R5bGUuY3NzP3Q9MjQuMjYKLy8gQHJlc291cmNlICBiaW5nVHdvUGFnZVN0eWxlICAgaHR0cDovL2liYWlkdS50dWppZHUuY29tL25ld2Nzcy9iaW5nVHdvUGFnZVN0eWxlLmNzcz90PTI0LjI2Ci8vIEByZXNvdXJjZSAgZHVja0NvbW1vblN0eWxlICAgIGh0dHA6Ly9pYmFpZHUudHVqaWR1LmNvbS9uZXdjc3MvZHVja0NvbW1vblN0eWxlLmNzcz90PTI0LjI2Ci8vIEByZXNvdXJjZSAgZHVja09uZVBhZ2VTdHlsZSAgIGh0dHA6Ly9pYmFpZHUudHVqaWR1LmNvbS9uZXdjc3MvZHVja09uZVBhZ2VTdHlsZS5jc3M/dD0yNC4yNgovLyBAcmVzb3VyY2UgIGR1Y2tUd29QYWdlU3R5bGUgICBodHRwOi8vaWJhaWR1LnR1amlkdS5jb20vbmV3Y3NzL2R1Y2tUd29QYWdlU3R5bGUuY3NzP3Q9MjQuMjYKLy8gQHJlc291cmNlICBkb2dlQ29tbW9uU3R5bGUgICAgaHR0cDovL2liYWlkdS50dWppZHUuY29tL25ld2Nzcy9kb2dlQ29tbW9uU3R5bGUuY3NzP3Q9MjQuMjYKLy8gQHJlc291cmNlICBkb2dlT25lUGFnZVN0eWxlICAgaHR0cDovL2liYWlkdS50dWppZHUuY29tL25ld2Nzcy9kb2dlT25lUGFnZVN0eWxlLmNzcz90PTI0LjI2Ci8vIEByZXNvdXJjZSAgZG9nZVR3b1BhZ2VTdHlsZSAgIGh0dHA6Ly9pYmFpZHUudHVqaWR1LmNvbS9uZXdjc3MvZG9nZVR3b1BhZ2VTdHlsZS5jc3M/dD0yNC4yNgovLyBAcmVzb3VyY2UgIE1haW5IdVlhblN0eWxlICAgICBodHRwOi8vaWJhaWR1LnR1amlkdS5jb20vbmV3Y3NzL0h1WWFuU3R5bGUuY3NzP3Q9MjQuMjYKLy8gQHJlc291cmNlICBTaXRlQ29uZmlnUnVsZXMgICAgaHR0cDovL2liYWlkdS50dWppZHUuY29tL25ld2Nzcy9TaXRlQ29uZmlnUnVsZXMuY29uZj90PTI0LjI2Ci8vIEByZXF1aXJlIGh0dHBzOi8vY2RuLnN0YXRpY2ZpbGUub3JnL3Z1ZS8yLjYuMTEvdnVlLm1pbi5qcwovLyBAcmVxdWlyZSBodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL3Z1ZUAyLjYuMTIvZGlzdC92dWUubWluLmpzCi8vIEBncmFudCAgICBHTV9nZXRWYWx1ZQovLyBAZ3JhbnQgICAgR00uZ2V0VmFsdWUKLy8gQGdyYW50ICAgIEdNX3NldFZhbHVlCi8vIEBncmFudCAgICBHTS5zZXRWYWx1ZQovLyBAZ3JhbnQgICAgR01fYWRkU3R5bGUKLy8gQGdyYW50ICAgIEdNX2dldFJlc291cmNlVVJMCi8vIEBncmFudCAgICBHTV9saXN0VmFsdWVzCi8vIEBncmFudCAgICBHTV9nZXRSZXNvdXJjZVVybAovLyBAZ3JhbnQgICAgR00uZ2V0UmVzb3VyY2VVcmwKLy8gQGdyYW50ICAgIEdNX3htbGh0dHBSZXF1ZXN0Ci8vIEBncmFudCAgICBHTV9nZXRSZXNvdXJjZVRleHQKLy8gQGdyYW50ICAgIEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQKLy8gQGdyYW50ICAgIHVuc2FmZVdpbmRvdwovLyBAbmFtZXNwYWNlIDEzNTM0NjQ1MzlAcXEuY29tCi8vID09L1VzZXJTY3JpcHQ9PQovLyBjYWxjKFgxKHZ3KSArIFgyKHB4KSkgLT4gQihweCkg5L2/55SoIGh0dHA6Ly93d3cueXVuc3Vhbi5pbmZvL21hdHJpeGNvbXB1dGF0aW9ucy9zb2x2ZWxpbmVhcnN5c3RlbXMuaHRtbCDov5vooYzorqHnrpcKIWZ1bmN0aW9uICgpIHsKICBsZXQgaXNkZWJ1ZyA9IGZhbHNlOwogIGxldCBpc0xvY2FsRGVidWcgPSBpc2RlYnVnIHx8IGZhbHNlOwogIGxldCBkZWJ1ZyA9IGlzZGVidWcgPyBjb25zb2xlLmxvZy5iaW5kKGNvbnNvbGUpIDogKCk9Pnt9CiAgbGV0IGFjQ3NzTG9hZEZsYWcgPSBmYWxzZTsKCiAgbGV0IGluRXh0TW9kZSA9IHR5cGVvZiAoaXNFeHRlbnNpb24pICE9PSAidW5kZWZpbmVkIjsKICBsZXQgaW5HTU1vZGUgPSB0eXBlb2YgKEdNX2luZm8uc2NyaXB0SGFuZGxlcikgIT09ICJ1bmRlZmluZWQiOyAvLyA9ICJHcmVhc2Vtb25rZXkiIHx8ICJUYW1wZXJtb25rZXkiIHx8ICJWaW9sZW50TW9ua2V5IgogIC8vIOaWsOeJiOacrOeahEdyZWFzZU1vbmtleeaYr+W4puaciXNjcmlwdEhhbmRsZXLvvIzkvYbmmK/msqHmnIlHTV9nZXRSZXNvdXJjZVRleHTvvJvml6fniYjmnKzkuI3luKZzY3JpcHRIYW5kbGVy77yM5L2G5piv5pyJR01fZ2V0UmVzb3VyY2VUZXh0CiAgLy8gbGV0IGlzTmV3R00gPSB0eXBlb2YoR01faW5mby5zY3JpcHRIYW5kbGVyKSAhPT0gInVuZGVmaW5lZCIgJiYgR01faW5mby5zY3JpcHRIYW5kbGVyLnRvTG93ZXJDYXNlKCkgPT09ICJncmVhc2Vtb25rZXkiOwogIGxldCBpc05ld0dNID0gZmFsc2U7CiAgLy8gaW5FeHRNb2RlICYgaW5HTU1vZGUKICAvLyB0cnVlICAgIHRydWUgPeaJqeWxleS4i+eahEdN5Luj56CBIOS4jeaJp+ihjAogIC8vIHRydWUgICAgZmFsc2U95omp5bGV5LiL5Luj56CBIOaJp+ihjAogIC8vIGZhbHNlICB0cnVlID3ku4VHTeS7o+eggSDmiafooYwKICAvLyBmYWxzZSAgZmFsc2U95byC5bi4IOS9huaYr+i/mOaYr+imgeaJp+ihjOS7o+eggQogIGRlYnVnKCLnqIvluo/lvIDlp4siKTsKICBpZiAoaW5FeHRNb2RlID09PSB0cnVlICYmIGluR01Nb2RlID09PSB0cnVlIHx8IHR5cGVvZih3aW5kb3cuQUM2NjZJbml0KSAhPT0gJ3VuZGVmaW5lZCcpIHsKICAgIGNvbnNvbGUubG9nKCLmianlsZXmqKHlvI8t6ISa5pys5LiN5ZCv55SoIik7CiAgICByZXR1cm47CiAgfQogIHdpbmRvdy5BQzY2NkluaXQgPSB0cnVlCiAgaWYgKHR5cGVvZiAoR00pID09PSAidW5kZWZpbmVkIikgewogICAgLy8g6L+Z5Liq5pivVmlvbGVudE1vbmtleeeahOaUr+aMgemAiemhuQogICAgR00gPSB7fTsKICAgIEdNLnNldFZhbHVlID0gR01fc2V0VmFsdWU7CiAgICBHTS5nZXRWYWx1ZSA9IEdNX2dldFZhbHVlOwogIH0KICAoZnVuY3Rpb24gKCkgewogICAgZGVidWcoIueoi+W6j+aJp+ihjCIpOwogICAgbGV0IG5lZWREaXNwbGF5TmV3RnVuID0gdHJ1ZTsgLy8g5pys5qyh5pu05paw5piv5ZCm5pyJ5paw5Yqf6IO96ZyA6KaB5bGV56S6CiAgICBpZiAod2luZG93Lk5vZGVMaXN0ICYmICFOb2RlTGlzdC5wcm90b3R5cGUuZm9yRWFjaCkgewogICAgICBOb2RlTGlzdC5wcm90b3R5cGUuZm9yRWFjaCA9IGZ1bmN0aW9uIChjYWxsYmFjaywgdGhpc0FyZykgewogICAgICAgIHRoaXNBcmcgPSB0aGlzQXJnIHx8IHdpbmRvdzsKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGNhbGxiYWNrLmNhbGwodGhpc0FyZywgdGhpc1tpXSwgaSwgdGhpcyk7CiAgICAgICAgfQogICAgICB9OwogICAgfQogICAgLy8gbGV0IFJlZGlyZWN0TWFwID0gbmV3IE1hcCgpOwogICAgbGV0IEFDQ29uZmlnID0ge307CiAgICBsZXQgREJDb25maWcgPSB7fTsgLy8g5LuF5L2c5Li65pmu6YCaQUNDb25maWfnmoTljp/lp4vlpIfku73vvIzlnKjlhbbku5bpnZ7lhbPplK7kvY3nva7ml7bov5vooYzkv53lrZjkvb/nlKgKICAgIC8q5a2Y5Zyo5a+55pyq5Yid5aeL5YyW5Y+Y6YeP55qE5Yid5aeL5YyW6LWL5YC8LeaXoOmcgOaLheW/g+i/reS7o+WFvOWuuemXrumimCovCiAgICBsZXQgRGVmYXVsdENvbmZpZyA9IHsKICAgICAgaXNSZWRpcmVjdEVuYWJsZTogZmFsc2UsICAvLyDmmK/lkKblvIDlkK/ph43lrprlkJHlip/og70KICAgICAgaXNBZHNFbmFibGU6IGZhbHNlLCAvLyDmmK/lkKblvIDlkK/ljrvlub/lkYrmqKHlvI8KICAgICAgaXNBdXRvcGFnZTogdHJ1ZSwgIC8vIOaYr+WQpuW8gOWQr+iHquWKqOe/u+mhteWKn+iDvQogICAgICBpc0Jsb2NrRW5hYmxlOiBmYWxzZSwgLy8g5piv5ZCm5byA5ZCv5Y675oum5oiq5qih5byPCiAgICAgIGlzQmxvY2tEaXNwbGF5OiBmYWxzZSwgLy8g5piv5ZCm5Yig6Zmk5bey5oum5oiq55qE5p2h55uuCiAgICAgIGlzQmxvY2tCdG5Ob3REaXNwbGF5OiBmYWxzZSwgLy8g5piv5ZCm5pi+56S6YmxvY2vmjInpkq4KICAgICAgQWRzU3R5bGVFbmFibGU6IHRydWUsIC8vIOaYr+WQpuW8gOWQr+iHquWumuS5ieagt+W8j+aooeW8jwoKICAgICAgYmFpZHU6IHsKICAgICAgICBuYW1lOiAnYmFpZHUnLCAgLy8gQ1NTIGxvYWQg55qE5YmN57yA5qCH5b+XCiAgICAgICAgQWRzU3R5bGVNb2RlOiAnMScsIC8vIDAt5LiN5bimY3Nz77ybMS3ljZXliJfpnaDlt6bvvJsyLeWNleWIl+WxheS4re+8mzMt5Y+M5YiX5bGF5LitCiAgICAgICAgSHVZYW5Nb2RlOiBmYWxzZSwgLy8g5oqk55y85qih5byPLeeZvuW6pgogICAgICB9LAogICAgICBnb29nbGU6IHsKICAgICAgICBuYW1lOiAnZ29vZ2xlJywKICAgICAgICBBZHNTdHlsZU1vZGU6ICczJywgLy8gMC3kuI3luKZjc3PvvJsxLeWNleWIl+mdoOW3pu+8mzIt5Y2V5YiX5bGF5Lit77ybMy3lj4zliJflsYXkuK0KICAgICAgICBIdVlhbk1vZGU6IGZhbHNlLCAvLyDmiqTnnLzmqKHlvI8t6LC35q2MCiAgICAgIH0sCiAgICAgIGJpbmc6IHsKICAgICAgICBuYW1lOiAnYmluZycsCiAgICAgICAgQWRzU3R5bGVNb2RlOiAnMycsIC8vIDAt5LiN5bimY3Nz77ybMS3ljZXliJfpnaDlt6bvvJsyLeWNleWIl+WxheS4re+8mzMt5Y+M5YiX5bGF5LitCiAgICAgICAgSHVZYW5Nb2RlOiBmYWxzZSwgLy8g5oqk55y85qih5byPLeW/heW6lAogICAgICB9LAogICAgICBkdWNrOiB7CiAgICAgICAgbmFtZTogJ2R1Y2snLAogICAgICAgIEFkc1N0eWxlTW9kZTogJzMnLCAvLyAwLeS4jeW4pmNzc++8mzEt5Y2V5YiX6Z2g5bem77ybMi3ljZXliJflsYXkuK3vvJszLeWPjOWIl+WxheS4rQogICAgICAgIEh1WWFuTW9kZTogZmFsc2UsIC8vIOaKpOecvOaooeW8jy1EdWNrR09HTwogICAgICB9LAogICAgICBkb2dlOiB7CiAgICAgICAgbmFtZTogJ2RvZ2UnLAogICAgICAgIEFkc1N0eWxlTW9kZTogJzMnLCAvLyAwLeS4jeW4pmNzc++8mzEt5Y2V5YiX6Z2g5bem77ybMi3ljZXliJflsYXkuK3vvJszLeWPjOWIl+WxheS4rQogICAgICAgIEh1WWFuTW9kZTogZmFsc2UsIC8vIOaKpOecvOaooeW8jy1EdWNrR09HTwogICAgICB9LAogICAgICBzb2dvdTogewogICAgICAgIG5hbWU6ICdzb2dvdScsCiAgICAgICAgQWRzU3R5bGVNb2RlOiAnMScsIC8vIDAt5LiN5bimY3Nz77ybMS3ljZXliJfpnaDlt6bvvJsyLeWNleWIl+WxheS4re+8mzMt5Y+M5YiX5bGF5LitCiAgICAgICAgSHVZYW5Nb2RlOiBmYWxzZSwgLy8g5oqk55y85qih5byPLeaQnOeLlwogICAgICB9LAogICAgICB6aGlodTogewogICAgICAgIG5hbWU6ICd6aGlodScsCiAgICAgICAgQWRzU3R5bGVNb2RlOiAnMCcsIC8vIDAt5LiN5bimY3Nz77ybMS3ljZXliJfpnaDlt6bvvJsyLeWNleWIl+WxheS4re+8mzMt5Y+M5YiX5bGF5LitCiAgICAgICAgSHVZYW5Nb2RlOiBmYWxzZSwgLy8g5oqk55y85qih5byPLeaQnOeLlwogICAgICB9LAogICAgICBvdGhlcjogewogICAgICAgIG5hbWU6ICdvdGhlcicsCiAgICAgICAgQWRzU3R5bGVNb2RlOiAnMCcsIC8vIDAt5LiN5bimY3Nz77ybMS3ljZXliJfpnaDlt6bvvJsyLeWNleWIl+WxheS4re+8mzMt5Y+M5YiX5bGF5LitCiAgICAgICAgSHVZYW5Nb2RlOiBmYWxzZSwgLy8g5oqk55y85qih5byPLeaQnOeLlwogICAgICB9LAoKICAgICAgU3R5bGVfQmFpZHVMaXRlOiBmYWxzZSwgLy8gQmFpZHVfTGl0Zeagt+W8j+ihqAoKICAgICAgZGVmYXVsdEh1WWFuQ29sb3I6ICIjREVGMUVGIiwKICAgICAgaXNVc2VyQ29sb3JFbmFibGU6IHRydWUsIC8vIOaYr+WQpuW8gOWQr2Zhdmljb27lm77moIflip/og70KICAgICAgaXNGYXZpY29uRW5hYmxlOiB0cnVlLCAvLyDmmK/lkKblvIDlkK9mYXZpY29u5Zu+5qCH5Yqf6IO9CiAgICAgIGRlZmF1bHRGYXZpY29uVXJsOiAiaHR0cHM6Ly9hZTAxLmFsaWNkbi5jb20va2YvSFRCMWRSWTBYOE9EM0tWalNaRkZxNkFuOXBYYXkuanBnIiwgLy8g6buY6K6k5Zu+5qCH5Zyw5Z2ACiAgICAgIGRvRGlzYWJsZVN1ZzogdHJ1ZSwgLy8g5piv5ZCm56aB5q2i55m+5bqm5pCc57Si6aKE5rWLCiAgICAgIGlzUmlnaHREaXNwbGF5RW5hYmxlOiB0cnVlLCAvLyDmmK/lkKblvIDlkK/lj7PkvqfovrnmoI8KICAgICAgaXNDb3VudGVyRW5hYmxlOiBmYWxzZSwgLy8g5piv5ZCm5pi+56S66K6h5pWw5ZmoCiAgICAgIGlzQUxpbmVFbmFibGU6IGZhbHNlLCAvLyDmmK/lkKbnpoHmraLkuIvliJLnur8KICAgICAgaXNVc2VyU3R5bGVFbmFibGU6IGZhbHNlLCAvLyDmmK/lkKblvIDlkK/oh6rlrprkuYnmoLflvI8KICAgICAgbm9ybWFsaXplRHVjazogdHJ1ZSwgLy8g5piv5ZCm5oyJ54Wn5bi455So5Lmg5oOv5Y676YWN572uRHVja0R1Y2tHbwogICAgICBhY2NlcHRMaWNlbnNlOiBmYWxzZSwKICAgICAgaXNFbkxhbmc6IGZhbHNlLAogICAgICBpc0dvb2xlSW5CYWlkdU1vZGVFbmFibGU6IGZhbHNlLCAvLyDmmK/lkKblvIDlkK/osLfmrYzmkJzntKLnu5PmnpzpobXnmoTnmb7luqblm77moIfmmL7npLoKICAgICAgVXNlckJsb2NrTGlzdDogW10sCiAgICAgIFVzZXJTdHlsZVRleHQ6CiAgICAgICAgYC8qKuiuoeaVsOWZqOeahOminOiJsuagt+W8jyovCmRpdiAuQUMtQ291bnRlclR7CiAgYmFja2dyb3VuZDogI0ZEOTk5OTsKfQovKirlj7PkvqfmoI/nmoTmoLflvI8t5YW25a6e5LiN5byA5ZCv5pu05aW955yL5LiA5LqbKi8KI2NvbnRlbnRfcmlnaHR7CiAgcGFkZGluZzogMjBweCAxNXB4IDE1cHg7CiAgYm9yZGVyLXJhZGl1czogNXB4OwogIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CiAgYm94LXNpemluZzogYm9yZGVyLWJveDsKICBib3gtc2hhZG93OiAwIDAgMjBweCAycHggcmdiYSgwLCAwLCAwLCAuMSk7CiAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMjBweCAycHggcmdiYSgwLCAwLCAwLCAuMSk7CiAgLW1vei1ib3gtc2hhZG93OiAwIDAgMjBweCAycHggcmdiYSgwLCAwLCAwLCAuMSk7Cn0KYm9keVtiYWlkdV0gewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKfQpib2R5W2JhaWR1XTpiZWZvcmUgewogIHBvc2l0aW9uOiBmaXhlZDsKICB3aWR0aDogMTAwJTsKICBoZWlnaHQ6IDEwMCU7CiAgdG9wOiAwOwogIGxlZnQ6IDA7CiAgY29udGVudDogJyc7CiAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCdodHRwczovL2ltZy50dWppZHUuY29tL2ltYWdlLzVmZGRlODQ2ODQyM2UuanBnJyk7CiAgYmFja2dyb3VuZC1zaXplOiAxMDAlIGF1dG87CiAgb3BhY2l0eTogMTsgLyrog4zmma/lm77pgI/mmI7luqY9MC4477yM5pyA5aSnMSovCn0KLyoq6ZqQ6JeP6aaW6aG155qE5aSn5Zu+5qCHLeS/ruWkjeWPr+iDveWvvOiHtOWkluaPtOagt+W8j+W8guW4uCoqLwpib2R5W2JhaWR1XSAjc19sZ19pbWdfbmV3ewogIGRpc3BsYXk6bm9uZSAhaW1wb3J0YW50Owp9CmJvZHlbYmFpZHVdIC5jLWNvbnRhaW5lcnsKICBib3JkZXItcmFkaXVzOiA1cHg7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsMjU1LDI1NSwgMC4zKSAhaW1wb3J0YW50OyAvKueZvuW6puaQnOe0ouWdl+S9k+eahOminOiJsu+8m+mAj+aYjuW6pj0wLjHvvIzmnIDlpKcxKi8KfQpib2R5W2JhaWR1XSAuYy1jb250YWluZXIgaDN7CiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNDgsMjQ4LDI0OCwgMC4zKSAhaW1wb3J0YW50OyAvKueZvuW6puaQnOe0ouWdl+S9kyAtIOagh+mimOeahOminOiJsu+8m+mAj+aYjuW6pj0wLjHvvIzmnIDlpKcxKi8KfWAsCiAgICAgIG9sZFZlcnNpb246ICIiLAogICAgICBsYXN0U2F2ZVRpbWU6IG5ldyBEYXRlKCkuZ2V0VGltZSgpLAogICAgfTsKICAgIGxldCBDT05TVCA9IHsKICAgICAgaGFzTmV3RnVuY05lZWREaXNwbGF5OiB0cnVlLAogICAgICBzb3J0SW5kZXg6IDEsCiAgICAgIGlzR29vZ2xlSW1hZ2VVcmw6IGZhbHNlLAogICAgICBpc0dvb2dsZVNwZWNpYWw6IGZhbHNlLCAvLyDliKTmlq3mmK/lkKblrZjlnKgjcnNvPi5nOyB0cnVlPeWtmOWcqAogICAgICB1c2VJdGVtOiB7fSwKICAgICAgU3R5bGVNYW5nZXI6IGZ1bmN0aW9uICgpIHsKICAgICAgfSwKICAgIH07CgogICAgdmFyIGN1clNpdGUgPSB7CiAgICAgIFNpdGVUeXBlSUQ6IDEsICAvLyDlvZPliY3nq5nngrnnmoRJRAogICAgICBNYWluVHlwZTogIiIsICAgIC8vIOS4u+S9k+iKgueCue+8jOW+iOWkmuS4queahOeItuiKgueCuQogICAgICBTdHlwZV9Ob3JtYWw6ICIiLCAvLyDph43lrprlkJHpgInmi6nlmajvvIzlj6rmnInnmb7luqYt5pCc54uXLeWlveaQnAogICAgICBGYXZpY29uVHlwZTogIiIsICAvLyBmYXZpY29u55qE5Z+f5ZCN5qOA5p+l5ZmoY2l0Ze+8jOeUqOS6juiOt+WPlmhvc3TnlKgKICAgICAgRmF2aWNvbkFkZFRvOiAiIiwgLy8gZmF2aWNvbumAieaLqeWZqO+8jOeUqOS6juaPkuWFpeWIsHRpdGxl5LmL5YmN55qECiAgICAgIENvdW50ZXJUeXBlOiAiIiwgIC8vIOiuoeaVsOWZqOa3u+WKoOeahOS9jee9ru+8jOS4gOiIrOWSjGZhdmljb27kvY3nva7kuIDoh7QKICAgICAgQmxvY2tUeXBlOiAiIiwgIC8vIOWxj+iUveaMiemSrueahOS9jee9ru+8jOS4gOiIrOWcqHRpdGxl5LmL5ZCOCiAgICB9OwogICAgbGV0IERCU2l0ZSA9IHsKICAgICAgYmFpZHU6IHsKICAgICAgICBTaXRlVHlwZUlEOiAxLAogICAgICAgIE1haW5UeXBlOiAiI2NvbnRlbnRfbGVmdCAuYy1jb250YWluZXIiLAogICAgICAgIFN0eXBlX05vcm1hbDogImgzLnQ+YSwgLmMtY29udGFpbmVyIGFydGljbGUgYSIsCiAgICAgICAgRmF2aWNvblR5cGU6ICIuYy1zaG93dXJsIiwKICAgICAgICBGYXZpY29uQWRkVG86ICJoMyIsCiAgICAgICAgQ291bnRlclR5cGU6ICIjY29udGVudF9sZWZ0PiNkb3VibGU+ZGl2W3NyY2lkXSAqW2NsYXNzfj10XSxbY2xhc3N+PW9wX2Jlc3RfYW5zd2VyX3F1ZXN0aW9uXSwjY29udGVudF9sZWZ0PmRpdltzcmNpZF0gKltjbGFzc349dF0sW2NsYXNzfj1vcF9iZXN0X2Fuc3dlcl9xdWVzdGlvbl0iLAogICAgICAgIEJsb2NrVHlwZTogImgzIGEiLAogICAgICAgIHBhZ2VyOiB7CiAgICAgICAgICBuZXh0TGluazogJy8vZGl2W0BpZD0icGFnZSJdLy9hW2NvbnRhaW5zKHRleHQoKSwi5LiL5LiA6aG1IildW0BocmVmXScsCiAgICAgICAgICBwYWdlRWxlbWVudDogImNzcztkaXYjY29udGVudF9sZWZ0ID4gKiIsCiAgICAgICAgICBIVF9pbnNlcnQ6IFsiY3NzO2RpdiNjb250ZW50X2xlZnQiLCAyXSwKICAgICAgICAgIHJlcGxhY2VFOiAiY3NzOyNwYWdlIiwKICAgICAgICAgIHN0eWxpc2g6ICIuYXV0b3BhZ2VyaXplX3BhZ2VfaW5mbywgZGl2LnNwLXNlcGFyYXRvciB7bWFyZ2luLWJvdHRvbTogMTBweCAhaW1wb3J0YW50O30iLAogICAgICAgIH0KICAgICAgfSwKICAgICAgc29nb3U6IHsKICAgICAgICBTaXRlVHlwZUlEOiAyLAogICAgICAgIE1haW5UeXBlOiAiI21haW4gLnJlc3VsdHM+ZGl2IiwKICAgICAgICBTdHlwZV9Ob3JtYWw6ICJoMy5wdD5hLCBoMy52clRpdGxlPmEiLAogICAgICAgIEZhdmljb25UeXBlOiAiY2l0ZVtpZCo9J2NhY2hlcmVzdWx0X2luZm9fJ10iLAogICAgICAgIEZhdmljb25BZGRUbzogImgzIiwKICAgICAgICBDb3VudGVyVHlwZTogIi5yZXN1bHRzPmRpdiIsCiAgICAgICAgQmxvY2tUeXBlOiAiaDMgYSIsCiAgICAgICAgcGFnZXI6IHsKICAgICAgICAgIG5leHRMaW5rOiAiLy9kaXZbQGlkPVwicGFnZWJhcl9jb250YWluZXJcIl0vL2FbQGlkPVwic29nb3VfbmV4dFwiXSIsCiAgICAgICAgICBwYWdlRWxlbWVudDogIi8vZGl2W0BjbGFzcz1cInJlc3VsdHNcIl0vZGl2IiwKICAgICAgICAgIEhUX2luc2VydDogWyIvL2RpdltAY2xhc3M9XCJyZXN1bHRzXCJdIiwgMl0sCiAgICAgICAgICByZXBsYWNlRTogImlkKFwicGFnZWJhcl9jb250YWluZXJcIikiCiAgICAgICAgfQogICAgICB9LAogICAgICBoYW9zb3U6IHsKICAgICAgICBTaXRlVHlwZUlEOiAzLAogICAgICAgIE1haW5UeXBlOiAiLnJlcy1saXN0IiwKICAgICAgICBTdHlwZV9Ob3JtYWw6ICIucmVzLWxpc3QgaDM+YSIsCiAgICAgICAgRmF2aWNvblR5cGU6ICJjaXRlIiwKICAgICAgICBGYXZpY29uQWRkVG86ICJoMyIsCiAgICAgICAgQ291bnRlclR5cGU6ICIucmVzdWx0cz5kaXYiLAogICAgICAgIEJsb2NrVHlwZTogImgzIGEiLAogICAgICAgIHBhZ2VyOiB7CiAgICAgICAgICBuZXh0TGluazogIi8vZGl2W0BpZD0ncGFnZSddLy9hW3RleHQoKT0n5LiL5LiA6aG1PiddIHwgaWQoJ3NuZXh0JykiLAogICAgICAgICAgcGFnZUVsZW1lbnQ6ICIvL2RpdltAaWQ9J2NvbnRhaW5lciddL2RpdiIsCiAgICAgICAgICBIVF9pbnNlcnQ6IFsiLy9kaXZbQGlkPSdjb250YWluZXInXSIsIDJdLAogICAgICAgICAgcmVwbGFjZUU6ICJpZCgncGFnZScpIgogICAgICAgIH0KICAgICAgfSwKICAgICAgZ29vZ2xlOiB7CiAgICAgICAgU2l0ZVR5cGVJRDogNCwKICAgICAgICBNYWluVHlwZTogIiNyc28gLmciLAogICAgICAgIEZhdmljb25UeXBlOiAiLmlVaDMwIiwKICAgICAgICBGYXZpY29uQWRkVG86ICJoMyIsCiAgICAgICAgQ291bnRlclR5cGU6ICIjcnNvIC5nIGgzLC5feUU+ZGl2W2NsYXNzfj1fa2tdIGgzIiwKICAgICAgICBCbG9ja1R5cGU6ICIucmM+LnI+YSIsCiAgICAgICAgcGFnZXI6IHsKICAgICAgICAgIG5leHRMaW5rOiAnaWQoInBubmV4dCIpIHwgaWQoIm5hdmJhciBuYXZjbnQgbmF2IikvL3RkW3NwYW5dL2ZvbGxvd2luZy1zaWJsaW5nOjp0ZFsxXS9hIHwgaWQoIm5uIikvcGFyZW50OjphJywKICAgICAgICAgIHBhZ2VFbGVtZW50OiAnLy9kaXZbQGlkPSJyZXMiXScsCiAgICAgICAgICBIVF9pbnNlcnQ6IFsiY3NzOyNyZXMiLCAyXSwKICAgICAgICAgIHJlcGxhY2VFOiAnLy9kaXZbQGlkPSJuYXZjbnQiXSB8IC8vZGl2W0BpZD0icmNudCJdLy9kaXZbQHJvbGU9Im5hdmlnYXRpb24iXScKICAgICAgICB9CiAgICAgIH0sCiAgICAgIGJpbmc6IHsKICAgICAgICBTaXRlVHlwZUlEOiA1LAogICAgICAgIE1haW5UeXBlOiAiI2JfcmVzdWx0cz5saSIsCiAgICAgICAgRmF2aWNvblR5cGU6ICIuYl9hdHRyaWJ1dGlvbj5jaXRlIiwKICAgICAgICBGYXZpY29uQWRkVG86ICJoMiIsCiAgICAgICAgQ291bnRlclR5cGU6ICIjYl9yZXN1bHRzPmxpW2NsYXNzfj1iX2Fuc10+aDIsI2JfcmVzdWx0cz5saVtjbGFzc349Yl9hbGdvXT5oMiwjYl9yZXN1bHRzPmxpW2NsYXNzfj1iX2FsZ29dPmgyIiwKICAgICAgICBCbG9ja1R5cGU6ICJoMiBhIiwKICAgICAgICBwYWdlcjogewogICAgICAgICAgbmV4dExpbms6ICIvL2FbY29udGFpbnMoQGNsYXNzLFwic2JfcGFnTlwiKV0iLAogICAgICAgICAgcGFnZUVsZW1lbnQ6ICJpZChcImJfcmVzdWx0c1wiKS9saVtub3QoY29udGFpbnMoQGNsYXNzLFwiYl9wYWdcIikgb3IgY29udGFpbnMoQGNsYXNzLFwiYl9hbnMgYl90b3BcIikpXSIsCiAgICAgICAgICBIVF9pbnNlcnQ6IFsiaWQoXCJiX3Jlc3VsdHNcIikvbGlbQGNsYXNzPVwiYl9wYWdcIl0iLCAxXSwKICAgICAgICAgIHJlcGxhY2VFOiAiaWQoXCJiX3Jlc3VsdHNcIikvL25hdltAcm9sZT1cIm5hdmlnYXRpb25cIl0iLAogICAgICAgIH0KICAgICAgfSwKICAgICAgZHVjazogewogICAgICAgIFNpdGVUeXBlSUQ6IDEwLAogICAgICAgIE1haW5UeXBlOiAiI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAiLAogICAgICAgIEZhdmljb25UeXBlOiAiLnJlc3VsdHNfbGlua3NfZGVlcCAucmVzdWx0X191cmxfX2RvbWFpbiIsCiAgICAgICAgRmF2aWNvbkFkZFRvOiAiaDIiLAogICAgICAgIENvdW50ZXJUeXBlOiAiI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgaDIiLAogICAgICAgIEJsb2NrVHlwZTogImgyIGEiLAogICAgICAgIHBhZ2VyOiB7CiAgICAgICAgICBuZXh0TGluazogIi8vYVtjb250YWlucyhAY2xhc3MsXCJzYl9wYWdOXCIpXSIsCiAgICAgICAgICBwYWdlRWxlbWVudDogImlkKFwiYl9yZXN1bHRzXCIpL2xpW25vdChjb250YWlucyhAY2xhc3MsXCJiX3BhZ1wiKSBvciBjb250YWlucyhAY2xhc3MsXCJiX2FucyBiX3RvcFwiKSldIiwKICAgICAgICAgIEhUX2luc2VydDogWyJpZChcImJfcmVzdWx0c1wiKS9saVtAY2xhc3M9XCJiX3BhZ1wiXSIsIDFdLAogICAgICAgICAgcmVwbGFjZUU6ICJpZChcImJfcmVzdWx0c1wiKS8vbmF2W0Byb2xlPVwibmF2aWdhdGlvblwiXSIsCiAgICAgICAgfQogICAgICB9LAogICAgICBkb2dlOiB7CiAgICAgICAgU2l0ZVR5cGVJRDogMTEsCiAgICAgICAgTWFpblR5cGU6ICIjbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCIsCiAgICAgICAgRmF2aWNvblR5cGU6ICIucmVzdWx0c19saW5rc19kZWVwIC5yZXN1bHRfX3VybF9fZG9tYWluIiwKICAgICAgICBGYXZpY29uQWRkVG86ICJoMiIsCiAgICAgICAgQ291bnRlclR5cGU6ICIjbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCBoMiIsCiAgICAgICAgQmxvY2tUeXBlOiAiaDIgYSIsCiAgICAgICAgcGFnZXI6IHsKICAgICAgICAgIG5leHRMaW5rOiAiLy9hW2NvbnRhaW5zKEBjbGFzcyxcInNiX3BhZ05cIildIiwKICAgICAgICAgIHBhZ2VFbGVtZW50OiAiaWQoXCJiX3Jlc3VsdHNcIikvbGlbbm90KGNvbnRhaW5zKEBjbGFzcyxcImJfcGFnXCIpIG9yIGNvbnRhaW5zKEBjbGFzcyxcImJfYW5zIGJfdG9wXCIpKV0iLAogICAgICAgICAgSFRfaW5zZXJ0OiBbImlkKFwiYl9yZXN1bHRzXCIpL2xpW0BjbGFzcz1cImJfcGFnXCJdIiwgMV0sCiAgICAgICAgICByZXBsYWNlRTogImlkKFwiYl9yZXN1bHRzXCIpLy9uYXZbQHJvbGU9XCJuYXZpZ2F0aW9uXCJdIiwKICAgICAgICB9CiAgICAgIH0sCiAgICAgIG1CYWlkdTogewogICAgICAgIFNpdGVUeXBlSUQ6IDYsCiAgICAgICAgTWFpblR5cGU6ICIjYl9yZXN1bHRzPmxpIiwKICAgICAgICBGYXZpY29uVHlwZTogIi5iX2F0dHJpYnV0aW9uPmNpdGUiLAogICAgICAgIEZhdmljb25BZGRUbzogImgyIiwKICAgICAgICBDb3VudGVyVHlwZTogIiNiX3Jlc3VsdHM+bGlbY2xhc3N+PWJfYW5zXT5oMiwjYl9yZXN1bHRzPmxpW2NsYXNzfj1iX2FsZ29dPmgyLCNiX3Jlc3VsdHM+bGlbY2xhc3N+PWJfYWxnb10+aDIiLAogICAgICAgIEJsb2NrVHlwZTogImgyIGEiLAogICAgICB9LAogICAgICB6aGlodTogewogICAgICAgIFNpdGVUeXBlSUQ6IDcsCiAgICAgIH0sCiAgICAgIGJhaWR1X3h1ZXNodTogewogICAgICAgIFNpdGVUeXBlSUQ6IDgsCiAgICAgICAgTWFpblR5cGU6ICIjY29udGVudF9sZWZ0IC5yZXN1bHQiLAogICAgICAgIFN0eXBlX05vcm1hbDogImgzLnQ+YSwgI3Jlc3VsdHMgLmMtY29udGFpbmVyPi5jLWJsb2NrYSIsCiAgICAgICAgRmF2aWNvblR5cGU6ICIucmVzdWx0LW9wLCAuYy1zaG93dXJsIiwgLy8gYmFpZHUg5Ly85LmO6KaB5pS554mI5LqG77yfCiAgICAgICAgRmF2aWNvbkFkZFRvOiAiaDMiLAogICAgICAgIENvdW50ZXJUeXBlOiAiI2NvbnRlbnRfbGVmdD4jZG91YmxlPmRpdltzcmNpZF0gKltjbGFzc349dF0sW2NsYXNzfj1vcF9iZXN0X2Fuc3dlcl9xdWVzdGlvbl0sI2NvbnRlbnRfbGVmdD5kaXZbc3JjaWRdICpbY2xhc3N+PXRdLFtjbGFzc349b3BfYmVzdF9hbnN3ZXJfcXVlc3Rpb25dIiwKICAgICAgICBCbG9ja1R5cGU6ICJoMyBhIiwKICAgICAgfSwKICAgICAgb3RoZXI6IHsKICAgICAgICBTaXRlVHlwZUlEOiA5LAogICAgICB9CiAgICB9OwogICAgbGV0IFNpdGVUeXBlID0gewogICAgICBCQUlEVTogREJTaXRlLmJhaWR1LlNpdGVUeXBlSUQsCiAgICAgIE1CQUlEVTogREJTaXRlLm1CYWlkdS5TaXRlVHlwZUlELAogICAgICBTT0dPVTogREJTaXRlLnNvZ291LlNpdGVUeXBlSUQsCiAgICAgIFNPOiBEQlNpdGUuaGFvc291LlNpdGVUeXBlSUQsCiAgICAgIEdPT0dMRTogREJTaXRlLmdvb2dsZS5TaXRlVHlwZUlELAogICAgICBCSU5HOiBEQlNpdGUuYmluZy5TaXRlVHlwZUlELAogICAgICBEVUNLOiBEQlNpdGUuZHVjay5TaXRlVHlwZUlELAogICAgICBET0dFOiBEQlNpdGUuZG9nZS5TaXRlVHlwZUlELAogICAgICBaSElIVTogREJTaXRlLnpoaWh1LlNpdGVUeXBlSUQsCiAgICAgIEJBSURVX1hVRVNIVTogREJTaXRlLmJhaWR1X3h1ZXNodS5TaXRlVHlwZUlELAogICAgICBPVEhFUlM6IDgKICAgIH07CiAgICBsZXQgb3RoZXJEYXRhID0gewogICAgICBvdGhlcjogewogICAgICAgIGN1clRhYjogMSwgLy8g5bGV56S656ys5LqMcGFuZWwKICAgICAgICBzaG93QmxvY2tMaXN0QXJlYTogZmFsc2UsIC8vIGJsb2NrTGlzdOWxleekuuS9jXRleHRhcmVhCiAgICAgICAgYWRkQmxvY2tJdGVtOiAiIiwgICAgIC8vIOeUqOaIt+aJi+WKqOi+k+WFpeeahOaLpuaIquinhOWImQogICAgICAgIGN1ckhvc3RzOiBbXSwgICAgICAgICAvLyDlrZjmlL7lt7Lnu4/orr/pl67nmoRob3N0c+aVsOaNruWGheWuuQogICAgICB9CiAgICB9OyAgLy8g5Yiw5pe25YCZ5oyC6L295Yiwb3RoZXLkuIoKICAgIGxldCBBbGxEYXRhID0gewogICAgICBBQ0NvbmZpZzoge30sCiAgICAgIG90aGVyOiBvdGhlckRhdGEub3RoZXIsCiAgICAgIENPTlNUOiBDT05TVCwKICAgICAgbGFuOiB7CiAgICAgICAgdXNlOiB7fSwKICAgICAgICB6aF9jbjogewogICAgICAgICAgbWVudV90ZXh0OiAi6Ieq5a6a5LmJIiwKICAgICAgICAgIGN1ckxhbmc6ICJ6aF9jbiIsCiAgICAgICAgICBmaWVsZHNldF9wYW5lbDogewogICAgICAgICAgICBwYW5lbF90aXRsZTogIkFDLemHjeWumuWQkeiuvue9riAiICsgR01faW5mby5zY3JpcHQudmVyc2lvbiArIChpbkV4dE1vZGU/ICdFeHQnOicnKSwKICAgICAgICAgICAgc2V0dGluZ19wYW5lbDogewogICAgICAgICAgICAgIHJlZGlyZWN0X3RleHQ6ICLkuLvlip/og70t6YeN5a6a5ZCR5Yqf6IO9IiwKICAgICAgICAgICAgICByZWRpcmVjdF90aXRsZTogIumHjeWumuWQkeWKn+iDveeahOW8gOWQr+S4juWQpiIsCiAgICAgICAgICAgICAgdXNlRW5fdGV4dDogIkVuLUxhbmd1YWdlIiwKICAgICAgICAgICAgICB1c2VFbl90aXRsZTogIlVzaW5nIEVuZ2xpc2ggbGFuZ3VhZ2UgdG8gZGlzcGxheSIsCiAgICAgICAgICAgICAgYWRzX3RleHQ6ICLpmYTliqAxLeWOu+W5v+WRiuWKn+iDvSIsCiAgICAgICAgICAgICAgYWRzX3RpdGxlOiAi5Y676Zmk6YOo5YiG6aG16Z2i55qE5bm/5ZGK5L+h5oGv77yM6L+Y5L2g5LiA5Liq5bmy5YeA5pW05rSB55qE6aG16Z2iIiwKICAgICAgICAgICAgICBhdXRvcGFnZV90ZXh0OiAi6Ieq5Yqo57+76aG1IiwKICAgICAgICAgICAgICBhdXRvcGFnZV90aXRsZTogIuiHquWKqOe/u+mhtSIsCiAgICAgICAgICAgICAgYmxvY2tlbmFibGVfdGV4dDogIumZhOWKoDIt6Ieq5Li75oum5oiq5Z+f5ZCNIiwKICAgICAgICAgICAgICBibG9ja2VuYWJsZV90aXRsZTogIueCueWHu+mhtemdomJsb2Nr5oyJ6ZKu5re75Yqg5L2g5oOz6KaB6ZqQ6JeP55qE5Zyw5Z2A77yM6ISa5pys5bCG6Ieq5Yqo6ZqQ6JeP6YOo5YiG57uT5p6c5Li65bCP5qiq5bmF77yMRElZ5oyJ6ZKu5Lit54K55Ye76KGo5qC85YaF5a655Y+v5Lul5Y+W5raI6ZqQ6JePIiwKICAgICAgICAgICAgICBibG9ja0RpeUJ0bl90ZXh0OiAiRElZIiwKICAgICAgICAgICAgICBibG9ja0RpeUJ0bl90aXRsZTogIuiHquWumuS5iUJMT0NLIiwKICAgICAgICAgICAgICBibG9ja0F1dG9SZW1vdmVfdGV4dDogIumakOiXj+e7k+aenCIsCiAgICAgICAgICAgICAgYmxvY2tBdXRvUmVtb3ZlX3RpdGxlOiAi6Ieq5Yqo6ZqQ6JeP5bey57uP5bGP6JS955qE5Z+f5ZCNIiwKICAgICAgICAgICAgICBibG9ja0J0blNob3dfdGV4dDogIumakOiXjydibG9jayfmjInpkq4iLAogICAgICAgICAgICAgIGJsb2NrQnRuU2hvd190aXRsZTogIumakOiXj+aOiWJsb2Nr5oyJ6ZKu55qE5pi+56S6IiwKCiAgICAgICAgICAgICAgdXNlclN0eWxlX3RleHQ6ICLpmYTliqAzLeiHquWumuS5ieagt+W8jyIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2JhaWR1X2xhYmxlOiAi5bGV5byA55m+5bqm6K6+572uPj4iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9iYWlkdV9vcmlnaW46ICLnmb7luqYt5Y6f5aeL5qih5byPIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfYmFpZHVfaHV5YW46ICLnmb7luqYt5oqk55y85qih5byPIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfYmFpZHVfYmFpZHVMaXRlOiAi55m+5bqmTGl0Zeagt+W8jyIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2JhaWR1XzFsaW5lOiAi5Y2V5YiXIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfYmFpZHVfMWxpbmVfZW50ZXI6ICLljZXliJflsYXkuK0iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9iYWlkdV8ybGluZTogIuWPjOWIlyIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2JhaWR1XzNsaW5lOiAi5LiJ5YiXIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfYmFpZHVfNGxpbmU6ICLlm5vliJciLAoKICAgICAgICAgICAgICB1c2VyU3R5bGVfZ29vZ2xlX2xhYmxlOiAi5bGV5byA6LC35q2M6K6+572uPj4iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9nb29nbGVfb3JpZ2luOiAi6LC35q2MLeWOn+Wni+aooeW8jyIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2dvb2dsZV9odXlhbjogIuiwt+atjC3miqTnnLzmqKHlvI8iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9nb29nbGVfZ29vZ2xlTGl0ZTogIuiwt+atjC3kvKroo4Xnmb7luqYiLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9nb29nbGVfMWxpbmU6ICLljZXliJciLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9nb29nbGVfMWxpbmVfZW50ZXI6ICLljZXliJflsYXkuK0iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9nb29nbGVfMmxpbmU6ICLlj4zliJciLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9nb29nbGVfM2xpbmU6ICLkuInliJciLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9nb29nbGVfNGxpbmU6ICLlm5vliJciLAoKICAgICAgICAgICAgICB1c2VyU3R5bGVfYmluZ19sYWJsZTogIuWxleW8gOW/heW6lOiuvue9rj4+IiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfYmluZ19vcmlnaW46ICLlv4XlupQt5Y6f5aeL5qih5byPIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfYmluZ19odXlhbjogIuW/heW6lC3miqTnnLzmqKHlvI8iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9iaW5nXzFsaW5lOiAi5Y2V5YiXIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfYmluZ18xbGluZV9lbnRlcjogIuWNleWIl+WxheS4rSIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2JpbmdfMmxpbmU6ICLlj4zliJciLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9iaW5nXzNsaW5lOiAi5LiJ5YiXIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfYmluZ180bGluZTogIuWbm+WIlyIsCgogICAgICAgICAgICAgIHVzZXJTdHlsZV9zb2dvdV9sYWJsZTogIuWxleW8gOaQnOeLl+iuvue9rj4+IiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfc29nb3Vfb3JpZ2luOiAi5pCc54uXLeWOn+Wni+aooeW8jyIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX3NvZ291X2h1eWFuOiAi5pCc54uXLeaKpOecvOaooeW8jyIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX3NvZ291XzFsaW5lOiAi5Y2V5YiXIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfc29nb3VfMWxpbmVfZW50ZXI6ICLljZXliJflsYXkuK0iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9zb2dvdV8ybGluZTogIuWPjOWIlyIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX3NvZ291XzNsaW5lOiAi5LiJ5YiXIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfc29nb3VfNGxpbmU6ICLlm5vliJciLAoKICAgICAgICAgICAgICB1c2VyU3R5bGVfZHVja19sYWJsZTogIuWxleW8gOm4rem4reaQnOiuvue9rj4+IiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfZHVja19vcmlnaW46ICLpuK3puK0t5Y6f5aeL5qih5byPIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfZHVja19odXlhbjogIum4rem4rS3miqTnnLzmqKHlvI8iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9kdWNrX25vcm1hbDogIum4rem4rS3luLjop4HphY3nva4iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9kdWNrXzFsaW5lOiAi5Y2V5YiXIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfZHVja18xbGluZV9lbnRlcjogIuWNleWIl+WxheS4rSIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2R1Y2tfMmxpbmU6ICLlj4zliJciLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9kdWNrXzNsaW5lOiAi5LiJ5YiXIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfZHVja180bGluZTogIuWbm+WIlyIsCgogICAgICAgICAgICAgIHVzZXJTdHlsZV9kb2dlX2xhYmxlOiAi5bGV5byA5aSa5ZCJ6K6+572uPj4iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9kb2dlX29yaWdpbjogIuWkmuWQiS3ljp/lp4vmqKHlvI8iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9kb2dlX2h1eWFuOiAi5aSa5ZCJLeaKpOecvOaooeW8jyIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2RvZ2Vfbm9ybWFsOiAi5aSa5ZCJLeW4uOingemFjee9riIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2RvZ2VfMWxpbmU6ICLljZXliJciLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9kb2dlXzFsaW5lX2VudGVyOiAi5Y2V5YiX5bGF5LitIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfZG9nZV8ybGluZTogIuWPjOWIlyIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2RvZ2VfM2xpbmU6ICLkuInliJciLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9kb2dlXzRsaW5lOiAi5Zub5YiXIiwKCiAgICAgICAgICAgICAgaHV5YW5Nb2RlX3RleHQ6ICLpmYTliqA0LeaKpOecvOminOiJsumFjee9ri3oh6rlrprkuYkz5Lit6ZyA5a+55bqU5byA5ZCvIiwKICAgICAgICAgICAgICBodXlhbk1vZGVfdGl0bGU6ICLvvIHpnIDopoHlnKjoh6rlrprkuYnmoLflvI/kuK3lkK/nlKjmiqTnnLzmqKHlvI8iLAogICAgICAgICAgICAgIGh1eWFuQ29sb3JfdGV4dDogIum7mOiupOaKpOecvOminOiJsu+8miIsCiAgICAgICAgICAgICAgaHV5YW5Db2xvcl90aXRsZTogIuiHquWumuS5ieeahOaKpOecvOminOiJsu+8miIsCiAgICAgICAgICAgICAgaHV5YW5Db2xvck1vcmVfdGV4dDogIuabtOWkmuminOiJsumAieaLqSIsCgogICAgICAgICAgICAgIGZhdmljb25fdGV4dDogIumZhOWKoDUtRmF2aWNvbuWKn+iDvSIsCiAgICAgICAgICAgICAgZmF2aWNvbl90aXRsZTogIkFDLea3u+WKoEZhdmljb24iLAogICAgICAgICAgICAgIGZhdmljb25fZGVmYXVsdEljb25fdGV4dDogIkZhdmljb27pu5jorqTlm77moIfvvJoiLAoKICAgICAgICAgICAgICBzZWFyY2hPcmlnaW5fdGV4dDogIumZhOWKoDYt56e76Zmk55m+5bqm5pCc57Si6aKE5rWLKOaWh+Wtl+iHquWKqOaQnOe0oikiLAogICAgICAgICAgICAgIHNlYXJjaE9yaWdpbl90aXRsZTogIkFDLeenu+mZpOaQnOe0oumihOa1iyIsCgogICAgICAgICAgICAgIHNob3dSaWdodF90ZXh0OiAi6ZmE5YqgNy3mmL7npLrlj7PkvqfmoI8iLAogICAgICAgICAgICAgIHNob3dDb3VudGVyX3RleHQ6ICLpmYTliqA4Lee8luWPt+WKn+iDvSIsCiAgICAgICAgICAgICAgc2hvd0FMaW5lX3RleHQ6ICLpmYTliqA5LeaWh+Wtl+S4i+WIkue6vyIsCiAgICAgICAgICAgICAgc2hvd1VzZXJTdHlsZV90ZXh0OiAi6ZmE5YqgMTAt6Ieq5a6a5LmJ5qC35byPIiwKCiAgICAgICAgICAgICAgY29udGFjdE1lX3RleHQ6ICLogZTns7vkvZzogIUs5o+Q5bu66K6uLOWvu+axguW4ruWKqSzoh6rlrprkuYnmoLflvI8s6ISa5pys5a6a5Yi254K55oiRIiwKICAgICAgICAgICAgICBjb250YWN0TWVfdXJsOiAiaHR0cHM6Ly9naXRodWIuY29tL2xhbmdyZW4xMzUzL0dNX3NjcmlwdCIsCgogICAgICAgICAgICAgIHNldHRpbmdfcGFuZWxfc2Vjb25kOiB7CiAgICAgICAgICAgICAgICBiYWNrQnRuX3RleHQ6ICI8Lei/lOWbniIsCiAgICAgICAgICAgICAgICBibG9ja0xhYmVsX3RleHQ6ICIg5oum5oiq5YiX6KGoICDmg7PopoHnlJ/mlYjnmoTor53pnIDopoHmiYvliqjkv53lrZgiLAogICAgICAgICAgICAgICAgYmxvY2tFZGl0QnRuX3RleHQ6ICLnvJbovpHliJfooagiLAogICAgICAgICAgICAgICAgYmxvY2tFZGl0QnRuRW5kX3RleHQ6ICLnu5PmnZ/nvJbovpEiLAogICAgICAgICAgICAgICAgYWRkQmxvY2tMYWJlbF90ZXh0OiAi5YWo5Yy56YWN5oum5oiq77yaIiwKICAgICAgICAgICAgICAgIGFkZEJ0bkxhYmVsX3RleHQ6ICLmt7vliqAiLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgY2FuY2VsQnRuX3RleHQ6ICLlj5bmtogiLAogICAgICAgICAgICAgIG9rQnRuX3RleHQ6ICLkv53lrZgiLAogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICBlbjogewogICAgICAgICAgbWVudV90ZXh0OiAiQ1VTVE9NIiwKICAgICAgICAgIGN1ckxhbmc6ICJlbiIsCiAgICAgICAgICBmaWVsZHNldF9wYW5lbDogewogICAgICAgICAgICBwYW5lbF90aXRsZTogIkFDIFJlZGlyZWN0IFNldHRpbmdzICIgKyBHTV9pbmZvLnNjcmlwdC52ZXJzaW9uICsgKGluRXh0TW9kZT8gJ0V4dCc6JycpLAogICAgICAgICAgICBzZXR0aW5nX3BhbmVsOiB7CiAgICAgICAgICAgICAgcmVkaXJlY3RfdGV4dDogIk1haW4tUmVkaXJlY3RGdW5jIiwKICAgICAgICAgICAgICByZWRpcmVjdF90aXRsZTogIlR1cm4gb24gb3Igb2ZmIHJlZGlyZWN0IiwKICAgICAgICAgICAgICB1c2VFbl90ZXh0OiAiRW4tTGFuZ3VhZ2UiLAogICAgICAgICAgICAgIHVzZUVuX3RpdGxlOiAi5L2/55So6Iux5paH5pi+56S66aG16Z2iIiwKICAgICAgICAgICAgICBhZHNfdGV4dDogIkFkZDEtUmVtb3ZlIEFkcyIsCiAgICAgICAgICAgICAgYWRzX3RpdGxlOiAiUmVtb3ZlIHRoZSBhZHMgb24gdGhlIHBhZ2UsIGFuZCByZXR1cm4geW91IGEgY2xlYW4gcGFnZSIsCiAgICAgICAgICAgICAgYXV0b3BhZ2VfdGV4dDogIkF1dG8gUGFnZXIiLAogICAgICAgICAgICAgIGF1dG9wYWdlX3RpdGxlOiAiQXV0byBQYWdlciIsCiAgICAgICAgICAgICAgYmxvY2tlbmFibGVfdGV4dDogIkFkZDItQmxvY2sgaG9zdCIsCiAgICAgICAgICAgICAgYmxvY2tlbmFibGVfdGl0bGU6ICJDbGljayB0aGUgQmxvY2sgYnV0dG9uIHRvIGFkZCB0aGUgYWRkcmVzcyB3aGljaCB5b3Ugd2FudCB0byBoaWRlLiBUaGUgc2NyaXB0IHdpbGwgaGlkZSBpdCB3aXRoIHNtYWxsIGJhbm5lciBhdXRvbWF0aWNhbGx5LiBESVkgYnV0dG9uIGZvciBlZGl0dGluZyB0aGUgaGlkaW5nIGxpc3QiLAogICAgICAgICAgICAgIGJsb2NrRGl5QnRuX3RleHQ6ICJESVkiLAogICAgICAgICAgICAgIGJsb2NrRGl5QnRuX3RpdGxlOiAiRWRpdCBCTE9DSyIsCiAgICAgICAgICAgICAgYmxvY2tBdXRvUmVtb3ZlX3RleHQ6ICJBdXRvIHJlbW92ZSIsCiAgICAgICAgICAgICAgYmxvY2tBdXRvUmVtb3ZlX3RpdGxlOiAicmVtb3ZlIHRoZSBibG9jayByZXN1bHRzIGF1dG9tYXRpY2FsbHkiLAogICAgICAgICAgICAgIGJsb2NrQnRuU2hvd190ZXh0OiAiSGlkZSAnQmxvY2snIGJ1dHRvbiIsCiAgICAgICAgICAgICAgYmxvY2tCdG5TaG93X3RpdGxlOiAiSGlkZSAnQmxvY2snIGJ1dHRvbiIsCgogICAgICAgICAgICAgIHVzZXJTdHlsZV90ZXh0OiAiQWRkMy1DdXN0b21TdHlsZSIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2JhaWR1X2xhYmxlOiAiRXhwYW5kIEJhaWR1IFNldHRpbmdzPj4iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9iYWlkdV9vcmlnaW46ICJCYWlkdS1PcmlnaW4iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9iYWlkdV9odXlhbjogIkJhaWR1LUV5ZVNhdmUiLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9iYWlkdV9iYWlkdUxpdGU6ICJCYWlkdUxpdGVTdHlsZSIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2JhaWR1XzFsaW5lOiAiU2luZ2xlUm93IiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfYmFpZHVfMWxpbmVfZW50ZXI6ICJTaW5nbGVDZW50ZXIiLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9iYWlkdV8ybGluZTogIlR3byIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2JhaWR1XzNsaW5lOiAiVGhyZWUiLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9iYWlkdV80bGluZTogIkZvdXIiLAoKICAgICAgICAgICAgICB1c2VyU3R5bGVfZ29vZ2xlX2xhYmxlOiAiRXhwYW5kIEdvb2dsZSBTZXR0aW5ncz4+IiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfZ29vZ2xlX29yaWdpbjogIkdvb2dsZS1PcmlnaW4iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9nb29nbGVfaHV5YW46ICJHb29nbGUtRXllU2F2ZSIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2dvb2dsZV9nb29nbGVMaXRlOiAiRmFrZSBCYWlkdSIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2dvb2dsZV8xbGluZTogIlNpbmdsZVJvdyIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2dvb2dsZV8xbGluZV9lbnRlcjogIlNpbmdsZUNlbnRlciIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2dvb2dsZV8ybGluZTogIlR3byIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2dvb2dsZV8zbGluZTogIlRocmVlIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfZ29vZ2xlXzRsaW5lOiAiRm91ciIsCgogICAgICAgICAgICAgIHVzZXJTdHlsZV9iaW5nX2xhYmxlOiAiRXhwYW5kIEJpbmcgU2V0dGluZ3M+PiIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2Jpbmdfb3JpZ2luOiAiQmluZy1PcmlnaW4iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9iaW5nX2h1eWFuOiAiQmluZy1FeWVTYXZlIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfYmluZ18xbGluZTogIlNpbmdsZVJvdyIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2JpbmdfMWxpbmVfZW50ZXI6ICJTaW5nbGVDZW50ZXIiLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9iaW5nXzJsaW5lOiAiVHdvIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfYmluZ18zbGluZTogIlRocmVlIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfYmluZ180bGluZTogIkZvdXIiLAoKICAgICAgICAgICAgICB1c2VyU3R5bGVfc29nb3VfbGFibGU6ICJFeHBhbmQgU29Hb3UgU2V0dGluZ3M+PiIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX3NvZ291X29yaWdpbjogIlNvR291LU9yaWdpbiIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX3NvZ291X2h1eWFuOiAiU29Hb3UtRXllU2F2ZSIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX3NvZ291XzFsaW5lOiAiU2luZ2xlUm93IiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfc29nb3VfMWxpbmVfZW50ZXI6ICJTaW5nbGVDZW50ZXIiLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9zb2dvdV8ybGluZTogIlR3byIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX3NvZ291XzNsaW5lOiAiVGhyZWUiLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9zb2dvdV80bGluZTogIkZvdXIiLAoKICAgICAgICAgICAgICB1c2VyU3R5bGVfZHVja19sYWJsZTogIkV4cGFuZCBEdWNrRHVja0dvIFNldHRpbmdzPj4iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9kdWNrX29yaWdpbjogIkR1Y2tEdWNrLU9yaWdpbiIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2R1Y2tfaHV5YW46ICJEdWNrRHVjay1FeWVTYXZlIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfZHVja19ub3JtYWw6ICJEdWNrRHVjay1Ob3JtYWwiLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9kdWNrXzFsaW5lOiAiU2luZ2xlUm93IiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfZHVja18xbGluZV9lbnRlcjogIlNpbmdsZUNlbnRlciIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2R1Y2tfMmxpbmU6ICJUd28iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9kdWNrXzNsaW5lOiAiVGhyZWUiLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9kdWNrXzRsaW5lOiAiRm91ciIsCgogICAgICAgICAgICAgIHVzZXJTdHlsZV9kb2dlX2xhYmxlOiAiRXhwYW5kIERvZ2VEb2dlIFNldHRpbmdzPj4iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9kb2dlX29yaWdpbjogIkRvZ2VEb2dlLU9yaWdpbiIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2RvZ2VfaHV5YW46ICJEb2dlRG9nZS1FeWVTYXZlIiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfZG9nZV9ub3JtYWw6ICJEb2dlRG9nZS1Ob3JtYWwiLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9kb2dlXzFsaW5lOiAiU2luZ2xlUm93IiwKICAgICAgICAgICAgICB1c2VyU3R5bGVfZG9nZV8xbGluZV9lbnRlcjogIlNpbmdsZUNlbnRlciIsCiAgICAgICAgICAgICAgdXNlclN0eWxlX2RvZ2VfMmxpbmU6ICJUd28iLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9kb2dlXzNsaW5lOiAiVGhyZWUiLAogICAgICAgICAgICAgIHVzZXJTdHlsZV9kb2dlXzRsaW5lOiAiRm91ciIsCgogICAgICAgICAgICAgIGh1eWFuTW9kZV90ZXh0OiAiQWRkNC1FeWVTYXZlIENvbG9yIFNldHRpbmctTmVlZCBvcGVuZWQgaW4gQWRkMyIsCiAgICAgICAgICAgICAgaHV5YW5Nb2RlX3RpdGxlOiAi77yBT3BlbiBFeWVTYXZlIE1vZGUgaW4gQ3VzdG9tU3R5bGUgaXMgTXVzdCIsCiAgICAgICAgICAgICAgaHV5YW5Db2xvcl90ZXh0OiAiRGVmYXVsdCBFeWVTYXZlIENvbG9y77yaIiwKICAgICAgICAgICAgICBodXlhbkNvbG9yX3RpdGxlOiAiVGhlIGNvbG9yIG9mIEV5ZVNhdmXvvJoiLAogICAgICAgICAgICAgIGh1eWFuQ29sb3JNb3JlX3RleHQ6ICJNb3JlIENvbG9yIiwKCiAgICAgICAgICAgICAgZmF2aWNvbl90ZXh0OiAiQWRkNS1GYXZpY29uLkZ1bmMiLAogICAgICAgICAgICAgIGZhdmljb25fdGl0bGU6ICJBQy1BZGRGYXZpY29uIiwKICAgICAgICAgICAgICBmYXZpY29uX2RlZmF1bHRJY29uX3RleHQ6ICJGYXZpY29uRmFpbGVkSW1n77ya77yaIiwKCiAgICAgICAgICAgICAgc2VhcmNoT3JpZ2luX3RleHQ6ICJBQy1SZW1vdmUgQmFpZHUgQXV0b1ByZWRpY3QgaW4gdGV4dCBzZWFyY2giLAogICAgICAgICAgICAgIHNlYXJjaE9yaWdpbl90aXRsZTogIkFkZDYtUmVtb3ZlIEJhaWR1IEF1dG9QcmVkaWN0IGluIHRleHQgc2VhcmNoIiwKCiAgICAgICAgICAgICAgc2hvd1JpZ2h0X3RleHQ6ICJBZGQ3LVJpZ2h0IFNpZGUgQ29sdW1uIiwKICAgICAgICAgICAgICBzaG93Q291bnRlcl90ZXh0OiAiQWRkOC1OdW1GdW5jIiwKICAgICAgICAgICAgICBzaG93QUxpbmVfdGV4dDogIkFkZDktVGV4dFVuZGVyTGluZSIsCiAgICAgICAgICAgICAgc2hvd1VzZXJTdHlsZV90ZXh0OiAiQWRkMTAtWW91ciBvd24gU3R5bGUiLAoKICAgICAgICAgICAgICBjb250YWN0TWVfdGV4dDogIkZvciBjb250YWN0IHRoZSB3cml0dGVyLCBzdWdnZXN0cywgYXNrIGZvciBoZWxwIHRoZW4gY2xpY2sgbWUiLAogICAgICAgICAgICAgIGNvbnRhY3RNZV91cmw6ICJodHRwczovL2dpdGh1Yi5jb20vbGFuZ3JlbjEzNTMvR01fc2NyaXB0LyIsCgogICAgICAgICAgICAgIHNldHRpbmdfcGFuZWxfc2Vjb25kOiB7CiAgICAgICAgICAgICAgICBiYWNrQnRuX3RleHQ6ICI8LUJhY2siLAogICAgICAgICAgICAgICAgYmxvY2tMYWJlbF90ZXh0OiAiJm5ic3A7QmxvY2sgTGlzdCZuYnNwOyZuYnNwO0NsaWNrIFNhdmUgQnV0dG9uIGlmIHlvdSB3YW50IHdvIHNhdmUgdGhlIGxpc3QiLAogICAgICAgICAgICAgICAgYmxvY2tFZGl0QnRuX3RleHQ6ICJFZGl0IExpc3QiLAogICAgICAgICAgICAgICAgYmxvY2tFZGl0QnRuRW5kX3RleHQ6ICJFbmQgRWRpdCIsCiAgICAgICAgICAgICAgICBhZGRCbG9ja0xhYmVsX3RleHQ6ICJBZGQgQmxvY2sgaXRlbe+8miIsCiAgICAgICAgICAgICAgICBhZGRCdG5MYWJlbF90ZXh0OiAiQWRkIiwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGNhbmNlbEJ0bl90ZXh0OiAiQ2FuY2VsIiwKICAgICAgICAgICAgICBva0J0bl90ZXh0OiAiU2F2ZSIsCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH07CiAgICBsZXQgdnVlVk0gPSBudWxsOwogICAgLyoq5Yid5aeL5YyW5omA5pyJ55qE6K6+572uKiovCiAgICBQcm9taXNlLmFsbChbR00uZ2V0VmFsdWUoIkNvbmZpZyIpXSkudGhlbihmdW5jdGlvbiAoZGF0YSkgewogICAgICBsZXQgcmVzID0gZGF0YVswXQogICAgICBpZiAocmVzICE9IG51bGwpIHsKICAgICAgICB0cnkgewogICAgICAgICAgQUNDb25maWcgPSBKU09OLnBhcnNlKHJlcyk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgQUNDb25maWcgPSByZXM7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIEFDQ29uZmlnID0gRGVmYXVsdENvbmZpZzsKICAgICAgfQogICAgICBjb25zdCBsb2NhbERhdGEgPSBsb2NhbFN0b3JhZ2UuQUNDb25maWc7IC8vIOWwj+W/g+makOengeaooeW8jwogICAgICBpZihsb2NhbERhdGEgJiYgbG9jYWxEYXRhLmxlbmd0aCA+IDApIHsKICAgICAgICBBQ0NvbmZpZyA9IEpTT04ucGFyc2UobG9jYWxEYXRhKTsKICAgICAgfQogICAgICBmb3IgKHZhciBrZXkgaW4gRGVmYXVsdENvbmZpZykgewogICAgICAgIGlmICh0eXBlb2YgKEFDQ29uZmlnW2tleV0pID09PSAidW5kZWZpbmVkIikgewogICAgICAgICAgQUNDb25maWdba2V5XSA9IERlZmF1bHRDb25maWdba2V5XTsKICAgICAgICB9CiAgICAgIH0KICAgICAgaWYgKEFDQ29uZmlnLmlzVXNlclN0eWxlRW5hYmxlID09PSBmYWxzZSAmJiAobmV3IERhdGUoKS5nZXRUaW1lKCkgLSBBQ0NvbmZpZy5sYXN0U2F2ZVRpbWUgPiAyNTkyMDAwMDAwKSkgeyAvLyDlpKfnuqYzMOWkqeaXtumXtAogICAgICAgIC8vIOWmguaenOeUqOaIt+WPlua2iOS6huiuvue9ru+8jOW5tuS4lOmVv+aXtumXtCgzMOWkqSnmsqHmnInov5vooYzov4flpITnkIbvvIzpgqPkuYjnm7TmjqXlsIbmlbDmja7nva7nqbogLT4g55So5LqO5Yi35paw5pWw5o2uCiAgICAgICAgY29uc29sZS5sb2coImFjLWJhaWR1IGNzcyByZXNldCBmb3IgdGltZSIpOwogICAgICAgIEFDQ29uZmlnLmxhc3RTYXZlVGltZSA9IG5ldyBEYXRlKCkuZ2V0VGltZSgpOwogICAgICAgIEFDQ29uZmlnLlVzZXJTdHlsZVRleHQgPSBEZWZhdWx0Q29uZmlnLlVzZXJTdHlsZVRleHQ7CiAgICAgIH0KICAgICAgQWxsRGF0YS5BQ0NvbmZpZyA9IEFDQ29uZmlnOwogICAgICBEQkNvbmZpZyA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkoQUNDb25maWcpKTsgLy8g5pqC5pe25L2c5Li65LiA5Liq5Y6f5aeL5L+d5a2YCiAgICAgIEFsbERhdGEubGFuLnVzZSA9IEFDQ29uZmlnLmlzRW5MYW5nID8gQWxsRGF0YS5sYW4uZW4gOiBBbGxEYXRhLmxhbi56aF9jbjsKICAgICAgLy8g5Yid5aeL5YyW5a6M5oiQ5LmL5ZCO5omN6IO96LCD55So5q2j5bi45Ye95pWwCiAgICAgIGNhbGxiYWNrKCk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXhjZXB0KSB7CiAgICAgIGNvbnNvbGUubG9nKGV4Y2VwdCk7CiAgICB9KTsKCiAgICBmdW5jdGlvbiBSZWdfR2V0KEhUTUwsIHJlZykgewogICAgICBsZXQgUmVnRSA9IG5ldyBSZWdFeHAocmVnKTsKICAgICAgdHJ5IHsKICAgICAgICByZXR1cm4gUmVnRS5leGVjKEhUTUwpWzFdOwogICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgcmV0dXJuICIiOwogICAgICB9CiAgICB9CgogICAgZnVuY3Rpb24gQUNTZXRWYWx1ZShrZXksIHZhbHVlKSB7CiAgICAgIEdNX3NldFZhbHVlKGtleSwgdmFsdWUpOwogICAgICBpZihrZXkgPT09ICdDb25maWcnKXsKICAgICAgICBsb2NhbFN0b3JhZ2UuQUNDb25maWcgPSB2YWx1ZTsKICAgICAgfQogICAgfQoKICAgIGZ1bmN0aW9uIGdldEVsZW1lbnRCeVhwYXRoKGUsIHQsIHIpIHsKICAgICAgciA9IHIgfHwgZG9jdW1lbnQsIHQgPSB0IHx8IHI7CiAgICAgIHRyeSB7CiAgICAgICAgcmV0dXJuIHIuZXZhbHVhdGUoZSwgdCwgbnVsbCwgWFBhdGhSZXN1bHQuRklSU1RfT1JERVJFRF9OT0RFX1RZUEUsIG51bGwpLnNpbmdsZU5vZGVWYWx1ZTsKICAgICAgfSBjYXRjaCAodCkgewogICAgICAgIHJldHVybiB2b2lkIGNvbnNvbGUuZXJyb3IoIuaXoOaViOeahHhwYXRoIik7CiAgICAgIH0KICAgIH0KCiAgICBmdW5jdGlvbiBnZXRBbGxFbGVtZW50cyhlLCB0LCByLCBuLCBvKSB7CiAgICAgIGxldCBnZXRBbGxFbGVtZW50c0J5WHBhdGggPSBmdW5jdGlvbihlLCB0LCByKSB7CiAgICAgICAgcmV0dXJuIHIgPSByIHx8IGRvY3VtZW50LCB0ID0gdCB8fCByLCByLmV2YWx1YXRlKGUsIHQsIG51bGwsIFhQYXRoUmVzdWx0Lk9SREVSRURfTk9ERV9TTkFQU0hPVF9UWVBFLCBudWxsKTsKICAgICAgfQoKICAgICAgdmFyIGksIHMgPSBbXTsKICAgICAgaWYgKCFlKSByZXR1cm4gczsKICAgICAgaWYgKHIgPSByIHx8IGRvY3VtZW50LCBuID0gbiB8fCB3aW5kb3csIG8gPSBvIHx8IHZvaWQgMCwgdCA9IHQgfHwgciwgInN0cmluZyIgPT09IHR5cGVvZiBlKSBpID0gMCA9PT0gZS5zZWFyY2goL15jc3M7L2kpID8gZnVuY3Rpb24gZ2V0QWxsRWxlbWVudHNCeUNTUyhlLCB0KSB7CiAgICAgICAgcmV0dXJuICh0IHx8IGRvY3VtZW50KS5xdWVyeVNlbGVjdG9yQWxsKGUpOwogICAgICB9KGUuc2xpY2UoNCksIHQpIDogZ2V0QWxsRWxlbWVudHNCeVhwYXRoKGUsIHQsIHIpOyBlbHNlIHsKICAgICAgICBpZiAoIShpID0gZShyLCBuLCBvKSkpIHJldHVybiBzOwogICAgICAgIGlmIChpLm5vZGVUeXBlKSByZXR1cm4gc1swXSA9IGksIHM7CiAgICAgIH0KICAgICAgcmV0dXJuIGZ1bmN0aW9uIG1ha2VBcnJheShlKSB7CiAgICAgICAgdmFyIHQsIHIsIG4sIG8gPSBbXTsKICAgICAgICBpZiAoZS5wb3ApIHsKICAgICAgICAgIGZvciAodCA9IDAsIHIgPSBlLmxlbmd0aDsgdCA8IHI7IHQrKykgKG4gPSBlW3RdKSAmJiAobi5ub2RlVHlwZSA/IG8ucHVzaChuKSA6IG8gPSBvLmNvbmNhdChtYWtlQXJyYXkobikpKTsKICAgICAgICAgIHJldHVybiBhKCkobyk7CiAgICAgICAgfQogICAgICAgIGlmIChlLml0ZW0pIHsKICAgICAgICAgIGZvciAodCA9IGUubGVuZ3RoOyB0Oykgb1stLXRdID0gZVt0XTsKICAgICAgICAgIHJldHVybiBvOwogICAgICAgIH0KICAgICAgICBpZiAoZS5pdGVyYXRlTmV4dCkgewogICAgICAgICAgZm9yICh0ID0gZS5zbmFwc2hvdExlbmd0aDsgdDspIG9bLS10XSA9IGUuc25hcHNob3RJdGVtKHQpOwogICAgICAgICAgcmV0dXJuIG87CiAgICAgICAgfQogICAgICB9KGkpOwogICAgfQoKICAgIGZ1bmN0aW9uIGNhbGxiYWNrKCkgewogICAgICBpZiAoQUNDb25maWcub2xkVmVyc2lvbiA9PT0gR01faW5mby5zY3JpcHQudmVyc2lvbikgewogICAgICAgIENPTlNULmhhc05ld0Z1bmNOZWVkRGlzcGxheSA9IGZhbHNlOwogICAgICB9IGVsc2UgewogICAgICAgIENPTlNULmhhc05ld0Z1bmNOZWVkRGlzcGxheSA9IG5lZWREaXNwbGF5TmV3RnVuOwogICAgICB9CgogICAgICAhZnVuY3Rpb24oKSB7CiAgICAgICAgLyoqCiAgICAgICAgICog6L+b6KGM5LiN6YeN5aSN5o+S5YWl77yM5o+S5YWl5ZCO5omn6KGM5Zue6LCD5Ye95pWwCiAgICAgICAgICogQHBhcmFtIGRhdGEg5b6F5o+S5YWl5pWw5o2uCiAgICAgICAgICogQHBhcmFtIGNhbGxiYWNrIOWbnuiwg+WHveaVsAogICAgICAgICAqLwogICAgICAgIGZ1bmN0aW9uIGFjcHVzaChkYXRhLCBjYWxsYmFjaykgewogICAgICAgICAgLy8g5aaC5p6c5piv5Z6D5Zy+5pWw5o2u77yM6YKj5LmI5Y+v5Lul5Lii5byD55qECiAgICAgICAgICBpZiAoIWRhdGEpIHJldHVybjsKICAgICAgICAgIC8vIOWmguaenOaVsOaNruS4reacieWbnui9pu+8jOmCo+aVsOaNruS5n+aYr+aXoOaViOeahOato+aWh+iAjOW3sgogICAgICAgICAgaWYgKGRhdGEucmVwbGFjZSgvKHt8fXwsfFwrfO+8mnzjgIJ8XG4pLykgIT09IGRhdGEpIHJldHVybjsKICAgICAgICAgIGlmICh0aGlzLmZpbmRJbmRleChtID0+IG0gPT09IGRhdGEpIDwgMCkgewogICAgICAgICAgICB0aGlzLnB1c2goZGF0YSk7CiAgICAgICAgICAgIGNhbGxiYWNrICYmIGNhbGxiYWNrKHRoaXMpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBmdW5jdGlvbiBhY3JlbW92ZShkYXRhLCBjYWxsYmFjaykgewogICAgICAgICAgbGV0IGRlbElkID0gdGhpcy5maW5kSW5kZXgobSA9PiBtID09PSBkYXRhKTsKICAgICAgICAgIGlmIChkZWxJZCA+PSAwKSB7CiAgICAgICAgICAgIHRoaXMuc3BsaWNlKGRlbElkLCAxKTsKICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2sodGhpcyk7CiAgICAgICAgICB9IC8vIOWIoOmZpGRlbElk55qE5pWw5o2u77yM5Yig6Zmk5LiA5LiqCiAgICAgICAgfQogICAgICAgIC8vIOmBv+WFjeaxoeafk+WFqOWxgOWOn+Wei+mTvgogICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBQ0NvbmZpZy5Vc2VyQmxvY2tMaXN0LCAnYWNwdXNoJywge3ZhbHVlOiBhY3B1c2h9KQogICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShBQ0NvbmZpZy5Vc2VyQmxvY2tMaXN0LCAnYWNyZW1vdmUnLCB7dmFsdWU6IGFjcmVtb3ZlfSkKICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkob3RoZXJEYXRhLm90aGVyLmN1ckhvc3RzLCAnYWNwdXNoJywge3ZhbHVlOiBhY3B1c2h9KQogICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShvdGhlckRhdGEub3RoZXIuY3VySG9zdHMsICdhY3JlbW92ZScsIHt2YWx1ZTogYWNyZW1vdmV9KQogICAgICB9KCk7CgoKCiAgICAgICFmdW5jdGlvbiAoKSB7CiAgICAgICAgbGV0IGluc2VydExvY2tlZCA9IGZhbHNlOwogICAgICAgIGlmICh0eXBlb2YgR01fZ2V0UmVzb3VyY2VUZXh0ID09PSAndW5kZWZpbmVkJykgewogICAgICAgICAgR00uZ2V0UmVzb3VyY2VUZXh0ID0gR01fZ2V0UmVzb3VyY2VUZXh0ID0gYXN5bmMgZnVuY3Rpb24gKGFSZXNvdXJjZU5hbWUpIHsKICAgICAgICAgICAgbGV0IHJlcyA9IGF3YWl0IChhd2FpdCBmZXRjaChhd2FpdCBHTS5nZXRSZXNvdXJjZVVybChhUmVzb3VyY2VOYW1lKSkpLnRleHQoKTsKICAgICAgICAgICAgbGV0IHNhdmVSZXMgPSBhd2FpdCBHTS5nZXRWYWx1ZShhUmVzb3VyY2VOYW1lKTsKICAgICAgICAgICAgaWYgKHR5cGVvZiAoc2F2ZVJlcykgPT09ICd1bmRlZmluZWQnKSB7CiAgICAgICAgICAgICAgR00uc2V0VmFsdWUoYVJlc291cmNlTmFtZSwgcmVzKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICByZXR1cm4gc2F2ZVJlczsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gcmVzOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoR01fZ2V0UmVzb3VyY2VUZXh0KSB7CiAgICAgICAgICAvLyDku4XlnKjmlK/mjIFHTV9nZXRSZXNvdXJjZVRleHTnmoTlrrnlmajkuIrov5vooYzliqjmgIHmlbDmja7mm7TmlrAKICAgICAgICAgIC8vIOS4lOiDvemYsuatouiwt+atjOeZvuW6pumhtemdouinhOWImeWkp+WPmOWKqOWPiOmcgOimgeabtOaWsOiEmuacrCAtIOeJueWIq+aYr+a2ieWPiue/u+mhteWPguaVsAogICAgICAgICAgbGV0IGNvbmZpZyA9IEdNX2dldFJlc291cmNlVGV4dCgiU2l0ZUNvbmZpZ1J1bGVzIik7CiAgICAgICAgICBldmFsKGNvbmZpZyk7CiAgICAgICAgICBpZiAodHlwZW9mIChvbmxpbmVEQikgPT09ICJ1bmRlZmluZWQiKSB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIue6v+S4iuaVsOaNruS4uuepuiIpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgREJTaXRlID0gb25saW5lREI7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmIChsb2NhdGlvbi5ob3N0LmluY2x1ZGVzKCJ4dWVzaHUuYmFpZHUuY29tIikpIHsKICAgICAgICAgIGN1clNpdGUgPSBEQlNpdGUuYmFpZHVfeHVlc2h1OwogICAgICAgIH0gZWxzZSBpZiAobG9jYXRpb24uaG9zdC5pbmNsdWRlcygiLmJhaWR1LmNvbSIpKSB7CiAgICAgICAgICBpZiAobmF2aWdhdG9yLnVzZXJBZ2VudC5yZXBsYWNlKC8oYW5kcm9pZHxtb2JpbGV8aXBob25lKS9pZ20sICIiKSAhPT0gbmF2aWdhdG9yLnVzZXJBZ2VudCkgewogICAgICAgICAgICBjdXJTaXRlID0gREJTaXRlLm1CYWlkdTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIGN1clNpdGUgPSBEQlNpdGUuYmFpZHU7CiAgICAgICAgICB9CiAgICAgICAgICBDT05TVC51c2VJdGVtID0gQUNDb25maWcuYmFpZHU7CiAgICAgICAgfSBlbHNlIGlmIChsb2NhdGlvbi5ob3N0LmluY2x1ZGVzKCJ6aGlodS5jb20iKSkgewogICAgICAgICAgY3VyU2l0ZSA9IERCU2l0ZS56aGlodTsKICAgICAgICAgIENPTlNULnVzZUl0ZW0gPSBBQ0NvbmZpZy56aGlodTsKICAgICAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLmhvc3QuaW5jbHVkZXMoInNvZ291IikpIHsKICAgICAgICAgIGN1clNpdGUgPSBEQlNpdGUuc29nb3U7CiAgICAgICAgICBDT05TVC51c2VJdGVtID0gQUNDb25maWcuc29nb3U7CiAgICAgICAgfSBlbHNlIGlmIChsb2NhdGlvbi5ob3N0LmluY2x1ZGVzKCJzby5jb20iKSkgewogICAgICAgICAgY3VyU2l0ZSA9IERCU2l0ZS5oYW9zb3U7CiAgICAgICAgICBDT05TVC51c2VJdGVtID0gQUNDb25maWcub3RoZXI7CiAgICAgICAgfSBlbHNlIGlmIChsb2NhdGlvbi5ob3N0LmluY2x1ZGVzKCJnb29nbGUiKSkgewogICAgICAgICAgY3VyU2l0ZSA9IERCU2l0ZS5nb29nbGU7CiAgICAgICAgICBDT05TVC51c2VJdGVtID0gQUNDb25maWcuZ29vZ2xlOwogICAgICAgIH0gZWxzZSBpZiAobG9jYXRpb24uaG9zdC5pbmNsdWRlcygiYmluZyIpKSB7CiAgICAgICAgICBjdXJTaXRlID0gREJTaXRlLmJpbmc7CiAgICAgICAgICBDT05TVC51c2VJdGVtID0gQUNDb25maWcuYmluZzsKICAgICAgICB9IGVsc2UgaWYgKGxvY2F0aW9uLmhvc3QuaW5jbHVkZXMoImR1Y2tkdWNrZ28iKSkgewogICAgICAgICAgY3VyU2l0ZSA9IERCU2l0ZS5kdWNrOwogICAgICAgICAgQ09OU1QudXNlSXRlbSA9IEFDQ29uZmlnLmR1Y2s7CiAgICAgICAgfSBlbHNlIGlmIChsb2NhdGlvbi5ob3N0LmluY2x1ZGVzKCJkb2dlZG9nZSIpKSB7CiAgICAgICAgICBjdXJTaXRlID0gREJTaXRlLmRvZ2U7CiAgICAgICAgICBDT05TVC51c2VJdGVtID0gQUNDb25maWcuZG9nZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgY3VyU2l0ZSA9IERCU2l0ZS5vdGhlcjsKICAgICAgICAgIENPTlNULnVzZUl0ZW0gPSBBQ0NvbmZpZy5vdGhlcjsKICAgICAgICB9CiAgICAgICAgY3VyU2l0ZS5wYWdlTnVtID0gMTsgLy8g5b2T5YmN6aG15pWwCiAgICAgICAgY3VyU2l0ZS5wYWdlTG9hZGluZyA9IGZhbHNlOwogICAgICAgIGN1clNpdGUucGFnZVVybCA9ICIiOwogICAgICAgIGlmICgKICAgICAgICAgIChjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLkdPT0dMRSAmJiBsb2NhdGlvbi5ocmVmLnJlcGxhY2UoL3RibT0oaXNjaHxsY2x8c2hvcHxmbG0pLywgIiIpICE9PSBsb2NhdGlvbi5ocmVmICkgfHwKICAgICAgICAgIChjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLkJJTkcgJiYgbG9jYXRpb24uaHJlZi5yZXBsYWNlKC9pbWFnZXNcL3NlYXJjaC8sICIiKSAhPT0gbG9jYXRpb24uaHJlZiApCiAgICAgICAgKSB7CiAgICAgICAgICAvLyDlm77niYfnq5kg44CB5Zyw5Zu+56uZ44CB6LSt54mp56uZCiAgICAgICAgICBjb25zb2xlLmxvZygi54m55q6K56uZLOS4jeWKoOi9veagt+W8j++8jOS4jea3u+WKoG1lbnUiKTsKICAgICAgICAgIENPTlNULmlzR29vZ2xlSW1hZ2VVcmwgPSB0cnVlOwogICAgICAgIH0KCiAgICAgICAgaWYoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5CQUlEVV9YVUVTSFUpewogICAgICAgICAgQ09OU1QudXNlSXRlbS5BZHNTdHlsZU1vZGUgPSAyOyAvLyDljZXliJflsYXkuK3ljbPlj68KICAgICAgICB9CgogICAgICAgIGlmIChBQ0NvbmZpZy5BZHNTdHlsZUVuYWJsZSkgewogICAgICAgICAgQ09OU1QuU3R5bGVNYW5nZXIgPSBGU0JhaWR1KCk7IC8vIOa3u+WKoOiuvue9rumhuS3ljZXlj4zliJfmmL7npLoKICAgICAgICB9CgogICAgICAgIGNvbnNvbGUubG9nKCIlY1tBQy1SZWRpcmVjdF0gJWNMZXQgTWUgSW50cm9kdWNlIHlvdSBhIFZlcnkgR29vZCBTZWFyY2ggRW5naW5l77yaJWMgJXMgJWNTZWFyY2ggRW5naW5lLiIsICJmb250LXdlaWdodDpib2xkO2NvbG9yOmNvcm5mbG93ZXJibHVlIiwgImNvbG9yOjAiLCAiZm9udC13ZWlnaHQ6Ym9sZDtjb2xvcjpkYXJrb3JhbmdlIiwgQ09OU1QudXNlSXRlbS5uYW1lLnJlcGxhY2UoQ09OU1QudXNlSXRlbS5uYW1lWzBdLCBDT05TVC51c2VJdGVtLm5hbWVbMF0udG9VcHBlckNhc2UoKSksICJmb250LXdlaWdodDpub3JtYWw7Y29sb3I6MCIpOwoKICAgICAgICBsZXQgU2l0ZUJsb2NrID0gewogICAgICAgICAgLyoqCiAgICAgICAgICAgKiDliJ3lp4vljJZCbG9ja+agt+W8jwogICAgICAgICAgICovCiAgICAgICAgICBpbml0U3R5bGU6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgQUNfYWRkU3R5bGUoImJ1dHRvbi5naGhpZGVyLmdoaGJbYWMtdXNlci1hbHRlcj0nMSddOjpiZWZvcmV7Y29udGVudDon5Y+W5raIIC0gJzt9I3NwLWFjLWNvbnRhaW5lciAuYWMtYmxvY2staXRlbXtjb2xvcjojQUFBO21hcmdpbi1sZWZ0OjQ4cHg7fSNzcC1hYy1jb250YWluZXIgLmFjLWJsb2NrLWl0ZW1kZWx7ZmxvYXQ6cmlnaHQ7bWFyZ2luLWxlZnQ6MDtwYWRkaW5nOjAgMjBweDtjdXJzb3I6cG9pbnRlcjt9I3NwLWFjLWNvbnRhaW5lciAuYWMtYmxvY2staXRlbWRlbDpob3Zlcntjb2xvcjpyZWQ7fSNzcC1hYy1jb250YWluZXIgLmFjLWJsb2NrLWhpZ2h7Y29sb3I6IzAwMDt9LmFjLWJsb2NrTGlzdCBsaTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNhM2NhZmY7Y29sb3I6d2hpdGUgIWltcG9ydGFudDtjdXJzb3I6cG9pbnRlcjt9ICpbYWMtbmVlZGhpZGVdICp7ZGlzcGxheTpub25lfSAqW2FjLW5lZWRoaWRlXSAuYmxvY2tTaG93e2Rpc3BsYXk6dW5zZXQ7Y3Vyc29yOnBvaW50ZXI7fSAqW2FjLW5lZWRoaWRlXSAuYmxvY2tTaG93OmhvdmVye2JvcmRlcjoxcHggc29saWQgI0RERH1idXR0b24uZ2hoaWRlcntjb2xvcjojNTU1O2JhY2tncm91bmQtY29sb3I6I2ZjZmNmYztmb250LWZhbWlseTpzYW5zLXNlcmlmO21hcmdpbjphdXRvIDJweDtib3JkZXI6MXB4IHNvbGlkICNjY2M7Ym9yZGVyLXJhZGl1czo0cHg7cGFkZGluZzoycHggM3B4fWJ1dHRvbi5naGhpZGVye2ZvbnQtc2l6ZToxMnB4fWJ1dHRvbi5naGhpZGVyOmhvdmVye2NvbG9yOiMwMDZhZmY7YmFja2dyb3VuZDojZmZmfSIsCiAgICAgICAgICAgICAgIkFDLUJsb2NrU3R5bGUiKTsKICAgICAgICAgIH0sCiAgICAgICAgICAvKioKICAgICAgICAgICAqIOWIneWni+WMluWxj+iUveaMiemSruWKoOi9vQogICAgICAgICAgICovCiAgICAgICAgICBpbml0OiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGxldCBjaGVja05vZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChjdXJTaXRlLk1haW5UeXBlICsgIjpub3QoW2FjYmxvY2tdKSIpOwogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNoZWNrTm9kZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgbGV0IGN1ck5vZGUgPSBjaGVja05vZGVzW2ldOwogICAgICAgICAgICAgICAgbGV0IGZhdmljb25Ob2RlID0gY3VyTm9kZS5xdWVyeVNlbGVjdG9yKGN1clNpdGUuRmF2aWNvblR5cGUpOwogICAgICAgICAgICAgICAgLy8gaWYoY3VyTm9kZS5oYXNBdHRyaWJ1dGUoImFjYmxvY2siKSkgY29udGludWU7CiAgICAgICAgICAgICAgICBsZXQgaG9zdCA9IGdldE5vZGVIb3N0KGZhdmljb25Ob2RlKS5jdXJIb3N0OwogICAgICAgICAgICAgICAgLy8gaWYoaG9zdCA9PT0gbnVsbCkgY29udGludWU7CiAgICAgICAgICAgICAgICBsZXQgZmFOb2RlID0gY3VyTm9kZS5xdWVyeVNlbGVjdG9yKGN1clNpdGUuQmxvY2tUeXBlKTsKICAgICAgICAgICAgICAgIGxldCBub2RlU3R5bGUgPSAiZGlzcGxheTp1bnNldDsiOwogICAgICAgICAgICAgICAgaWYgKEFDQ29uZmlnLmlzQmxvY2tCdG5Ob3REaXNwbGF5KSB7CiAgICAgICAgICAgICAgICAgIG5vZGVTdHlsZSA9ICJkaXNwbGF5Om5vbmU7IjsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGZhTm9kZS5pbnNlcnRBZGphY2VudEhUTUwoImFmdGVyZW5kIiwgYDxidXR0b24gc3R5bGU9JyR7bm9kZVN0eWxlfScgY2xhc3M9J2doaGlkZXIgZ2hoYicgaHJlZj0iJHtmYXZpY29uTm9kZS5ocmVmIHx8IGZhdmljb25Ob2RlLmlubmVyVGV4dH0iIG1ldGE9IiR7aG9zdH0iIGRhdGEtaG9zdD0iJHtob3N0fSIgdGl0bGU9JyR7dGhpcy5nZXRCbG9ja0J0blRpdGxlKGhvc3QpfSc+YmxvY2s8L2J1dHRvbj5gKTsKCiAgICAgICAgICAgICAgICBjdXJOb2RlLnNldEF0dHJpYnV0ZSgiYWNibG9jayIsICIwIik7CiAgICAgICAgICAgICAgICBjdXJOb2RlLnNldEF0dHJpYnV0ZSgiYWNibG9jayIsICIwIik7CiAgICAgICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmluaXRMaXN0ZW5lcigpOwogICAgICAgICAgICB0aGlzLnJlbmRlckRpc3BsYXkoKTsKICAgICAgICAgIH0sCiAgICAgICAgICBnZXRCbG9ja0J0blRpdGxlKGhvc3QpewogICAgICAgICAgICByZXR1cm4gYOeCueWHu+WNs+WPr+Wxj+iUvSAke2hvc3R9IOaUvuW8gO+8jOmcgOimgeWcqOiHquWumuS5ieS4reaJi+WKqOmFjee9ruaUvuW8gGA7CiAgICAgICAgICB9LAogICAgICAgICAgaW5pdExpc3RlbmVyOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGxldCBjaGVja05vZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiYnV0dG9uLmdoaGlkZXI6bm90KFthY0Vudl0pIik7CiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hlY2tOb2Rlcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgIGNoZWNrTm9kZXNbaV0uYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCB0aGlzLmRvSGlkZUVudik7CiAgICAgICAgICAgICAgY2hlY2tOb2Rlc1tpXS5zZXRBdHRyaWJ1dGUoImFjRW52IiwgIjAiKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGRvSGlkZUVudjogZnVuY3Rpb24gKGVudikgewogICAgICAgICAgICAvLyDlhYjmj5LlhaXmlbDmja4tLS3orrDlvpfov5jopoHlhpnlhaXlrZjlgqgKICAgICAgICAgICAgbGV0IG5vZGUgPSBlbnYuc291cmNlVGFyZ2V0IHx8IGVudi50YXJnZXQ7CiAgICAgICAgICAgIGxldCBob3N0ID0gbm9kZS5kYXRhc2V0Lmhvc3Q7CiAgICAgICAgICAgIGlmICgrbm9kZS5nZXRBdHRyaWJ1dGUoImFjLXVzZXItYWx0ZXIiKSA9PT0gMSkgewogICAgICAgICAgICAgIC8vIOW3sue7j+Wxj+iUveS5i+WQju+8jOWGjeasoeeCueWHu2Jsb2Nr5bqU6K+l5piv5Y+W5raI54q25oCBCiAgICAgICAgICAgICAgbm9kZS5yZW1vdmVBdHRyaWJ1dGUoImFjLXVzZXItYWx0ZXIiKTsKICAgICAgICAgICAgICBBQ0NvbmZpZy5Vc2VyQmxvY2tMaXN0LmFjcmVtb3ZlKGhvc3QpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIC8vIOato+W4uOWxj+iUveaTjeS9nAogICAgICAgICAgICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKCJhYy11c2VyLWFsdGVyIik7CiAgICAgICAgICAgICAgQUNDb25maWcuVXNlckJsb2NrTGlzdC5hY3B1c2goaG9zdCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgREJDb25maWcuVXNlckJsb2NrTGlzdCA9IEFDQ29uZmlnLlVzZXJCbG9ja0xpc3Q7CiAgICAgICAgICAgIEFDU2V0VmFsdWUoIkNvbmZpZyIsIEpTT04uc3RyaW5naWZ5KERCQ29uZmlnKSk7IC8vIOeCueWHu+S4gOasoe+8jOS/neWtmOS4gOasoQogICAgICAgICAgICBTaXRlQmxvY2sucmVuZGVyRGlzcGxheSgpOwogICAgICAgICAgICBlbnYuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgICAgICB9LAogICAgICAgICAgLy8g5Yi35paw5pi+56S65pWI5p6cLS3ogJfml7bmk43kvZwKICAgICAgICAgIHJlbmRlckRpc3BsYXk6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgbGV0IGNoZWNrTm9kZXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGN1clNpdGUuTWFpblR5cGUpOwogICAgICAgICAgICBsZXQgZmxhZyA9ICJhYy1uZWVkaGlkZSI7CiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgY2hlY2tOb2Rlcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICBsZXQgY3VyTm9kZSA9IGNoZWNrTm9kZXNbaV07CiAgICAgICAgICAgICAgICBsZXQge2N1ckhvc3QsIGN1clVybH0gPSBnZXROb2RlSG9zdChjdXJOb2RlLnF1ZXJ5U2VsZWN0b3IoY3VyU2l0ZS5GYXZpY29uVHlwZSkpOwogICAgICAgICAgICAgICAgY3VyVXJsID0gY3VyVXJsIHx8ICIiOwogICAgICAgICAgICAgICAgaWYgKGN1ckhvc3QgPT09IG51bGwpIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBsZXQgQmxvY2tCdG4gPSBjdXJOb2RlLnF1ZXJ5U2VsZWN0b3IoIi5naGhpZGVyLmdoaGIiKTsKICAgICAgICAgICAgICAgICAgQmxvY2tCdG4uZGF0YXNldC5ob3N0ID0gQmxvY2tCdG4uZGF0YXNldC5tZXRhID0gY3VySG9zdDsKICAgICAgICAgICAgICAgICAgQmxvY2tCdG4udGl0bGUgPSB0aGlzLmdldEJsb2NrQnRuVGl0bGUoY3VySG9zdCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAoY3VyTm9kZS5xdWVyeVNlbGVjdG9yKCJidXR0b25bYWMtdXNlci1hbHRlcl0iKSAhPSBudWxsKSBjb250aW51ZTsgLy8g55So5oi35omL5Yqo54K56L+H5pi+56S655qE77yM6YKj5LmI6Lez6L+HY2hlY2sKICAgICAgICAgICAgICAgIGxldCByZWdMaXN0ID0gdnVlVk0uY2FsX1VzZXJCbG9ja0xpc3RSZWdleDsgLy8g5L2/55SoVnVl55qEY29tcHV0ZWTlsZ7mgKforqHnrpfnmoTmlbDmja7lgLzvvIzkuIDoiKzmoLnmnKzkuI3mm7TmlrAKICAgICAgICAgICAgICAgIGlmICghY3VyVXJsLmluY2x1ZGVzKCJ3d3cuYmFpZHUuY29tL2xpbmsiKSAmJiByZWdMaXN0LmZpbmRJbmRleChvbmUgPT4gewogICAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBvbmUudGVzdChjdXJIb3N0KSB8fCBvbmUudGVzdChjdXJVcmwpOyAvLyDogJfml7bmk43kvZwKICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBtID09PSBjdXJIb3N0OwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KSA+PSAwKSB7CiAgICAgICAgICAgICAgICAgIC8vIOWPquajgOafpeWcqOWxj+iUveihqOS4reeahOaVsOaNrgogICAgICAgICAgICAgICAgICBpZiAoIWN1ck5vZGUuaGFzQXR0cmlidXRlKGZsYWcpKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKEFDQ29uZmlnLmlzQmxvY2tEaXNwbGF5KSB7IC8vIOWvueS6juS4jeaYvuekuueahOaVsOaNruWPr+S7pei/m+ihjOenu+mZpOaTjeS9nAogICAgICAgICAgICAgICAgICAgICAgY3VyTm9kZS5yZW1vdmUoKTsKICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBsZXQgY3VyVGl0bGUgPSBjdXJOb2RlLnF1ZXJ5U2VsZWN0b3IoY3VyU2l0ZS5CbG9ja1R5cGUpOwogICAgICAgICAgICAgICAgICAgIGN1clRpdGxlID0gY3VyVGl0bGUuaW5uZXJUZXh0IHx8IGN1clRpdGxlLnRleHRDb250ZW50OwoKICAgICAgICAgICAgICAgICAgICBpZiAoY3VyTm9kZS5oYXNBdHRyaWJ1dGUoZmxhZykpIHsKICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCLlhrLnqoHkuobvvIHvvIHvvIEiKTsKICAgICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlOwogICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgY3VyTm9kZS5zZXRBdHRyaWJ1dGUoZmxhZywgIjEiKTsKICAgICAgICAgICAgICAgICAgICBjdXJOb2RlLmluc2VydEFkamFjZW50SFRNTCgiYWZ0ZXJCZWdpbiIsIGA8c3BhbiBjbGFzcz0iYmxvY2tTaG93IiB0aXRsZT0i5aaC5p6c6ZyA6KaB5LiA55u05pi+56S677yM6K+35Zyo6Ieq5a6a5LmJ5LitRElZ55uu5b2V56e76Zmk5pys5Zyw5Z2AIj4ke2N1clRpdGxlfSZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOyAtYmxvY2sgYnkgJHtjdXJIb3N0fTwvc3Bhbj5gKTsKCiAgICAgICAgICAgICAgICAgICAgKGZ1bmN0aW9uICh4Y3VyKSB7CiAgICAgICAgICAgICAgICAgICAgICAvLyDlt7Lnu4/lsY/olL3kuYvlkI7nmoTlhoXlrrnvvIzngrnlh7vkuIDkuIvmmL7npLrljp/lp4vlhoXlrrkKICAgICAgICAgICAgICAgICAgICAgIHhjdXIucXVlcnlTZWxlY3RvcigiLmJsb2NrU2hvdyIpLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgZnVuY3Rpb24gKGVudikgewogICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnBhcmVudE5vZGUucXVlcnlTZWxlY3RvcigiYnV0dG9uLmdoaGlkZXIiKS5zZXRBdHRyaWJ1dGUoImFjLXVzZXItYWx0ZXIiLCAiMSIpOyAvLyDov5nkuKrlsZ7mgKfnlKjkuo7kv53mjIHlnKhET03mm7TmlrDml7bvvIzmjInpkq7kuI3lj5gKICAgICAgICAgICAgICAgICAgICAgICAgeGN1ci5yZW1vdmVBdHRyaWJ1dGUoZmxhZyk7CiAgICAgICAgICAgICAgICAgICAgICAgIHNhZmVGdW5jdGlvbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgeGN1ci5xdWVyeVNlbGVjdG9yKCIuYmxvY2tTaG93IikucmVtb3ZlKCk7CiAgICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgICBlbnYuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICB9KShjdXJOb2RlKTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgY3VyTm9kZS5yZW1vdmVBdHRyaWJ1dGUoZmxhZyk7CiAgICAgICAgICAgICAgICAgIHNhZmVGdW5jdGlvbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgY3VyTm9kZS5xdWVyeVNlbGVjdG9yKCIuYmxvY2tTaG93IikucmVtb3ZlKCk7CiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9OwoKICAgICAgICBmdW5jdGlvbiBhZGRTdHlsZShjc3MpIHsgLy/mt7vliqBDU1PnmoTku6PnoIEtLWNvcHnnmoQKICAgICAgICAgIGxldCBwaSA9IGRvY3VtZW50LmNyZWF0ZVByb2Nlc3NpbmdJbnN0cnVjdGlvbigKICAgICAgICAgICAgJ3htbC1zdHlsZXNoZWV0JywKICAgICAgICAgICAgJ3R5cGU9InRleHQvY3NzIiBtdXN0PSJmYWxzZSIgaHJlZj0iZGF0YTp0ZXh0L2Nzczt1dGYtOCwnICsgZW5jb2RlVVJJQ29tcG9uZW50KGNzcykgKyAnIicKICAgICAgICAgICk7CiAgICAgICAgICByZXR1cm4gZG9jdW1lbnQuaW5zZXJ0QmVmb3JlKHBpLCBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQpOwogICAgICAgIH0KCiAgICAgICAgaWYgKEFDQ29uZmlnLmlzQWRzRW5hYmxlKSB7CiAgICAgICAgICAvLyBkaXNwbGF55bey57uP5peg5rOV6ZqQ6JeP5LuW5Lus5LqG77yM6ZyA6KaB55So57ud5a+555qE6ZqQ6JePCiAgICAgICAgICBhZGRTdHlsZSgiI2JvdHRvbWFkc3tkaXNwbGF5Om5vbmU7fSAjY29udGVudF9sZWZ0PmRpdjpub3QoW2lkXSk+ZGl2W2NtYXRjaGlkXSwgI2NvbnRlbnRfbGVmdD5kaXZbaWQqPSczMDAnXTpub3QoW2NsYXNzKj0ncmVzdWx0J10pLCNjb250ZW50X3JpZ2h0IHRkPmRpdjpub3QoW2lkXSksI2NvbnRlbnRfcmlnaHQ+YnJ7cG9zaXRpb246YWJzb2x1dGU7dG9wOi02NjY2cHg7fSIpOwogICAgICAgIH0KICAgICAgICBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5HT09HTEUgJiYgQUNDb25maWcuaXNHb29sZUluQmFpZHVNb2RlRW5hYmxlKSB7CiAgICAgICAgICBzYWZlV2FpdEZ1bmMoIiNsb2dvIGltZywgI2xvZ29jb250IGltZyIsIGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgICAgIGxldCBmYU5vZGUgPSBub2RlLnBhcmVudE5vZGUucGFyZW50Tm9kZTsKICAgICAgICAgICAgZmFOb2RlLmNsYXNzTGlzdC5hZGQoImJhaWR1Iik7CiAgICAgICAgICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKCJzcmMiKTsKICAgICAgICAgICAgbm9kZS5zcmMgPSAiaHR0cHM6Ly9waWMucm1iLmJkc3RhdGljLmNvbS9jODYyNTVlODAyODY5NjEzOWQzZTNlNGJiNDRjMDQ3Yi5wbmciOwogICAgICAgICAgICBub2RlLndpZHRoID0gIjEyNSI7CiAgICAgICAgICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKCJoZWlnaHQiKTsKICAgICAgICAgIH0pOwogICAgICAgICAgc2FmZVdhaXRGdW5jKCIjbWFpbiAubG9nbyBpbWdbYWx0PSdHb29nbGUnXSIsIGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKCJzcmNzZXQiKTsKICAgICAgICAgICAgbm9kZS5zcmMgPSAiaHR0cHM6Ly93d3cuYmFpZHUuY29tL2ltZy9iZF9sb2dvMS5wbmc/d2hlcmU9c3VwZXIiOwogICAgICAgICAgICBub2RlLnNldEF0dHJpYnV0ZSgiaGVpZ2h0IiwgIjU5Iik7CiAgICAgICAgICB9LCAzMDApOwogICAgICAgICAgc2FmZVdhaXRGdW5jKCJmb3JtW3JvbGU9J3NlYXJjaCddIC5sb2dvIGltZyIsIGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgICAgIG5vZGUucmVtb3ZlQXR0cmlidXRlKCJzcmNzZXQiKTsKICAgICAgICAgICAgbm9kZS5zcmMgPSAiaHR0cHM6Ly93d3cuYmFpZHUuY29tL2ltZy9iZF9sb2dvMS5wbmc/d2hlcmU9c3VwZXIiOwogICAgICAgICAgICBub2RlLnNldEF0dHJpYnV0ZSgiaGVpZ2h0IiwgIjU5Iik7CiAgICAgICAgICB9LCAzMDApOwogICAgICAgICAgZG9jdW1lbnQudGl0bGUgPSBkb2N1bWVudC50aXRsZS5yZXBsYWNlKC9eR29vZ2xlLywgIueZvuW6puS4gOS4i++8jOS9oOWwseefpemBkyIpCiAgICAgICAgICAucmVwbGFjZSgvIC0gR29vZ2xlIOaQnOe0oi8sICJf55m+5bqm5pCc57SiIikKICAgICAgICAgIC5yZXBsYWNlKC8gLSBHb29nbGUgU2VhcmNoLywgIl/nmb7luqbmkJzntKIiKTsKICAgICAgICAgIHNhZmVXYWl0RnVuYygiaGVhZCIsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgbGV0IGxpbmtUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCJsaW5rW3R5cGU9J2ltYWdlL3gtaWNvbiddIikgfHwgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnbGluaycpOwogICAgICAgICAgICBsaW5rVGFyZ2V0LnR5cGUgPSAnaW1hZ2UveC1pY29uJzsKICAgICAgICAgICAgbGlua1RhcmdldC5yZWwgPSAnc2hvcnRjdXQgaWNvbic7CiAgICAgICAgICAgIGxpbmtUYXJnZXQuaHJlZiA9ICdodHRwczovL3d3dy5iYWlkdS5jb20vZmF2aWNvbi5pY28nOwogICAgICAgICAgICBkb2N1bWVudC5oZWFkLmFwcGVuZENoaWxkKGxpbmtUYXJnZXQpOwogICAgICAgICAgfSkKICAgICAgICB9CiAgICAgICAgaWYgKGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuRFVDSykgewogICAgICAgICAgYWRkU3R5bGUgPSBBQ19hZGRTdHlsZSAvLyDlhbzlrrlEdWNr55qEQ1NQ5ZCM5rqQ6KeE5YiZCiAgICAgICAgICBpZihBQ0NvbmZpZy5ub3JtYWxpemVEdWNrKXsKICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIERERy5zZXR0aW5ncy5zZXQoImtuIiwgMSwgeyAgLy8g5paw56qX5Y+j5omT5byA6aG16Z2iCiAgICAgICAgICAgICAgICAgIHNhdmVUb0Nsb3VkOiB0cnVlLAogICAgICAgICAgICAgICAgICBmb3JjZVRoZW1lOiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIERERy5zZXR0aW5ncy5zZXQoImthdiIsIDEsIHsgLy8g6L+e57ut5pi+56S65pCc57Si57uT5p6cCiAgICAgICAgICAgICAgICAgIHNhdmVUb0Nsb3VkOiB0cnVlLAogICAgICAgICAgICAgICAgICBmb3JjZVRoZW1lOiB0cnVlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LCA1MDAwKTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgdHJ5IHsKICAgICAgICAgIGlmIChjdXJTaXRlLlNpdGVUeXBlSUQgIT09IFNpdGVUeXBlLk9USEVSUykgewogICAgICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdET01Ob2RlSW5zZXJ0ZWQnLCBNYWluQ2FsbGJhY2ssIGZhbHNlKTsKICAgICAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigna2V5dXAnLCBNYWluQ2FsbGJhY2ssIGZhbHNlKTsKICAgICAgICAgICAgc2FmZVdhaXRGdW5jKCJib2R5IiwgKCkgPT4gewogICAgICAgICAgICAgICFkb2N1bWVudC5ib2R5Lmhhc0F0dHJpYnV0ZShDT05TVC51c2VJdGVtLm5hbWUpICYmIGRvY3VtZW50LmJvZHkuc2V0QXR0cmlidXRlKENPTlNULnVzZUl0ZW0ubmFtZSwgIjEiKTsKICAgICAgICAgICAgICAhZG9jdW1lbnQuYm9keS5jbGFzc0xpc3QuY29udGFpbnMoQ09OU1QudXNlSXRlbS5uYW1lKSAmJiBkb2N1bWVudC5ib2R5LmNsYXNzTGlzdC5hZGQoQ09OU1QudXNlSXRlbS5uYW1lKTsKICAgICAgICAgICAgICBpZiAoQUNDb25maWcuQWRzU3R5bGVFbmFibGUpIHsgLy8g5Y2V54us5LiN6ZyA6KaB5a6a5pe25ZmoLemgu+e5geinpuWPkS3ovb3lhaVjc3MKICAgICAgICAgICAgICAgIEZTQmFpZHUoKTsKICAgICAgICAgICAgICAgIEFkZEN1c3RvbVN0eWxlKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KQogICAgICAgICAgICBSQUZJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgaWYoZG9jdW1lbnQuYm9keSkgewogICAgICAgICAgICAgICAgcmFwaWREZWFsKCk7IC8vIOWumuacn+iwg+eUqO+8jOmBv+WFjeacieaXtuWAmURPTeaPkuWFpeayoeacieaJp+ihjOWvvOiHtOeahOmXrumimAogICAgICAgICAgICAgICAgaWYgKGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuQkFJRFUgJiYgbG9jYXRpb24uaHJlZi5pbmNsdWRlcygidG49bmV3cyIpKSB7CiAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuc2V0QXR0cmlidXRlKCJuZXdzIiwgIjEiKTsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQXR0cmlidXRlKCJuZXdzIik7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LCA4MDApOwogICAgICAgICAgfQogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIH0KICAgICAgICBzYWZlV2FpdEZ1bmMoIiNzcC1hYy1jb250ZW50IiwgZnVuY3Rpb24gKGNoZWNrTm9kZSkgewogICAgICAgICAgdmFyIG9wdGlvbnMgPSB7CiAgICAgICAgICAgIGVsOiBjaGVja05vZGUsCiAgICAgICAgICAgIGRhdGE6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICByZXR1cm4gQWxsRGF0YTsKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbWV0aG9kczogewogICAgICAgICAgICAgIGxhYmVsU2hvd0hpZGVFbnYoZSkgewogICAgICAgICAgICAgICAgbGV0IGN1ciA9IGUuc3JjRWxlbWVudCB8fCBlLnRhcmdldDsKICAgICAgICAgICAgICAgIGxldCBjbGFzc05hbWUgPSBjdXIucGFyZW50Tm9kZS5jbGFzc05hbWUucmVwbGFjZSgiY29udGFpbmVyLWxhYmVsICIsICIiKTsKICAgICAgICAgICAgICAgIEFDX2FkZFN0eWxlKCIuWFg+bGFiZWwsLlhYPmJye2Rpc3BsYXk6dW5zZXQgIWltcG9ydGFudDt9LlhYPi5sYWJlbF9oaWRle2Rpc3BsYXk6bm9uZSAhaW1wb3J0YW50O30iLnJlcGxhY2UoL1hYL2dtLCBjbGFzc05hbWUpLAogICAgICAgICAgICAgICAgICAiQUMtU2hvd0hpZGVJdGVtLSIgKyBjbGFzc05hbWUsICJib2R5Iik7CiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgc3luY1RvQmxvY2tMaXN0KGVudikgewogICAgICAgICAgICAgICAgdGhpcy5BQ0NvbmZpZy5Vc2VyQmxvY2tMaXN0ID0gZW52LnRhcmdldC52YWx1ZS5zcGxpdCgiXG4iKS5maWx0ZXIoaXRlbSA9PiBpdGVtICE9PSAnJyk7CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICByZW1vdmVBQmxvY2tMaXN0SXRlbShlKSB7CiAgICAgICAgICAgICAgICAvLyDngrnlh7vnp7vpmaTmn5DkuKpob3N05pWw5o2u5pe2CiAgICAgICAgICAgICAgICBsZXQgdGFyZ2V0ID0gZS5zcmNFbGVtZW50IHx8IGUudGFyZ2V0OwogICAgICAgICAgICAgICAgaWYgKHRhcmdldC50YWdOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICJsYWJlbCIpIHsKICAgICAgICAgICAgICAgICAgbGV0IGhvc3QgPSB0YXJnZXQuZGF0YXNldC5ob3N0OwogICAgICAgICAgICAgICAgICBBQ0NvbmZpZy5Vc2VyQmxvY2tMaXN0LmFjcmVtb3ZlKGhvc3QpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgY2tBZGRSdWxlKCkgewogICAgICAgICAgICAgICAgLy8g5omL5Yqo5aKe5Yqg56e76Zmk6KeE5YiZCiAgICAgICAgICAgICAgICBBQ0NvbmZpZy5Vc2VyQmxvY2tMaXN0LmFjcHVzaCh0aGlzLm90aGVyLmFkZEJsb2NrSXRlbSk7CiAgICAgICAgICAgICAgICB0aGlzLm90aGVyLmFkZEJsb2NrSXRlbSA9ICIiOwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgbG9hZEN1c3RvbVN0eWxlKCkgewogICAgICAgICAgICAgICAgQUNfYWRkU3R5bGUoQUNDb25maWcuVXNlclN0eWxlVGV4dCwgIkFDLXVzZXJTdHlsZSIsICJoZWFkIiwgdHJ1ZSk7IC8vIOeUqOaIt+iHquWumuS5ieeahOagt+W8j+ihqAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgc2F2ZUNvbmZpZygpIHsKICAgICAgICAgICAgICAgIGlmKHRoaXMub3RoZXIuY3VyVGFiPT09MSAmJiAhdGhpcy5BQ0NvbmZpZy5hY2NlcHRMaWNlbnNlKXsKICAgICAgICAgICAgICAgICAgdGhpcy5vdGhlci5jdXJUYWIgPSAzCiAgICAgICAgICAgICAgICAgIHJldHVybgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy5BQ0NvbmZpZy5hY2NlcHRMaWNlbnNlID0gdHJ1ZQoKICAgICAgICAgICAgICAgIHRoaXMuQUNDb25maWcubGFzdFNhdmVUaW1lID0gbmV3IERhdGUoKS5nZXRUaW1lKCk7CiAgICAgICAgICAgICAgICBBQ1NldFZhbHVlKCJDb25maWciLCBKU09OLnN0cmluZ2lmeSh0aGlzLkFDQ29uZmlnKSk7CiAgICAgICAgICAgICAgICBpZighdGhpcy5BQ0NvbmZpZy5kb0Rpc2FibGVTdWcpewogICAgICAgICAgICAgICAgICBhY1NldENvb2tpZSgiT1JJR0lOIiwgMSwgInd3dy5iYWlkdS5jb20iLCBuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIDg2NDAwMDAwKTsKICAgICAgICAgICAgICAgICAgYWNTZXRDb29raWUoIklTU1ciLCAxLCBudWxsLCBuZXcgRGF0ZSgpLmdldFRpbWUoKSAtIDg2NDAwMDAwKTsKICAgICAgICAgICAgICAgICAgYWNTZXRDb29raWUoIklTU1ciLCAxLCAid3d3LmJhaWR1LmNvbSIsIG5ldyBEYXRlKCkuZ2V0VGltZSgpIC0gODY0MDAwMDApOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbi5yZWxvYWQoKTsKICAgICAgICAgICAgICAgIH0sIDIwMCk7CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBjbG9zZVBhbmVsKCkgewogICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3NwLWFjLWNvbnRlbnQiKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgdXNlVGhpc0h1eWFuQ29sb3IoZW52KSB7CiAgICAgICAgICAgICAgICB0aGlzLkFDQ29uZmlnLmRlZmF1bHRIdVlhbkNvbG9yID0gZW52LnRhcmdldC52YWx1ZSB8fCBlbnYudGFyZ2V0LmRhdGFzZXQudmFsdWU7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLkFDQ29uZmlnLmRlZmF1bHRIdVlhbkNvbG9yKTsKICAgICAgICAgICAgICAgIENPTlNULlN0eWxlTWFuZ2VyLmxvYWRIdVlhblN0eWxlKHRoaXMuQUNDb25maWcuZGVmYXVsdEh1WWFuQ29sb3IpOwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgZ2V0VXNlckJsb2NrTGlzdFJlZ2V4KCkgewogICAgICAgICAgICAgICAgdmFyIGxpc3QgPSBbXTsKICAgICAgICAgICAgICAgIHRoaXMuQUNDb25maWcuVXNlckJsb2NrTGlzdC5mb3JFYWNoKG9uZSA9PiB7CiAgICAgICAgICAgICAgICAgIG9uZSAhPT0gbnVsbCAmJiBsaXN0LnB1c2gobmV3IFJlZ0V4cChvbmUucmVwbGFjZSgiKiIsICIuKiIpKSk7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgaWYgKHR5cGVvZiAodGhpcy5vdGhlci5hZGRCbG9ja0l0ZW0pICE9PSAidW5kZWZpbmVkIiAmJiB0aGlzLm90aGVyLmFkZEJsb2NrSXRlbSAhPT0gIiIpIHsKICAgICAgICAgICAgICAgICAgbGlzdC5wdXNoKG5ldyBSZWdFeHAodGhpcy5vdGhlci5hZGRCbG9ja0l0ZW0ucmVwbGFjZSgiKiIsICIuKiIpKSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICByZXR1cm4gbGlzdDsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGNvbXB1dGVkOiB7CiAgICAgICAgICAgICAgZ2V0QmxvY2tMaXN0KCkgeyAvLyDkvJroh6rliqjnmoRyZW5kZXLliLBodG1s5LiK5Y6777yM5LiN55So5omL5Yqo5Y675riy5p+T5LiA6YGNCiAgICAgICAgICAgICAgICBsZXQgaW5zSFRNTCA9ICIiOwogICAgICAgICAgICAgICAgbGV0IFVzZXJCbG9ja1JlZ0xpc3QgPSB0aGlzLmNhbF9Vc2VyQmxvY2tMaXN0UmVnZXg7CiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuQUNDb25maWcuVXNlckJsb2NrTGlzdC5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICBsZXQgaW5zQ2xhc3MgPSB0aGlzLm90aGVyLmN1ckhvc3RzLmZpbmRJbmRleChtID0+IHsKICAgICAgICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgICAgICAgbGV0IFtjdXJIb3N0LCBjdXJVcmxdID0gbS5zcGxpdCgiIyMjIik7CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gVXNlckJsb2NrUmVnTGlzdFtpXS50ZXN0KGN1ckhvc3QpIHx8IFVzZXJCbG9ja1JlZ0xpc3RbaV0udGVzdChjdXJVcmwpOwogICAgICAgICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBtID09PSBBQ0NvbmZpZy5Vc2VyQmxvY2tMaXN0W2ldOwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkgPj0gMCA/ICIgYWMtYmxvY2staGlnaCIgOiAiIjsgLy8g5aaC5p6c5b2T5YmN6aG16Z2i5a2Y5Zyo77yM5YiZ6auY5LquCiAgICAgICAgICAgICAgICAgIGluc0hUTUwgKz0gYDxsaT48bGFiZWwgY2xhc3M9ImFjLWJsb2NrLWl0ZW0ke2luc0NsYXNzfSIgZGF0YS1ob3N0PSIke3RoaXMuQUNDb25maWcuVXNlckJsb2NrTGlzdFtpXX0iPiR7dGhpcy5BQ0NvbmZpZy5Vc2VyQmxvY2tMaXN0W2ldfTwvbGFiZWw+PGxhYmVsIGNsYXNzPSJhYy1ibG9jay1pdGVtIGFjLWJsb2NrLWl0ZW1kZWwiIGRhdGEtaG9zdD0iJHt0aGlzLkFDQ29uZmlnLlVzZXJCbG9ja0xpc3RbaV19Ij54PC9sYWJlbD48L2xpPlxuYDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJldHVybiBpbnNIVE1MOwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgY2FsX2RpeUJsb2NrTGlzdEJ0bigpIHsKICAgICAgICAgICAgICAgIGlmICh0aGlzLm90aGVyLnNob3dCbG9ja0xpc3RBcmVhKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC5zZXR0aW5nX3BhbmVsX3NlY29uZC5ibG9ja0VkaXRCdG5FbmRfdGV4dDsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiB0aGlzLmxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC5zZXR0aW5nX3BhbmVsX3NlY29uZC5ibG9ja0VkaXRCdG5fdGV4dDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGNhbF9Vc2VyQmxvY2tMaXN0UmVnZXgoKSB7CiAgICAgICAgICAgICAgICB2YXIgbGlzdCA9IFtdOwogICAgICAgICAgICAgICAgdGhpcy5BQ0NvbmZpZy5Vc2VyQmxvY2tMaXN0LmZvckVhY2gob25lID0+IHsKICAgICAgICAgICAgICAgICAgb25lICE9PSBudWxsICYmIGxpc3QucHVzaChuZXcgUmVnRXhwKG9uZS5yZXBsYWNlKCIqIiwgIi4qIikpKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICBpZiAodHlwZW9mICh0aGlzLm90aGVyLmFkZEJsb2NrSXRlbSkgIT09ICJ1bmRlZmluZWQiICYmIHRoaXMub3RoZXIuYWRkQmxvY2tJdGVtICE9PSAiIikgewogICAgICAgICAgICAgICAgICBsaXN0LnB1c2gobmV3IFJlZ0V4cCh0aGlzLm90aGVyLmFkZEJsb2NrSXRlbS5yZXBsYWNlKCIqIiwgIi4qIikpKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHJldHVybiBsaXN0OwogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgQWRzU3R5bGVNb2RlQ2hhbmdlKCkgewogICAgICAgICAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgICAgICAgdjE6IENPTlNULnVzZUl0ZW0uQWRzU3R5bGVNb2RlLAogICAgICAgICAgICAgICAgICB2MjogQ09OU1QudXNlSXRlbS5IdVlhbk1vZGUsCiAgICAgICAgICAgICAgICAgIHYzOiBBQ0NvbmZpZy5TdHlsZV9CYWlkdUxpdGUsCiAgICAgICAgICAgICAgICAgIHY0OiBBQ0NvbmZpZy5pc0Zhdmljb25FbmFibGUsCiAgICAgICAgICAgICAgICAgIHY1OiBDT05TVC5pc0dvb2dsZVNwZWNpYWwsCiAgICAgICAgICAgICAgICAgIHY2OiBBQ0NvbmZpZy5pc1JpZ2h0RGlzcGxheUVuYWJsZQogICAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFVzZXJTdHlsZUVuYWJsZUNoYW5nZSgpIHsKICAgICAgICAgICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICAgICAgIHYxOiBBQ0NvbmZpZy5pc1VzZXJTdHlsZUVuYWJsZQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgbGFuQ2hhbmdlKCl7CiAgICAgICAgICAgICAgICByZXR1cm4gewogICAgICAgICAgICAgICAgICB2MTogQUNDb25maWcuaXNFbkxhbmcKICAgICAgICAgICAgICAgIH07CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBpc1NhdmVCdXR0b25DYW5CZVNlZSgpIHsKICAgICAgICAgICAgICAgIHJldHVybiBpc0VsZW1lbnRWaXNpYmxlKHRoaXMuJHJlZnMuYm90dG9tU2F2ZUJ1dHRvbikKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHdhdGNoOiB7CiAgICAgICAgICAgICAgJ0NPTlNULnVzZUl0ZW0uSHVZYW5Nb2RlJzogewogICAgICAgICAgICAgICAgaW1tZWRpYXRlOiB0cnVlLAogICAgICAgICAgICAgICAgaGFuZGxlcih2YWwpIHsKICAgICAgICAgICAgICAgICAgaWYodmFsKSBDT05TVC5TdHlsZU1hbmdlci5sb2FkSHVZYW5TdHlsZSgpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBBZHNTdHlsZU1vZGVDaGFuZ2U6IHsKICAgICAgICAgICAgICAgIGhhbmRsZXIoKSB7CiAgICAgICAgICAgICAgICAgIC8vIOmcgOimgeWFiOWIoOmZpOWOn+acieeahOiKgueCueaVsOaNrgogICAgICAgICAgICAgICAgICB3aGlsZSAodHJ1ZSkgewogICAgICAgICAgICAgICAgICAgIGNvbnN0IHtyZXMsIG5vZGV9ID0gY2hlY2tEb2NtZW50SGFzTm9kZSgiQUMtIikKICAgICAgICAgICAgICAgICAgICBpZiAocmVzKSBub2RlLnJlbW92ZSgpOwogICAgICAgICAgICAgICAgICAgIGVsc2UgYnJlYWs7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgc2FmZVJlbW92ZSgic3R5bGVbY2xhc3M9J0FDLVN0eWxlLWV4cGFuZCddLHN0eWxlW2NsYXNzPSdBQy1Ud29QYWdlRXhTdHlsZSddLHN0eWxlW2NsYXNzPSdBQy1UaHJlZVBhZ2VFeFN0eWxlJ10sc3R5bGVbY2xhc3M9J0FDLUZvdXJQYWdlRXhTdHlsZSddLHN0eWxlW2NsYXNzPSdBQy1zdHlsZS1sb2dvJ10sc3R5bGVbY2xhc3M9J0FDLWJhaWR1TGl0ZVN0eWxlJ10sc3R5bGVbY2xhc3MqPSdIdVlhblN0eWxlLUZpbGUnXSIpOwogICAgICAgICAgICAgICAgICBhY0Nzc0xvYWRGbGFnID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgIENPTlNULlN0eWxlTWFuZ2VyLmluaXQoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIFVzZXJTdHlsZUVuYWJsZUNoYW5nZSgpIHsKICAgICAgICAgICAgICAgIGlmKEFDQ29uZmlnLmlzVXNlclN0eWxlRW5hYmxlKSB7CiAgICAgICAgICAgICAgICAgIHRoaXMubG9hZEN1c3RvbVN0eWxlKCk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBzYWZlUmVtb3ZlKCJzdHlsZVtjbGFzcz0nQUMtdXNlclN0eWxlJ10iKQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgbGFuQ2hhbmdlKCl7CiAgICAgICAgICAgICAgICBBbGxEYXRhLmxhbi51c2UgPSBBQ0NvbmZpZy5pc0VuTGFuZyA/IEFsbERhdGEubGFuLmVuIDogQWxsRGF0YS5sYW4uemhfY247CiAgICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjbXl1c2VyIikucmVtb3ZlKCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9OwogICAgICAgICAgaWYgKHR5cGVvZiAoVnVlKSAhPSAidW5kZWZpbmVkIikgewogICAgICAgICAgICBpZiAoK1Z1ZS52ZXJzaW9uLmNoYXJBdCgwKSA9PT0gMikgewogICAgICAgICAgICAgIHZ1ZVZNID0gbmV3IFZ1ZShvcHRpb25zKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB2dWVWTSA9IFZ1ZS5jcmVhdGVBcHAob3B0aW9ucykubW91bnQoY2hlY2tOb2RlKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgY29uc29sZS5lcnJvcigiVnVlIOacquWujOaIkOWIneWni+WMli0t56iL5bqP5peg5rOV5pyJ5pWI5omn6KGMIik7CiAgICAgICAgICB9CiAgICAgICAgfSwgMjUwKTsKCiAgICAgICAgZnVuY3Rpb24gTWFpbkNhbGxiYWNrKGUpIHsKICAgICAgICAgIGlmIChlLnRhcmdldCAhPSBudWxsICYmIHR5cGVvZiAoZS50YXJnZXQuY2xhc3NOYW1lKSA9PT0gInN0cmluZyIgJiYgZS50YXJnZXQuY2xhc3NOYW1lLnRvVXBwZXJDYXNlKCkuaW5kZXhPZigiQUMtIikgPT09IDApIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgfSAvL+Wxj+iUveaOieWboOS4uuWinuWKoGNzc+WvvOiHtOeahOinpuWPkWluc2VydOWKqOS9nAogICAgICAgICAgcmFwaWREZWFsKCk7CiAgICAgICAgICBJbnNlcnRTZXR0aW5nTWVudSgpOwogICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIFNob3dTZXR0aW5nKCk7CiAgICAgICAgICB9LCAxMDAwKSAvLyDmu57lkI7nqpflj6PnmoTliqDovb3vvIzlh4/lsJHliY3mnJ9DUFXkuonnlKgKICAgICAgICB9CgogICAgICAgIC8q5Lul5LiL5Luj56CB5aSn6YOo5YiG5p2l5rqQ5LqOU3VwcmVQcmVsb2FkZXIg5oSf6LCiIHN3ZHloICYmIHl3emhhaXFpICYmIE5MRiDku6Xlj4ogbWFjaDYg5aSn5L2sKi8KICAgICAgICAvKgogICAgICAgIFN1cGVyX3ByZWxvYWRlclBsdXNfb25lX05ldzogUHJlbG9hZCBhbmQgQXV0b3BhZ2VyLgogICAgICAgIENvcHlyaWdodCAoQykgMjAyMCBNYWNoNgoKICAgICAgICBUaGlzIHByb2dyYW0gaXMgZnJlZSBzb2Z0d2FyZTogeW91IGNhbiByZWRpc3RyaWJ1dGUgaXQgYW5kL29yIG1vZGlmeSBpdCB1bmRlciB0aGUgdGVybXMgb2YgdGhlIEdOVSBHZW5lcmFsIFB1YmxpYyBMaWNlbnNlIGFzIHB1Ymxpc2hlZCBieSB0aGUgRnJlZSBTb2Z0d2FyZSBGb3VuZGF0aW9uLCB2ZXJzaW9uIDMuCgogICAgICAgIFRoaXMgcHJvZ3JhbSBpcyBkaXN0cmlidXRlZCBpbiB0aGUgaG9wZSB0aGF0IGl0IHdpbGwgYmUgdXNlZnVsLCBidXQgV0lUSE9VVCBBTlkgV0FSUkFOVFk7IHdpdGhvdXQgZXZlbiB0aGUgaW1wbGllZCB3YXJyYW50eSBvZiBNRVJDSEFOVEFCSUxJVFkgb3IgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UuIFNlZSB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgZm9yIG1vcmUgZGV0YWlscy4KCiAgICAgICAgWW91IHNob3VsZCBoYXZlIHJlY2VpdmVkIGEgY29weSBvZiB0aGUgR05VIEdlbmVyYWwgUHVibGljIExpY2Vuc2UgYWxvbmcgd2l0aCB0aGlzIHByb2dyYW0uIElmIG5vdCwgc2VlIDxodHRwczovL3d3dy5nbnUub3JnL2xpY2Vuc2VzLz4uCiAgICAgICAgICovCiAgICAgICAgZnVuY3Rpb24gYWNfc3BmdW5jKGUpIHsKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIui/memHjOaciemXrumimCIpCiAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOwogICAgICAgICAgdmFyIHQsIHIgPSBlLmN1cnJlbnRUYXJnZXQ7CiAgICAgICAgICB2YXIgVHdlZW4gPSB7CiAgICAgICAgICAgICAgICBMaW5lYXI6IGZ1bmN0aW9uIExpbmVhcihlLCB0LCByLCBuKSB7CiAgICAgICAgICAgICAgICAgIHJldHVybiByICogZSAvIG4gKyB0OwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFF1YWQ6IHsKICAgICAgICAgICAgICAgICAgZWFzZUluOiBmdW5jdGlvbiBlYXNlSW4oZSwgdCwgciwgbikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiByICogKGUgLz0gbikgKiBlICsgdDsKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgZWFzZU91dDogZnVuY3Rpb24gZWFzZU91dChlLCB0LCByLCBuKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC1yICogKGUgLz0gbikgKiAoZSAtIDIpICsgdDsKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgZWFzZUluT3V0OiBmdW5jdGlvbiBlYXNlSW5PdXQoZSwgdCwgciwgbikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiAoZSAvPSBuIC8gMikgPCAxID8gciAvIDIgKiBlICogZSArIHQgOiAtciAvIDIgKiAoLS1lICogKGUgLSAyKSAtIDEpICsgdDsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIEN1YmljOiB7CiAgICAgICAgICAgICAgICAgIGVhc2VJbjogZnVuY3Rpb24gZWFzZUluKGUsIHQsIHIsIG4pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gciAqIChlIC89IG4pICogZSAqIGUgKyB0OwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBlYXNlT3V0OiBmdW5jdGlvbiBlYXNlT3V0KGUsIHQsIHIsIG4pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gciAqICgoZSA9IGUgLyBuIC0gMSkgKiBlICogZSArIDEpICsgdDsKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgZWFzZUluT3V0OiBmdW5jdGlvbiBlYXNlSW5PdXQoZSwgdCwgciwgbikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiAoZSAvPSBuIC8gMikgPCAxID8gciAvIDIgKiBlICogZSAqIGUgKyB0IDogciAvIDIgKiAoKGUgLT0gMikgKiBlICogZSArIDIpICsgdDsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFF1YXJ0OiB7CiAgICAgICAgICAgICAgICAgIGVhc2VJbjogZnVuY3Rpb24gZWFzZUluKGUsIHQsIHIsIG4pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gciAqIChlIC89IG4pICogZSAqIGUgKiBlICsgdDsKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgZWFzZU91dDogZnVuY3Rpb24gZWFzZU91dChlLCB0LCByLCBuKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC1yICogKChlID0gZSAvIG4gLSAxKSAqIGUgKiBlICogZSAtIDEpICsgdDsKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgZWFzZUluT3V0OiBmdW5jdGlvbiBlYXNlSW5PdXQoZSwgdCwgciwgbikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiAoZSAvPSBuIC8gMikgPCAxID8gciAvIDIgKiBlICogZSAqIGUgKiBlICsgdCA6IC1yIC8gMiAqICgoZSAtPSAyKSAqIGUgKiBlICogZSAtIDIpICsgdDsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIFF1aW50OiB7CiAgICAgICAgICAgICAgICAgIGVhc2VJbjogZnVuY3Rpb24gZWFzZUluKGUsIHQsIHIsIG4pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gciAqIChlIC89IG4pICogZSAqIGUgKiBlICogZSArIHQ7CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIGVhc2VPdXQ6IGZ1bmN0aW9uIGVhc2VPdXQoZSwgdCwgciwgbikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiByICogKChlID0gZSAvIG4gLSAxKSAqIGUgKiBlICogZSAqIGUgKyAxKSArIHQ7CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIGVhc2VJbk91dDogZnVuY3Rpb24gZWFzZUluT3V0KGUsIHQsIHIsIG4pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gKGUgLz0gbiAvIDIpIDwgMSA/IHIgLyAyICogZSAqIGUgKiBlICogZSAqIGUgKyB0IDogciAvIDIgKiAoKGUgLT0gMikgKiBlICogZSAqIGUgKiBlICsgMikgKyB0OwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgU2luZTogewogICAgICAgICAgICAgICAgICBlYXNlSW46IGZ1bmN0aW9uIGVhc2VJbihlLCB0LCByLCBuKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC1yICogTWF0aC5jb3MoZSAvIG4gKiAoTWF0aC5QSSAvIDIpKSArIHIgKyB0OwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBlYXNlT3V0OiBmdW5jdGlvbiBlYXNlT3V0KGUsIHQsIHIsIG4pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gciAqIE1hdGguc2luKGUgLyBuICogKE1hdGguUEkgLyAyKSkgKyB0OwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBlYXNlSW5PdXQ6IGZ1bmN0aW9uIGVhc2VJbk91dChlLCB0LCByLCBuKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIC1yIC8gMiAqIChNYXRoLmNvcyhNYXRoLlBJICogZSAvIG4pIC0gMSkgKyB0OwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgRXhwbzogewogICAgICAgICAgICAgICAgICBlYXNlSW46IGZ1bmN0aW9uIGVhc2VJbihlLCB0LCByLCBuKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDAgPT0gZSA/IHQgOiByICogTWF0aC5wb3coMiwgMTAgKiAoZSAvIG4gLSAxKSkgKyB0OwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBlYXNlT3V0OiBmdW5jdGlvbiBlYXNlT3V0KGUsIHQsIHIsIG4pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gZSA9PSBuID8gdCArIHIgOiByICogKDEgLSBNYXRoLnBvdygyLCAtMTAgKiBlIC8gbikpICsgdDsKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgZWFzZUluT3V0OiBmdW5jdGlvbiBlYXNlSW5PdXQoZSwgdCwgciwgbikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiAwID09IGUgPyB0IDogZSA9PSBuID8gdCArIHIgOiAoZSAvPSBuIC8gMikgPCAxID8gciAvIDIgKiBNYXRoLnBvdygyLCAxMCAqIChlIC0gMSkpICsgdCA6IHIgLyAyICogKDIgLSBNYXRoLnBvdygyLCAtMTAgKiAtLWUpKSArIHQ7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBDaXJjOiB7CiAgICAgICAgICAgICAgICAgIGVhc2VJbjogZnVuY3Rpb24gZWFzZUluKGUsIHQsIHIsIG4pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gLXIgKiAoTWF0aC5zcXJ0KDEgLSAoZSAvPSBuKSAqIGUpIC0gMSkgKyB0OwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBlYXNlT3V0OiBmdW5jdGlvbiBlYXNlT3V0KGUsIHQsIHIsIG4pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gciAqIE1hdGguc3FydCgxIC0gKGUgPSBlIC8gbiAtIDEpICogZSkgKyB0OwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBlYXNlSW5PdXQ6IGZ1bmN0aW9uIGVhc2VJbk91dChlLCB0LCByLCBuKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChlIC89IG4gLyAyKSA8IDEgPyAtciAvIDIgKiAoTWF0aC5zcXJ0KDEgLSBlICogZSkgLSAxKSArIHQgOiByIC8gMiAqIChNYXRoLnNxcnQoMSAtIChlIC09IDIpICogZSkgKyAxKSArIHQ7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBFbGFzdGljOiB7CiAgICAgICAgICAgICAgICAgIGVhc2VJbjogZnVuY3Rpb24gZWFzZUluKGUsIHQsIHIsIG4sIGEsIG8pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gMCA9PSBlID8gdCA6IDEgPT0gKGUgLz0gbikgPyB0ICsgciA6IChvIHx8IChvID0gLjMgKiBuKSwgIWEgfHwgYSA8IE1hdGguYWJzKHIpID8gKGEgPSByLAogICAgICAgICAgICAgICAgICAgICAgaSA9IG8gLyA0KSA6IGkgPSBvIC8gKDIgKiBNYXRoLlBJKSAqIE1hdGguYXNpbihyIC8gYSksIC1hICogTWF0aC5wb3coMiwgMTAgKiAoZSAtPSAxKSkgKiBNYXRoLnNpbigoZSAqIG4gLSBpKSAqICgyICogTWF0aC5QSSkgLyBvKSArIHQpOwogICAgICAgICAgICAgICAgICAgIHZhciBpOwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBlYXNlT3V0OiBmdW5jdGlvbiBlYXNlT3V0KGUsIHQsIHIsIG4sIGEsIG8pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gMCA9PSBlID8gdCA6IDEgPT0gKGUgLz0gbikgPyB0ICsgciA6IChvIHx8IChvID0gLjMgKiBuKSwgIWEgfHwgYSA8IE1hdGguYWJzKHIpID8gKGEgPSByLAogICAgICAgICAgICAgICAgICAgICAgaSA9IG8gLyA0KSA6IGkgPSBvIC8gKDIgKiBNYXRoLlBJKSAqIE1hdGguYXNpbihyIC8gYSksIGEgKiBNYXRoLnBvdygyLCAtMTAgKiBlKSAqIE1hdGguc2luKChlICogbiAtIGkpICogKDIgKiBNYXRoLlBJKSAvIG8pICsgciArIHQpOwogICAgICAgICAgICAgICAgICAgIHZhciBpOwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBlYXNlSW5PdXQ6IGZ1bmN0aW9uIGVhc2VJbk91dChlLCB0LCByLCBuLCBhLCBvKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDAgPT0gZSA/IHQgOiAyID09IChlIC89IG4gLyAyKSA/IHQgKyByIDogKG8gfHwgKG8gPSBuICogKC4zICogMS41KSksICFhIHx8IGEgPCBNYXRoLmFicyhyKSA/IChhID0gciwKICAgICAgICAgICAgICAgICAgICAgIGkgPSBvIC8gNCkgOiBpID0gbyAvICgyICogTWF0aC5QSSkgKiBNYXRoLmFzaW4ociAvIGEpLCBlIDwgMSA/IGEgKiBNYXRoLnBvdygyLCAxMCAqIChlIC09IDEpKSAqIE1hdGguc2luKChlICogbiAtIGkpICogKDIgKiBNYXRoLlBJKSAvIG8pICogLS41ICsgdCA6IGEgKiBNYXRoLnBvdygyLCAtMTAgKiAoZSAtPSAxKSkgKiBNYXRoLnNpbigoZSAqIG4gLSBpKSAqICgyICogTWF0aC5QSSkgLyBvKSAqIC41ICsgciArIHQpOwogICAgICAgICAgICAgICAgICAgIHZhciBpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgQmFjazogewogICAgICAgICAgICAgICAgICBlYXNlSW46IGZ1bmN0aW9uIGVhc2VJbihlLCB0LCByLCBuLCBhKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGwgPT0gYSAmJiAoYSA9IDEuNzAxNTgpLCByICogKGUgLz0gbikgKiBlICogKChhICsgMSkgKiBlIC0gYSkgKyB0OwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBlYXNlT3V0OiBmdW5jdGlvbiBlYXNlT3V0KGUsIHQsIHIsIG4sIGEpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gbnVsbCA9PSBhICYmIChhID0gMS43MDE1OCksIHIgKiAoKGUgPSBlIC8gbiAtIDEpICogZSAqICgoYSArIDEpICogZSArIGEpICsgMSkgKyB0OwogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICBlYXNlSW5PdXQ6IGZ1bmN0aW9uIGVhc2VJbk91dChlLCB0LCByLCBuLCBhKSB7CiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIG51bGwgPT0gYSAmJiAoYSA9IDEuNzAxNTgpLCAoZSAvPSBuIC8gMikgPCAxID8gciAvIDIgKiAoZSAqIGUgKiAoKDEgKyAoYSAqPSAxLjUyNSkpICogZSAtIGEpKSArIHQgOiByIC8gMiAqICgoZSAtPSAyKSAqIGUgKiAoKDEgKyAoYSAqPSAxLjUyNSkpICogZSArIGEpICsgMikgKyB0OwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgQm91bmNlOiB7CiAgICAgICAgICAgICAgICAgIGVhc2VJbjogZnVuY3Rpb24gZWFzZUluKGUsIHQsIHIsIG4pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gciAtIFR3ZWVuLkJvdW5jZS5lYXNlT3V0KG4gLSBlLCAwLCByLCBuKSArIHQ7CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIGVhc2VPdXQ6IGZ1bmN0aW9uIGVhc2VPdXQoZSwgdCwgciwgbikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiAoZSAvPSBuKSA8IDEgLyAyLjc1ID8gciAqICg3LjU2MjUgKiBlICogZSkgKyB0IDogZSA8IDIgLyAyLjc1ID8gciAqICg3LjU2MjUgKiAoZSAtPSAxLjUgLyAyLjc1KSAqIGUgKyAuNzUpICsgdCA6IGUgPCAyLjUgLyAyLjc1ID8gciAqICg3LjU2MjUgKiAoZSAtPSAyLjI1IC8gMi43NSkgKiBlICsgLjkzNzUpICsgdCA6IHIgKiAoNy41NjI1ICogKGUgLT0gMi42MjUgLyAyLjc1KSAqIGUgKyAuOTg0Mzc1KSArIHQ7CiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIGVhc2VJbk91dDogZnVuY3Rpb24gZWFzZUluT3V0KGUsIHQsIHIsIG4pIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gZSA8IG4gLyAyID8gLjUgKiBUd2Vlbi5Cb3VuY2UuZWFzZUluKDIgKiBlLCAwLCByLCBuKSArIHQgOiAuNSAqIFR3ZWVuLkJvdW5jZS5lYXNlT3V0KDIgKiBlIC0gbiwgMCwgciwgbikgKyAuNSAqIHIgKyB0OwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICBUd2Vlbk0gPSBbIkxpbmVhciIsICJRdWFkIiwgIkN1YmljIiwgIlF1YXJ0IiwgIlF1aW50IiwgIlNpbmUiLCAiRXhwbyIsICJDaXJjIiwgIkVsYXN0aWMiLCAiQmFjayIsICJCb3VuY2UiXSwKICAgICAgICAgICAgICBUd2VlbkVhc2UgPSBbImVhc2VJbiIsICJlYXNlT3V0IiwgImVhc2VJbk91dCJdOwogICAgICAgICAgdmFyIHByZWZzID0gewogICAgICAgICAgICBzX21ldGhvZDogMywKICAgICAgICAgICAgc19lYXNlOiAyLAogICAgICAgICAgICBzX0ZQUzogNjAsCiAgICAgICAgICAgIHNfZHVyYXRpb246IDMzMywKICAgICAgICAgIH07CgogICAgICAgICAgZnVuY3Rpb24gZ2V0UmVsYXRpdmVEaXYoZSkgewogICAgICAgICAgICB2YXIgdCA9IHIuaWQ7CiAgICAgICAgICAgIHJldHVybiAodCA9IHQucmVwbGFjZSgvKHNwLXNlcGFyYXRvci0pKC4rKS8sIChmdW5jdGlvbiAodCwgciwgbikgewogICAgICAgICAgICAgIHJldHVybiByICsgU3RyaW5nKE51bWJlcihuKSArICgicHJlIiA9PSBlID8gLTEgOiAxKSk7CiAgICAgICAgICAgIH0pKSkgPyBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCh0KSA6IG51bGw7CiAgICAgICAgICB9CgogICAgICAgICAgZnVuY3Rpb24gc3BfdHJhbnNpdGlvbihlLCB0KSB7CiAgICAgICAgICAgIHZhciByID0gc3BfdHJhbnNpdGlvbi5Ud2VlbkY7CiAgICAgICAgICAgIHIgfHwgKHIgPSAociA9IFR3ZWVuW1R3ZWVuTVtwcmVmcy5zX21ldGhvZF1dKVtUd2VlbkVhc2VbcHJlZnMuc19lYXNlXV0gfHwgciwgc3BfdHJhbnNpdGlvbi5Ud2VlbkYgPSByKTsKICAgICAgICAgICAgdmFyIG4gPSAxZTMgLyBwcmVmcy5zX0ZQUywgYSA9IDAsIG8gPSBlLCBpID0gdCAtIGUsIHMgPSBNYXRoLmNlaWwocHJlZnMuc19kdXJhdGlvbiAvIG4pLAogICAgICAgICAgICAgICAgYyA9IHdpbmRvdy5zY3JvbGxYOwogICAgICAgICAgICAhZnVuY3Rpb24gdHJhbnNpdGlvbigpIHsKICAgICAgICAgICAgICB2YXIgZSA9IE1hdGguY2VpbChyKGEsIG8sIGksIHMpKTsKICAgICAgICAgICAgICB3aW5kb3cuc2Nyb2xsKGMsIGUpLCBhIDwgcyAmJiAoYSsrLCBzZXRUaW1lb3V0KHRyYW5zaXRpb24sIG4pKTsKICAgICAgICAgICAgfSgpOwogICAgICAgICAgfQoKICAgICAgICAgIGZ1bmN0aW9uIHNjcm9sbEl0KGUsIHQpIHsKICAgICAgICAgICAgc3BfdHJhbnNpdGlvbihlLCB0KTsKICAgICAgICAgIH0KCiAgICAgICAgICBzd2l0Y2ggKGUudGFyZ2V0LmlkKSB7CiAgICAgICAgICAgIGNhc2UgInNwLXNwLWdvdG9wIjoKICAgICAgICAgICAgICBzY3JvbGxJdCh3aW5kb3cuc2Nyb2xsWSwgMCk7CiAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICBjYXNlICJzcC1zcC1nb3ByZSI6CiAgICAgICAgICAgICAgdmFyIG4gPSBnZXRSZWxhdGl2ZURpdigicHJlIik7CiAgICAgICAgICAgICAgaWYgKCFuKSByZXR1cm47CiAgICAgICAgICAgICAgdCA9IHdpbmRvdy5zY3JvbGxZOwogICAgICAgICAgICAgIHZhciBhID0gbi5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3A7CiAgICAgICAgICAgICAgYSA9IHQgLSAoci5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS50b3AgLSBhKTsKICAgICAgICAgICAgICBzY3JvbGxJdCh0LCBhKTsKICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgIGNhc2UgInNwLXNwLWdvbmV4dCI6CiAgICAgICAgICAgICAgdmFyIG8gPSBnZXRSZWxhdGl2ZURpdigibmV4dCIpOwogICAgICAgICAgICAgIGlmICghbykgcmV0dXJuOwogICAgICAgICAgICAgIHQgPSB3aW5kb3cuc2Nyb2xsWTsKICAgICAgICAgICAgICB2YXIgaSA9IG8uZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkudG9wOwogICAgICAgICAgICAgIGkgPSB0ICsgKC1yLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCArIGkpOwogICAgICAgICAgICAgIHNjcm9sbEl0KHQsIGkpOwogICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgY2FzZSAic3Atc3AtZ29ib3R0b20iOgogICAgICAgICAgICAgIHNjcm9sbEl0KHdpbmRvdy5zY3JvbGxZLCBNYXRoLm1heChkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsSGVpZ2h0LCBkb2N1bWVudC5ib2R5LnNjcm9sbEhlaWdodCkpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gd2luZG93c2Nyb2xsKGZuID0gKCk9Pnt9KSB7CiAgICAgICAgICBzYWZlV2FpdEZ1bmMoKCkgPT4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LCAoKSA9PiB7CiAgICAgICAgICAgIHZhciBiZWZvcmVTY3JvbGxUb3AgPSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc2Nyb2xsVG9wCiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgeyAvLyDlu7bml7bmiafooYzvvIzpgb/lhY3liJrovb3lhaXliLDpobXpnaLlsLHop6blj5Hnv7vpobXkuovku7YKICAgICAgICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigic2Nyb2xsIiwgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgIHZhciBhZnRlclNjcm9sbFRvcCA9IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudC5zY3JvbGxUb3AsCiAgICAgICAgICAgICAgICAgICAgZGVsdGEgPSBhZnRlclNjcm9sbFRvcCAtIGJlZm9yZVNjcm9sbFRvcDsKICAgICAgICAgICAgICAgIGlmIChkZWx0YSA9PT0gMCkgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICAgICAgZm4oZGVsdGEgPiAwID8gImRvd24iIDogInVwIiwgZSk7CiAgICAgICAgICAgICAgICBiZWZvcmVTY3JvbGxUb3AgPSBhZnRlclNjcm9sbFRvcDsKICAgICAgICAgICAgICB9LCBmYWxzZSk7CiAgICAgICAgICAgIH0sIDEwMDApCiAgICAgICAgICB9KQogICAgICAgIH0KCiAgICAgICAgd2luZG93c2Nyb2xsKGZ1bmN0aW9uIChkaXJlY3Rpb24sIGUpIHsKICAgICAgICAgIGlmIChkaXJlY3Rpb24gPT09ICJkb3duIikgeyAvLyDkuIvmu5HmiY3lh4blpIfnv7vpobUKICAgICAgICAgICAgbGV0IHNwbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNzcC1mdy1hX2VuYWJsZSIpOwogICAgICAgICAgICAvLyDlvIDlkK/lkI7vvIzkuJTlnKjpnZ7vvIhzdXByZXByZWxvYWRlcuWQr+eUqO+8ieaXtuWdh+WPrwogICAgICAgICAgICBpZiAoQUNDb25maWcuaXNBdXRvcGFnZSA9PT0gdHJ1ZSAmJiAhKHNwbCAmJiBzcGwuY2hlY2tlZCA9PT0gdHJ1ZSkpIHsKICAgICAgICAgICAgICB2YXIgc2Nyb2xsVG9wID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCB8fCB3aW5kb3cucGFnZVlPZmZzZXQgfHwgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3A7CiAgICAgICAgICAgICAgbGV0IHNjcm9sbERlbHRhID0gNjY2OwogICAgICAgICAgICAgIGlmIChjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLkdPT0dMRSkgc2Nyb2xsRGVsdGEgPSAxMDI0OyAvLyDmr5Xnq5/osLfmrYzliqDovb3nvJPmhaLnmoTpl67popgKICAgICAgICAgICAgICBpZiAoZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbEhlaWdodCA8PSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0ICsgc2Nyb2xsVG9wICsgc2Nyb2xsRGVsdGEgJiYgY3VyU2l0ZS5wYWdlTG9hZGluZyA9PT0gZmFsc2UpIHsKICAgICAgICAgICAgICAgIGN1clNpdGUucGFnZUxvYWRpbmcgPSB0cnVlOwogICAgICAgICAgICAgICAgaWYgKGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuRFVDSykgeyAvLyDlj6/ku6XnlKjlt7LmnInnmoTmlrnms5XmnaXlrp7njrDkuoYKICAgICAgICAgICAgICAgICAgaWYgKCFBQ0NvbmZpZy5ub3JtYWxpemVEdWNrIHx8ICtBQ0NvbmZpZy5kdWNrLkFkc1N0eWxlTW9kZSA+PSAzKSB7ICAvLyDlpoLmnpzmsqHmnInlvIDlkK/vvIzpgqPkuYjmiYvliqjnv7vpobUgfHwg5aaC5p6c5piv5Y+M5YiX55qE5pe25YCZ77yM5Ly85LmO5bm25LiN5Lya6Ieq5Yqo6Kem5Y+R57+76aG15pWI5p6cCiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI2xpbmtzIC5yZXN1bHQtLW1vcmUgYSIpLmNsaWNrKCk7CiAgICAgICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICBjdXJTaXRlLnBhZ2VMb2FkaW5nID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgfSwgNTAwMCk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIFNob3dQYWdlci5sb2FkTW9yZVBhZ2UoKTsKICAgICAgICAgICAgICAgICAgaWYoY3VyU2l0ZS5wYWdlciAmJiBjdXJTaXRlLnBhZ2VyLnN0eWxpc2gpIHsKICAgICAgICAgICAgICAgICAgICBBQ19hZGRTdHlsZShjdXJTaXRlLnBhZ2VyLnN0eWxpc2gsICJBQy1wYWdlci1zdHlsaXNoIikKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIHZhciBTaG93UGFnZXIgPSB7CiAgICAgICAgICBnZXRGdWxsSHJlZjogZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgaWYoZSA9PT0gbnVsbCkgcmV0dXJuICcnOwogICAgICAgICAgICAic3RyaW5nIiAhPSB0eXBlb2YgZSAmJiAoZSA9IGUuZ2V0QXR0cmlidXRlKCJocmVmIikpOwogICAgICAgICAgICB2YXIgdCA9IHRoaXMuZ2V0RnVsbEhyZWYuYTsKICAgICAgICAgICAgcmV0dXJuIHQgfHwgKHRoaXMuZ2V0RnVsbEhyZWYuYSA9IHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIikpLCB0LmhyZWYgPSBlLCB0LmhyZWY7CiAgICAgICAgICB9LAogICAgICAgICAgY3JlYXRlRG9jdW1lbnRCeVN0cmluZzogZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgaWYgKGUpIHsKICAgICAgICAgICAgICBpZiAoIkhUTUwiICE9PSBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQubm9kZU5hbWUpIHJldHVybiAobmV3IERPTVBhcnNlcikucGFyc2VGcm9tU3RyaW5nKGUsICJhcHBsaWNhdGlvbi94aHRtbCt4bWwiKTsKICAgICAgICAgICAgICB2YXIgdDsKICAgICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgdCA9IChuZXcgRE9NUGFyc2VyKS5wYXJzZUZyb21TdHJpbmcoZSwgInRleHQvaHRtbCIpOwogICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgaWYgKHQpIHJldHVybiB0OwogICAgICAgICAgICAgIGlmIChkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQpIHQgPSBkb2N1bWVudC5pbXBsZW1lbnRhdGlvbi5jcmVhdGVIVE1MRG9jdW1lbnQoIkFEb2N1bWVudCIpOyBlbHNlIHRyeSB7CiAgICAgICAgICAgICAgICAodCA9IGRvY3VtZW50LmNsb25lTm9kZSghMSkpLmFwcGVuZENoaWxkKHQuaW1wb3J0Tm9kZShkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQsICExKSksCiAgICAgICAgICAgICAgICAgIHQuZG9jdW1lbnRFbGVtZW50LmFwcGVuZENoaWxkKHQuY3JlYXRlRWxlbWVudCgiaGVhZCIpKSwgdC5kb2N1bWVudEVsZW1lbnQuYXBwZW5kQ2hpbGQodC5jcmVhdGVFbGVtZW50KCJib2R5IikpOwogICAgICAgICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgaWYgKHQpIHsKICAgICAgICAgICAgICAgIHZhciByID0gZG9jdW1lbnQuY3JlYXRlUmFuZ2UoKTsKICAgICAgICAgICAgICAgIHIuc2VsZWN0Tm9kZUNvbnRlbnRzKGRvY3VtZW50LmJvZHkpOwogICAgICAgICAgICAgICAgdmFyIG4gPSByLmNyZWF0ZUNvbnRleHR1YWxGcmFnbWVudChlKTsKICAgICAgICAgICAgICAgIHQuYm9keS5hcHBlbmRDaGlsZChuKTsKICAgICAgICAgICAgICAgIGZvciAodmFyIGEsIG8gPSB7CiAgICAgICAgICAgICAgICAgIFRJVExFOiAhMCwKICAgICAgICAgICAgICAgICAgTUVUQTogITAsCiAgICAgICAgICAgICAgICAgIExJTks6ICEwLAogICAgICAgICAgICAgICAgICBTVFlMRTogITAsCiAgICAgICAgICAgICAgICAgIEJBU0U6ICEwCiAgICAgICAgICAgICAgICB9LCBpID0gdC5ib2R5LCBzID0gaS5jaGlsZE5vZGVzLCBjID0gcy5sZW5ndGggLSAxOyBjID49IDA7IGMtLSkgb1soYSA9IHNbY10pLm5vZGVOYW1lXSAmJiBpLnJlbW92ZUNoaWxkKGEpOwogICAgICAgICAgICAgICAgcmV0dXJuIHQ7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9IGVsc2UgY29uc29sZS5lcnJvcigiW0FDLVNjcmlwdF0iLCAi5rKh5pyJ5om+5Yiw6KaB6L2s5oiQRE9N55qE5a2X56ym5LiyIik7CiAgICAgICAgICB9LAogICAgICAgICAgbG9hZE1vcmVQYWdlOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGlmIChjdXJTaXRlLnBhZ2VyKSB7CiAgICAgICAgICAgICAgbGV0IGN1clBhZ2VFbGUgPSBnZXRFbGVtZW50QnlYcGF0aChjdXJTaXRlLnBhZ2VyLm5leHRMaW5rKTsKICAgICAgICAgICAgICB2YXIgdXJsID0gdGhpcy5nZXRGdWxsSHJlZihjdXJQYWdlRWxlKTsKICAgICAgICAgICAgICBpZihjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLkdPT0dMRSApIHsKICAgICAgICAgICAgICAgIGlmKG5hdmlnYXRvci51c2VyQWdlbnQudG9Mb3dlckNhc2UoKS5pbmNsdWRlcygnbWFjaW50b3NoJykpIHsKICAgICAgICAgICAgICAgICAgLy8gTUFSSyDkuLrkuoblhbzlrrnnmb7luqblnKhzYWZhcmnkuIvnmoQKICAgICAgICAgICAgICAgICAgdXJsID0gdXJsLnJlcGxhY2UoJ2h0dHBzOi8vJywgJ2h0dHA6Ly8nKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgaWYodXJsID09PSAnJykgcmV0dXJuOwogICAgICAgICAgICAgIHZhciBzZXBJbWdzID0gewogICAgICAgICAgICAgICAgdG9wOiAiZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCWUFBQUFXQ0FZQUFBREV0R3c3QUFBQUdYUkZXSFJUYjJaMGQyRnlaUUJCWkc5aVpTQkpiV0ZuWlZKbFlXUjVjY2xsUEFBQUFXdEpSRUZVZU5yY2xFMHJSR0VVeDhjMUdVcFJKSVZJWkdkaFpDVnIzOEdHaGFJMFpYd0NrbGlnbENoWkVjdkp4aGRnWVdPakxFVXBtL0V5aUx6emUrbzhkVHpkTzNQbGpvVlR2N3JQYzgvNWQrNjU1NXhZckVoV29wNmJvZGE1KzZsOXdqV2NXcEYrV0licUNKSjloRlJjRHIzUUFJa0loS3VnejVQRGZrU2l4a3BoejVhaUFucWdFOHJnV1J4R29TT1B5Qmtzd1F1VXd5c2N3NEhybUZDWkw4S3QvSkFnN21FRlBFbW80RmRQd2swQlVjc2R6SWFwMFRROHFNQVB1SUNjRWpMbmQrVmpTamNmSk5nSWMvRGtaR1N5bVlHc25LOUVaTXJ4ZTRNRmFOR2laakMyZlQ1elEzcDdRREsxZFIyR1NsanppY2xBdlJVZThuSFlWQTRqanZDNDNOZkF1ay9zbUIyUU5xY3NXeEtjTGJBS1RGblMwaFdENm4yN0ZkNkZMcWlESTVpUW1ROWpwaVZUMHNOSjZhWWQ3ZEFFM1FIQmJpblNBWDVKV1dheHVMbzhGMzVqaC9iQks5WSsvci9DbDZwTGNubmE4TnZ1REdNbnNscGJaUnBYWllULzNyNEVHQUNaTDNaTDJhZk5GQUFBQUFCSlJVNUVya0pnZ2c9PSIsCiAgICAgICAgICAgICAgICBib3R0b206ICJkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJZQUFBQVdDQVlBQUFERXRHdzdBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQVhGSlJFRlVlTnJNMWM4ckJHRWN4L0ZkdENFa0xxWXRwZHdrS1NVSFVoeHdJVGRLK1ozeU0yY09MbkozOUNjNDRTZ0hTY21Kd2xGeHNJZGxDU2NPNi8ydDc2T25wNTJkWFR0Ym5ubzFNOCtQejg0K3p6TXprY2cvS0Ezb1JUek0wQTRjSTRWVGRJVVZQSU0zcFBHTzVhQUJKVGtHeDFCcWpZbUZGWnhXN25uQndYbVhvZ1dYNmJFR2MyakVJVTcra05XRFVTU3daeXFuZFN2SjNOMWcyQm0wb0x0QjJqK3c3clFQNE1wcVh6UlQwWVJhUFcvQnRoTWVkWUxzNjBIc29FMnZxOUJzUHdBSmE4WEZMVWEwZlVydlJPby9zYVQxUTlhZEdpbWRsdDh5ajZUVDZRNmQydmFpZGE5WVJidFA2RXFtQlpDNWZIQTZYK0FBejFid0VjNmNmazkrb2FaTTROb1pKTDcwK0oyaFRhWnROcGV0MDQxeks4eVAvTWdsK3JPRjFlbXIwVU0xeG5BZkVQeUlTZDBKbm82dnR4K1F1TTZQWjIybHBPN2RiRVYyU2l2NnJQZUlqTnMxSGRZQzdpeGZHK1lCcWRUVkRxUEl2NmlJV3ZPN2lYR1VGeEFxaTcyUHJhSjlJSDhFR0FDUWNZallSZDVHSHdBQUFBQkpSVTVFcmtKZ2dnPT0iLAogICAgICAgICAgICAgICAgcHJlOiAiZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCWUFBQUFXQ0FZQUFBREV0R3c3QUFBQUdYUkZXSFJUYjJaMGQyRnlaUUJCWkc5aVpTQkpiV0ZuWlZKbFlXUjVjY2xsUEFBQUFTbEpSRUZVZU5waVlCak9vQmlJcndKeEZSQXpVc3ZRVmlEK0NNVC9nZmdURVBkUnk5QlBVRU5oK0FzUTkxSmlhQXVTUzlIeFozSU5iOEhpMHYrVXVyd0Y2cUwvUk9CdlFOeERyS0Zma1RUK0ErSm5RUHdCS2ZKQS9MOUlhbjdpYzdrTUVIY0M4UTgwRjNVQWNSc1F2NGJ5MzBJTmFVSlQ5d2VhV2hTUURSVUI0dVZZdkxrWWlBV0FPQm9wdkVGQmxBckVQRUE4RzR1ZTlVQXNBVE00RVl1Q0pVZ0tNdEFNTG9TS0N3UHhYQ3g2YzFpZ0NsVFFnbVVaVlBOckhNRUd5M21nWUNrQ1lpWWdUa0NTVjRVWnZBMklqWUJZRElndlFiUHZPeUpURUNpZDV3SHhieUEyQnVMM1FMd1JXWUVzRUp2ZzBJd2VGRVU0MUlFTWxnY3hXSkFFSDBNeEplQXNqTUZFcTZKdytCcjhCaW1WZk1DVERFa0c3RUJjQThUM29XVUp4NERWWXdBQkJnQ2Fubm5TemJnd0lRQUFBQUJKUlU1RXJrSmdnZz09IiwKICAgICAgICAgICAgICAgIG5leHQ6ICJkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJZQUFBQVdDQVlBQUFERXRHdzdBQUFBR1hSRldIUlRiMlowZDJGeVpRQkJaRzlpWlNCSmJXRm5aVkpsWVdSNWNjbGxQQUFBQVQxSlJFRlVlTnJjMWIxS0EwRVloZUVsL2lBUkZGRWtLbDZEMFVLOENyRVZyQ3dFZXhGQ3RCSWxSV0lqc2ZFaUxMMEZLenM3UVVXeE0ycGlGTVVrdmhQT3dMQXMyVEd1Q243d2tObGw1akM3K3cwSmd2OWF2ZGpBT2JiUW4xVHdDdTdRd2hXVzR4YWtQSU9ITUt6eEdDYVNDbTZpb1hITFowSHFwejdLcndSUEl2dk52QmxNMnpZeU5ZOGNNamhESG85ZkNCekVybklxS05qZ1JTeHB2SUFCYk9MZXMyTUtXSGZ1WGRoWGNSMmF2S3JKNHpHaEk5Z0xoUWJxOVhhWmdHTzFrdXRJT3pJSHBLcDdOYXdoallPSU5TZVk2bEZ3SGFjdzE3UDZOVFdIZDR4cW5OYmNTODNMT2J0c2FDUGJFVytnWFVXOE9Ec3dDMjd4b09zbjNPRERtZk9Hc3M5WEx1RTU0akdqdlBxR3V1RzFtRkR6WklmZE5IeW5uZGU3RGJXMXI1RHdUc3RKSFAyaUU1NVlxRDM2ZWJYWkR2cis3TC9zVTRBQkFJcFZaV25vQTVHa0FBQUFBRWxGVGtTdVFtQ0MiLAogICAgICAgICAgICAgICAgbmV4dF9ncmF5OiAiZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCWUFBQUFXQ0FZQUFBREV0R3c3QUFBQUdYUkZXSFJUYjJaMGQyRnlaUUJCWkc5aVpTQkpiV0ZuWlZKbFlXUjVjY2xsUEFBQUF0eEpSRUZVZU5yY2xjOUwybUVjeDcvNk5iVlpxUlZqN3BJT2xJVXVaMUhNZ3YwQkRjcVQ3SnJza0gxM0VMUEJGN2VUdnoxMEh6bldRQmxCUklmQlhJZkJMbXFYc2N2WVpXUEtyTU5JVTlBcG1ycjM0L3c2aTBvdk1aancrSDArei9OOFh0K1BuL2ZuODBoUi8rV0hZUmhCSXBGd1JLUFJ6L0Y0L0tuRDRSQjI4eEgwQWg0Y0hIeW9VQ2pzSXBGSUlaUEpIa21sMG05WWZuMlpENzhYY0wxZUg2clZhbElNQ21NVXRxS2JENy9IYk5ReGFxMTVveGNIL2xYcGNtWGd0bmgydS8ybVhDNi9EcUUrc1N4TGxVcWxuaUUwVFZQQllKQXFGb3Q2K0dWOVB0K1BKdGhtczgwc0xTMnhFb25raGxncy9qZ3dNT0JjWFYzTjVmUDVybENjcDliWDF5V0xpNHVlY3JrOFU2bFVzaERZM3dSYkxKWUZHS1pzTmtzcTRONzgvTHdZOWhPbjA1azVPanFpK1B6VEdlUHhlRndaVWw2dmQ4aGtNdmtQRGc2c1pKMk01ZVhscjF3cVV1MmtBNUpPcHkySUFPK29POWZXMW41bU1wazJuRGptY2prS05VMjVYQzY1Mld4MnBWSXA2NW1YSjJueWpVUHBxYWtwTlp4dUE4WTVUODdPenNvYmpjWUhwVktwR2hzYmUxQ3RWa1hZcXhRS2hUZHF0ZnFMMVdyMUpwUEp4eHlVNUxxL3Z6OGFDb1g4VFREYXRZaUZoRjZ2eHg1dEFKd204T1BqNDhtNXVibUtTcVVhQVd3U2E5ZVF3NkpHby9sdU5Cb05oNGVIYkFlMEpoQUlOc0xoOExOQUlKQ2l1ZGh4QitRaDJsdWRUaWZEQVFMdkkzQUljaCtSa2w4akpscmhDYk9xZ2ZvTG1EZXBPRi9CZkdOcmEyc0ZGWkZ0dnFnek1iRllqQWl5cDlWcWg0VkM0Y1RKeVltUTkwZXBJUUp0SFJPMWJBNWFSaEF2ZG5aMkdJL0g4N2NFejVZUGdlT1MyUnNmSHg5Qjd1K2dPaTY4eVFBdFlYOXpkM2VYZ1pDbmEvczhCeTV5cEdVVXpoT0lTSGdPOUJmV1h3RzZjaFo2SWJpVmM2THduc0ZnR0lWQWVwTHpqazRyWVcxemUzdWJjYnZkNTNmalpWMkZhcUdRNjNmVDA5UERNTzlpOUJFb29uMEo5Um0vMzM5eG0zZHIyZjM5ZlZMWDd3RnZvTVZ2b1lXZlJ5SVJGbmREL1ovOG5mMFdZQUE4RUMxWi9aTm00Z0FBQUFCSlJVNUVya0pnZ2c9PSIsCiAgICAgICAgICAgICAgICBwcmVfZ3JheTogImRhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQllBQUFBV0NBWUFBQURFdEd3N0FBQUFHWFJGV0hSVGIyWjBkMkZ5WlFCQlpHOWlaU0JKYldGblpWSmxZV1I1Y2NsbFBBQUFBc2xKUkVGVWVOcmNsVHRNV21FVXh6L3V2VHpsSVVocE5NUjBhR05qck5IU21IVHFSSnlhZHVqUURiU0dSd0pVYVlDbURpenFVRXc2T0RWTkdnYnBZQ2ZTcEZJTkNRekZSOW95TVhSc1hGQ3NBWGtJS05ML1I3Z0dXeE9zU2RQRWs1emMzTytlODd2bis1OXp2MHZJcGJTSmlRbXl1Ym41TEJLSnBOYlgxMSs0WEM1QnV4eTJYWUROWmlNT2gyT1c0emlQVENiVGk4WGlrZUhoNFNzU2llUVRYbkl4c04xdUoxYXJkVllnRURnUER3K1Y5WHFkMUdvMU1jdXlnN0F1dVZ5K3NyYTI5bmRnVkVuR3g4ZG5oRUtoczFxdEtnRS9lWFo4ZkN6QytxMysvbjZ0U3FWYVNTUVM1d003blU1aU1wbG1zRjFYcFZJNUJlWHQ2T2hJQkZrR0FlOVNLcFYvd05tektqV2J6UlQ2dEZ3dUs4NkNVcVBya0lWV1BqUXdNS0JXS0JTbjRPenYwTEd4c1JtUlNEU0ZTanVhMERvOFRSV0FTK0I1K0I2OGcvSWhpeENOdlFQTjFXanVpZVpzUy9mMWFOUTB3ekJ1YUNxbFVDUVJ0VnI5RXMxSzRrVkRXSk5oclFqQUlpcU1sa3FsZTgwNEZua2pCb09oRXp2NHZyR3hrVzJBTFJhTEZycStRb0FWMm5FOHRMZTNkekVZREU1dmIyOTM5dlgxUGNCa2lLVlNhUTFqRm9yRllxK05ScU11bTgzZWJzWXptSnE3c0d1NHhoa0t4c0RmQi9BeG5PODYwZXYxb2VYbFpVOGdFTWdtazBrRnFtdzhvOWRVS2lXZm41OHZoTVBoNTRoN1MrT3BRWE5TTEJZZmVqeWVSMXl6dzlkYlJvbjA5UFM4VzExZG5mTDVmSmw4UGsrMFdpM2hrNXZ5Q05CWTR2VjZmMEltOStqb0tKTk9wODE4bzhHNzBhaDRhV25wSXpTS1lDYS9kWGQzQitQeHVITnljakt6czdOekFtczErcUZReStWeWREUnowV2pVcGRQcDN0QjhURk0wRkFxRkd4WFB6YzE5cGxKck5KcXJhTW9YdDl0TnQzU3VjK1RnNElDZUpmbUZoUVZMb1ZBd29LRzdmci8vQjhjSEFMNkZ5OVpGRGluYUcvcjV3Nzd5YTh5L09oRXZLUmhqdEl1cDJZTVRlQmIzbVhZNTNIbkFtTmtQKy92N056SFRUd0FPNGY3OWYvdWQvUkpnQU9MY1JOWnFMb2pNQUFBQUFFbEZUa1N1UW1DQyIsCiAgICAgICAgICAgICAgfTsKICAgICAgICAgICAgICBBQ19hZGRTdHlsZSgiLnNwLXNlcGFyYXRvcntsaW5lLWhlaWdodDoxLjggIWltcG9ydGFudDtvcGFjaXR5OjEgIWltcG9ydGFudDtwb3NpdGlvbjpyZWxhdGl2ZSAhaW1wb3J0YW50O2Zsb2F0Om5vbmUgIWltcG9ydGFudDt0b3A6MCAhaW1wb3J0YW50O2xlZnQ6MCAhaW1wb3J0YW50O21pbi13aWR0aDozNjZweDt3aWR0aDphdXRvO3RleHQtYWxpZ246Y2VudGVyICFpbXBvcnRhbnQ7Zm9udC1zaXplOjE0cHggIWltcG9ydGFudDtkaXNwbGF5OmJsb2NrICFpbXBvcnRhbnQ7cGFkZGluZzozcHggMCAhaW1wb3J0YW50O21hcmdpbjo1cHggMTBweCA4cHg7Y2xlYXI6Ym90aCAhaW1wb3J0YW50O2JvcmRlci1zdHlsZTpzb2xpZCAhaW1wb3J0YW50O2JvcmRlci1jb2xvcjojY2NjY2NjICFpbXBvcnRhbnQ7Ym9yZGVyLXdpZHRoOjFweCAhaW1wb3J0YW50Oy1tb3otYm9yZGVyLXJhZGl1czozMHB4ICFpbXBvcnRhbnQ7Ym9yZGVyLXJhZGl1czozMHB4ICFpbXBvcnRhbnQ7YmFja2dyb3VuZC1jb2xvcjojZmZmZmZmICFpbXBvcnRhbnQ7fS5zcC1zZXBhcmF0b3I6aG92ZXJ7Ym94LXNoYWRvdzowIDAgMTFweCByZ2JhKDMzLDMzLDMzLDAuMik7fSNzcC1zZXBhcmF0b3ItaG92ZXJ7ZGlzcGxheTpub25lO30uc3Atc2VwYXJhdG9yOmhvdmVyICNzcC1zZXBhcmF0b3ItaG92ZXJ7ZGlzcGxheTpibG9jazt9LnNwLXNlcGFyYXRvciAuc3Atc29tZWluZm97cG9zaXRpb246YWJzb2x1dGUgIWltcG9ydGFudDtyaWdodDoxMHB4ICFpbXBvcnRhbnQ7Zm9udC1zaXplOjEycHggIWltcG9ydGFudDtmb250LXN0eWxlOml0YWxpYyAhaW1wb3J0YW50O2JhY2tncm91bmQ6bm9uZSAhaW1wb3J0YW50O30uc3Atc2VwYXJhdG9yIHNwYW57dmVydGljYWwtYWxpZ246IG1pZGRsZTtjdXJzb3I6IHBvaW50ZXI7cGFkZGluZzogMDttYXJnaW46IDAgNXB4O2Rpc3BsYXk6IGlubGluZS1ibG9jazsgd2lkdGg6MjJweDtoZWlnaHQ6MjJweDt9LnNwLXNlcGFyYXRvciBhe21hcmdpbjowIDIwcHggMCAtNnB4ICFpbXBvcnRhbnQ7ZGlzcGxheTppbmxpbmUgIWltcG9ydGFudDt0ZXh0LXNoYWRvdzojZmZmIDAgMXB4IDAgIWltcG9ydGFudDtiYWNrZ3JvdW5kOm5vbmUgIWltcG9ydGFudDtjb2xvcjojNTk1OTU5ICFpbXBvcnRhbnQ7fS5zcC1zZXBhcmF0b3IgaW5wdXR7cGFkZGluZzowICFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6MjNweCAhaW1wb3J0YW50O30uc3Atc2VwYXJhdG9yIC5zcC1tZC1zcGFue2ZvbnQtd2VpZ2h0OmJvbGQgIWltcG9ydGFudDttYXJnaW46MCAyMHB4ICFpbXBvcnRhbnQ7fSNzcC1zcC1tZC1udW1iZXJ7d2lkdGg6NmNoICFpbXBvcnRhbnQ7dmVydGljYWwtYWxpZ246bWlkZGxlICFpbXBvcnRhbnQ7ZGlzcGxheTppbmxpbmUtYmxvY2sgIWltcG9ydGFudDt0ZXh0LWFsaWduOmxlZnQgIWltcG9ydGFudDt9IiArCiAgICAgICAgICAgICAgICBgLmFjX3NwX3RvcHtiYWNrZ3JvdW5kLWltYWdlOnVybCgnJHtzZXBJbWdzLnRvcH0nKX1gICsKICAgICAgICAgICAgICAgIGAuYWNfc3BfcHJle2JhY2tncm91bmQtaW1hZ2U6dXJsKCcke3NlcEltZ3MucHJlfScpfWAgKwogICAgICAgICAgICAgICAgYC5hY19zcF9uZXh0e2JhY2tncm91bmQtaW1hZ2U6dXJsKCcke3NlcEltZ3MubmV4dH0nKX1gICsKICAgICAgICAgICAgICAgIGAuYWNfc3BfYm90dG9te2JhY2tncm91bmQtaW1hZ2U6dXJsKCcke3NlcEltZ3MuYm90dG9tfScpfWAgKwogICAgICAgICAgICAgICAgYC5hY19zcF9uZXh0X2dyYXl7YmFja2dyb3VuZC1pbWFnZTp1cmwoJyR7c2VwSW1ncy5uZXh0X2dyYXl9Jyl9YCArCiAgICAgICAgICAgICAgICBgLmFjX3NwX3ByZV9ncmF5e2JhY2tncm91bmQtaW1hZ2U6dXJsKCcke3NlcEltZ3MucHJlX2dyYXl9Jyl9YCwKICAgICAgICAgICAgICAgICJBQy1QcmVsb2FkIikKICAgICAgICAgICAgICBpZiAoY3VyU2l0ZS5wYWdlVXJsID09PSB1cmwpIHsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoIltBQy1TY3JpcHRdIiwgIue/u+mhteWIsOi+vuW6lemDqOS6hiAtIOaIluiAheW8guW4uCAtIOWHuueOsOW8guW4uOivt+ebtOaOpeWPjemmiOS9nOiAheS/ruaUuSIpOwogICAgICAgICAgICAgICAgcmV0dXJuOwogICAgICAgICAgICAgIH0vLyDkuI3kvJrph43lpI3liqDovb3nm7jlkIznmoTpobXpnaIKICAgICAgICAgICAgICBjb25zb2xlLmxvZygi5Yqg6L2957+76aG15Zyw5Z2A77yaIiArIHVybCkKICAgICAgICAgICAgICBjdXJTaXRlLnBhZ2VVcmwgPSB1cmw7CiAgICAgICAgICAgICAgLy8g5a+5dXJs55qE5pWw5o2u6L+b6KGM6K+75Y+WCiAgICAgICAgICAgICAgY3VyU2l0ZS5wYWdlci5zdGFydEZpbHRlciAmJiBjdXJTaXRlLnBhZ2VyLnN0YXJ0RmlsdGVyKCk7CiAgICAgICAgICAgICAgR01feG1saHR0cFJlcXVlc3QoewogICAgICAgICAgICAgICAgdXJsOiB1cmwsCiAgICAgICAgICAgICAgICBtZXRob2Q6ICJHRVQiLAogICAgICAgICAgICAgICAgdGltZW91dDogNTAwMCwKICAgICAgICAgICAgICAgIG9ubG9hZDogZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIG5ld0JvZHkgPSBTaG93UGFnZXIuY3JlYXRlRG9jdW1lbnRCeVN0cmluZyhyZXNwb25zZS5yZXNwb25zZVRleHQpOwogICAgICAgICAgICAgICAgICAgIC8vIHh4LmV2YWx1YXRlKHhwYXRoLCB4eCkKICAgICAgICAgICAgICAgICAgICBsZXQgcGFnZUVsZW1zID0gZ2V0QWxsRWxlbWVudHMoY3VyU2l0ZS5wYWdlci5wYWdlRWxlbWVudCwgbmV3Qm9keSwgbmV3Qm9keSk7CiAgICAgICAgICAgICAgICAgICAgY29uc3Qgc2NyaXB0RWxlbXMgPSBnZXRBbGxFbGVtZW50cygnLy9zY3JpcHQnLCBuZXdCb2R5LCBuZXdCb2R5KTsKCiAgICAgICAgICAgICAgICAgICAgbGV0IHRvRWxlbWVudCA9IGdldEFsbEVsZW1lbnRzKGN1clNpdGUucGFnZXIuSFRfaW5zZXJ0WzBdKVswXTsKICAgICAgICAgICAgICAgICAgICBpZiAocGFnZUVsZW1zLmxlbmd0aCA+PSAwKSB7CiAgICAgICAgICAgICAgICAgICAgICAvLyDlpITnkIbmnIDlkI7kuIDkuKrnv7vpobXmjInpkq4KICAgICAgICAgICAgICAgICAgICAgIGxldCBuZXh0RXMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIjc3Atc3AtZ29uZXh0Iik7CiAgICAgICAgICAgICAgICAgICAgICBpZiAobmV4dEVzLmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgICAgICAgbGV0IGxhc3RFID0gbmV4dEVzW25leHRFcy5sZW5ndGggLSAxXTsKICAgICAgICAgICAgICAgICAgICAgICAgbGFzdEUuY2xhc3NMaXN0LnJlcGxhY2UoImFjX3NwX25leHRfZ3JheSIsICJhY19zcF9uZXh0Iik7CiAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICAvLyDmj5LlhaXnv7vpobXmjInpkq7lhYPntKAKICAgICAgICAgICAgICAgICAgICAgIGN1clNpdGUucGFnZU51bSsrOwogICAgICAgICAgICAgICAgICAgICAgbGV0IGFkZFRvID0gImJlZm9yZWVuZCI7CiAgICAgICAgICAgICAgICAgICAgICBpZiAoY3VyU2l0ZS5wYWdlci5IVF9pbnNlcnRbMV0gPT09IDEpIGFkZFRvID0gImJlZm9yZWJlZ2luIjsKICAgICAgICAgICAgICAgICAgICAgIHRvRWxlbWVudC5pbnNlcnRBZGphY2VudEhUTUwoYWRkVG8sIGA8ZGl2IGNsYXNzPSdzcC1zZXBhcmF0b3IgQUMnIGlkPSdzcC1zZXBhcmF0b3ItQUNYJz4KICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0nc3Atc3AtbmV4dGxpbmsnIHRhcmdldD0nX2JsYW5rJz48Yj7nrKwgPHNwYW4gc3R5bGU9J2NvbG9yOiM1OTU5NTkhaW1wb3J0YW50Oyc+QUNYPC9zcGFuPiDpobU8L2I+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJzcC1zcC1nb3RvcCIgY2xhc3M9J2FjX3NwX3RvcCcgdGl0bGU9J+WOu+WIsOmhtumDqCc+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJzcC1zcC1nb3ByZSIgY2xhc3M9JyR7Y3VyU2l0ZS5wYWdlTnVtIDw9IDIgPyAiYWNfc3BfcHJlX2dyYXkiIDogImFjX3NwX3ByZSJ9JyB0aXRsZT0n5LiK5rua5LiA6aG1JyA+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJzcC1zcC1nb25leHQiIGNsYXNzPSdhY19zcF9uZXh0X2dyYXknIHRpdGxlPSfkuIvmu5rkuIDpobUnPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0ic3Atc3AtZ29ib3R0b20iIGNsYXNzPSdhY19zcF9ib3R0b20nIHRpdGxlPSfljrvliLDlupXpg6gnID48L3NwYW4+PC9kaXY+YAogICAgICAgICAgICAgICAgICAgICAgLnJlcGxhY2UoL0FDWC9nbSwgY3VyU2l0ZS5wYWdlTnVtKSk7CiAgICAgICAgICAgICAgICAgICAgICAvLyDmj5LlhaXmlrDpobXpnaLlhYPntKAKICAgICAgICAgICAgICAgICAgICAgIHBhZ2VFbGVtcy5mb3JFYWNoKGZ1bmN0aW9uIChvbmUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdG9FbGVtZW50Lmluc2VydEFkamFjZW50RWxlbWVudChhZGRUbywgb25lKTsKICAgICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiLnNwLXNlcGFyYXRvci5BQzpub3QoW2JpbmRdKSIpLmZvckVhY2goZnVuY3Rpb24gKHBlcikgewogICAgICAgICAgICAgICAgICAgICAgICBwZXIuc2V0QXR0cmlidXRlKCJiaW5kIiwgMSk7CiAgICAgICAgICAgICAgICAgICAgICAgIHBlci5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGFjX3NwZnVuYyk7CiAgICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgICAvLyDmj5LlhaVzY3JpcHRzICYgc3R5bGUgLSDkv53or4Fqc+WKoOi9vQogICAgICAgICAgICAgICAgICAgICAgaWYoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5HT09HTEUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHNjcmlwdFRleHQgPSAiIjsKICAgICAgICAgICAgICAgICAgICAgICAgc2NyaXB0RWxlbXMuZm9yRWFjaCgob25lKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgc2NyaXB0VGV4dCArPSBvbmUuaW5uZXJIVE1MOwogICAgICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnN0IHNjcmlwdE5vZGUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTsKICAgICAgICAgICAgICAgICAgICAgICAgc2NyaXB0Tm9kZS5pbm5lckhUTUwgPSBzY3JpcHRUZXh0OwogICAgICAgICAgICAgICAgICAgICAgICB0b0VsZW1lbnQuYXBwZW5kQ2hpbGQoc2NyaXB0Tm9kZSkKICAgICAgICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAgICAgICAvLyDmm7/mjaLlvoXmm7/mjaLlhYPntKAKICAgICAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBvcmlFID0gZ2V0QWxsRWxlbWVudHMoY3VyU2l0ZS5wYWdlci5yZXBsYWNlRSk7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCByZXBFID0gZ2V0QWxsRWxlbWVudHMoY3VyU2l0ZS5wYWdlci5yZXBsYWNlRSwgbmV3Qm9keSwgbmV3Qm9keSk7CiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvcmlFLmxlbmd0aCA9PT0gcmVwRS5sZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICBpZihvcmlFLmxlbmd0aCA9PT0gMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgICAgdGhyb3cgIue/u+mhtS3mm7/mjaLnv7vpobXlhYPntKAgJ3JlcGxhY2VFJyDlpLHmlYgiOwogICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IG9yaUUubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9yaUVbaV0ub3V0ZXJIVE1MID0gcmVwRVtpXS5vdXRlckhUTUw7CiAgICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIGN1clNpdGUucGFnZUxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICBvbmVycm9yOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIGN1clNpdGUucGFnZUxvYWRpbmcgPSBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICB9OwoKICAgICAgICBmdW5jdGlvbiBBZGRDdXN0b21TdHlsZSgpIHsKICAgICAgICAgIGlmIChBQ0NvbmZpZy5pc1VzZXJTdHlsZUVuYWJsZSkgewogICAgICAgICAgICBBQ19hZGRTdHlsZShBQ0NvbmZpZy5Vc2VyU3R5bGVUZXh0LCAiQUMtdXNlclN0eWxlIik7Ly8g55So5oi36Ieq5a6a5LmJ55qE5qC35byP6KGoCiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyDkuLrkuobmlrnkvr/osIPmlbTmoLflvI/lkozmn6XnnIvmlYjmnpzvvIzmmoLml7bkuI3np7vpmaQKICAgICAgICAgICAgLy8gc2FmZVJlbW92ZSgic3R5bGVbY2xhc3M9J0FDLXVzZXJTdHlsZSddIikKICAgICAgICAgIH0KICAgICAgICAgIEFDX2FkZFN0eWxlKAogICAgICAgICAgICAiLm9wci1yZWNvbW1lbmRzLW1lcmdlLWltZ3RleHR7ZGlzcGxheTpub25lIWltcG9ydGFudDt9IiArIC8vIOenu+mZpOeZvuW6pua1j+iniOWZqOaOqOW5vwogICAgICAgICAgICAiLnJlc190b3BfYmFubmVye2Rpc3BsYXk6bm9uZSFpbXBvcnRhbnQ7fSIgKyAvLyDnp7vpmaTlj6/og73nmoTnmb7luqZIVFRQU+WKq+aMgeaYvuekuumXrumimAogICAgICAgICAgICAiLmhlYWRCbG9jaywgYm9keT5kaXYucmVzdWx0LW9we2Rpc3BsYXk6bm9uZTt9IiAvLyDnp7vpmaTnmb7luqbnmoTmkJzntKLnu5Pmnpzpobbpg6jkuIDmnaHnmoTlu7rorq7mloflrZcgJiDnp7vpmaTlj6/og73lh7rnjrDnmoTnmb3lsY/njrDosaEKICAgICAgICAgICAgLCAiQUMtc3BlY2lhbC1CQUlEVSIKICAgICAgICAgICk7CiAgICAgICAgICAvKiLoh6rlrprkuYki5oyJ6ZKu5pWI5p6cKi8KICAgICAgICAgIEFDX2FkZFN0eWxlKCIuYWNoaWRle2Rpc3BsYXk6bm9uZTt9IC5uZXdGdW5jSGlnaExpZ2h0e2NvbG9yOnJlZDtmb250LXdlaWdodDogMTAwO2JhY2tncm91bmQtY29sb3I6IHllbGxvdztmb250LXdlaWdodDogNjAwO30jc3AtYWMtY29udGFpbmVyIGxhYmVse2Rpc3BsYXk6aW5saW5lO30jdXt3aWR0aDozMTlweH0jdSAjbXl1c2Vye2Rpc3BsYXk6aW5saW5lLWJsb2NrO21hcmdpbjogMTNweCAtMTBweCAwIDI0cHg7fS5zaXRlLXdyYXBwZXIgI215dXNlciwuc29nb3Utc2V0LWJveCAjbXl1c2VyLCNnYncgI215dXNlcnttYXJnaW4tcmlnaHQ6MTVweDt9ICNteXVzZXIsI215dXNlciAubXl1c2VyY29uZmlne3BhZGRpbmc6MDttYXJnaW46MH0jbXl1c2Vye2Rpc3BsYXk6aW5saW5lLWJsb2NrO30jbXl1c2VyIC5teXVzZXJjb25maWd7ZGlzcGxheTppbmxpbmUtYmxvY2s7bGluZS1oZWlnaHQ6MS41O2JhY2tncm91bmQ6IzRlNmVmMjtjb2xvcjojZmZmO2ZvbnQtd2VpZ2h0OjcwMDt0ZXh0LWFsaWduOmNlbnRlcjtwYWRkaW5nOjZweDtib3JkZXI6MnB4IHNvbGlkICNFNUU1RTU7fSNteXVzZXIgLm15dXNlcmNvbmZpZ3tib3gtc2hhZG93OjAgMCAxMHB4IDNweCByZ2JhKDAsMCwwLC4xKTtib3JkZXItcmFkaXVzOiA2cHh9I215dXNlciAubXl1c2VyY29uZmlnOmhvdmVye2JhY2tncm91bmQ6IzQ2NjJkOSAhaW1wb3J0YW50O2NvbG9yOiNmZmY7Y3Vyc29yOnBvaW50ZXI7Ym9yZGVyOjJweCBzb2xpZCAjNzNBNkY4O31ib2R5W2RvZ2VdICNoZWFkZXJ7bWF4LXdpZHRoOiB1bnNldDt9Ym9keVtkb2dlXSAjbXl1c2Vye3Bvc2l0aW9uOiBhYnNvbHV0ZTtyaWdodDogNDBweDt9IiwKICAgICAgICAgICAgIkFDLU1FTlVfQnRuIik7CiAgICAgICAgICAvKuiHquWumuS5iemhtemdouWGheWuueaViOaenCovCiAgICAgICAgICBBQ19hZGRTdHlsZSgnYm9keVtiYWlkdV0gI3NwLWFjLWNvbnRhaW5lciAuY29udGFpbmVyLWxhYmVsOm5vdChbY2xhc3MqPSJiYWlkdSJdKT5sYWJlbDpub3QoW2NsYXNzPSJsYWJlbF9oaWRlIl0pLFxuJyArCiAgICAgICAgICAgICcgIGJvZHlbZ29vZ2xlXSAjc3AtYWMtY29udGFpbmVyIC5jb250YWluZXItbGFiZWw6bm90KFtjbGFzcyo9Imdvb2dsZSJdKT5sYWJlbDpub3QoW2NsYXNzPSJsYWJlbF9oaWRlIl0pLFxuJyArCiAgICAgICAgICAgICcgIGJvZHlbYmluZ10gI3NwLWFjLWNvbnRhaW5lciAuY29udGFpbmVyLWxhYmVsOm5vdChbY2xhc3MqPSJiaW5nIl0pPmxhYmVsOm5vdChbY2xhc3M9ImxhYmVsX2hpZGUiXSksXG4nICsKICAgICAgICAgICAgJyAgYm9keVtzb2dvdV0gI3NwLWFjLWNvbnRhaW5lciAuY29udGFpbmVyLWxhYmVsOm5vdChbY2xhc3MqPSJzb2dvdSJdKT5sYWJlbDpub3QoW2NsYXNzPSJsYWJlbF9oaWRlIl0pLFxuJyArCiAgICAgICAgICAgICcgIGJvZHlbZHVja10gI3NwLWFjLWNvbnRhaW5lciAuY29udGFpbmVyLWxhYmVsOm5vdChbY2xhc3MqPSJkdWNrIl0pPmxhYmVsOm5vdChbY2xhc3M9ImxhYmVsX2hpZGUiXSksXG4nICsKICAgICAgICAgICAgJyAgYm9keVtkb2dlXSAjc3AtYWMtY29udGFpbmVyIC5jb250YWluZXItbGFiZWw6bm90KFtjbGFzcyo9ImRvZ2UiXSk+bGFiZWw6bm90KFtjbGFzcz0ibGFiZWxfaGlkZSJdKSxcbicgKwogICAgICAgICAgICAnICBib2R5W2JhaWR1XSAjc3AtYWMtY29udGFpbmVyIC5jb250YWluZXItbGFiZWw6bm90KFtjbGFzcyo9ImJhaWR1Il0pPmJyLFxuJyArCiAgICAgICAgICAgICcgIGJvZHlbZ29vZ2xlXSAjc3AtYWMtY29udGFpbmVyIC5jb250YWluZXItbGFiZWw6bm90KFtjbGFzcyo9Imdvb2dsZSJdKT5icixcbicgKwogICAgICAgICAgICAnICBib2R5W2JpbmddICNzcC1hYy1jb250YWluZXIgLmNvbnRhaW5lci1sYWJlbDpub3QoW2NsYXNzKj0iYmluZyJdKT5icixcbicgKwogICAgICAgICAgICAnICBib2R5W2R1Y2tdICNzcC1hYy1jb250YWluZXIgLmNvbnRhaW5lci1sYWJlbDpub3QoW2NsYXNzKj0iZHVjayJdKT5icixcbicgKwogICAgICAgICAgICAnICBib2R5W2RvZ2VdICNzcC1hYy1jb250YWluZXIgLmNvbnRhaW5lci1sYWJlbDpub3QoW2NsYXNzKj0iZG9nZSJdKT5icixcbicgKwogICAgICAgICAgICAnICBib2R5W3NvZ291XSAjc3AtYWMtY29udGFpbmVyIC5jb250YWluZXItbGFiZWw6bm90KFtjbGFzcyo9InNvZ291Il0pPmJyLFxuJyArCiAgICAgICAgICAgICcgIGJvZHlbYmFpZHVdICNzcC1hYy1jb250YWluZXIgLmNvbnRhaW5lci1sYWJlbFtjbGFzcyo9ImJhaWR1Il0+LmxhYmVsX2hpZGUsXG4nICsKICAgICAgICAgICAgJyAgYm9keVtnb29nbGVdICNzcC1hYy1jb250YWluZXIgLmNvbnRhaW5lci1sYWJlbFtjbGFzcyo9Imdvb2dsZSJdPi5sYWJlbF9oaWRlLFxuJyArCiAgICAgICAgICAgICcgIGJvZHlbYmluZ10gI3NwLWFjLWNvbnRhaW5lciAuY29udGFpbmVyLWxhYmVsW2NsYXNzKj0iYmluZyJdPi5sYWJlbF9oaWRlLFxuJyArCiAgICAgICAgICAgICcgIGJvZHlbc29nb3VdICNzcC1hYy1jb250YWluZXIgLmNvbnRhaW5lci1sYWJlbFtjbGFzcyo9InNvZ291Il0+LmxhYmVsX2hpZGUsXG4nICsKICAgICAgICAgICAgJyAgYm9keVtkdWNrXSAjc3AtYWMtY29udGFpbmVyIC5jb250YWluZXItbGFiZWxbY2xhc3MqPSJkdWNrIl0+LmxhYmVsX2hpZGUsXG4nICsKICAgICAgICAgICAgJyAgYm9keVtkb2dlXSAjc3AtYWMtY29udGFpbmVyIC5jb250YWluZXItbGFiZWxbY2xhc3MqPSJkb2dlIl0+LmxhYmVsX2hpZGVcbicgKyAvLyDms6jmhI/lsL7pg6jpgJflj7cKICAgICAgICAgICAgJ3snICsKICAgICAgICAgICAgJ2Rpc3BsYXk6bm9uZTtcbicgKwogICAgICAgICAgICAnfSNzcC1hYy1jb250YWluZXIgLmxhYmVsX2hpZGV7Y3Vyc29yOnBvaW50ZXI7bWFyZ2luLWxlZnQ6OCU7Y29sb3I6Ymx1ZX0jc3AtYWMtY29udGFpbmVyIC5saW5raHJlZiwjc3AtYWMtY29udGFpbmVyIC5sYWJlbF9oaWRlOmhvdmVye2NvbG9yOnJlZH0jc3AtYWMtY29udGFpbmVyIC5saW5raHJlZjpob3Zlcntmb250LXdlaWdodDpib2xkfSNzcC1hYy1jb250YWluZXIgbGFiZWwubWVudS1ib3gtc21hbGx7bWF4LXdpZHRoOjE2cHg7bWF4LWhlaWdodDoxNnB4O2N1cnNvcjpwb2ludGVyO2Rpc3BsYXk6aW5saW5lLWJsb2NrfS5BQy1Db3VudGVyVHtiYWNrZ3JvdW5kOiNGRDk5OTl9Ym9keSAgI3NwLWFjLWNvbnRhaW5lcntwb3NpdGlvbjpmaXhlZDt0b3A6My45dnc7cmlnaHQ6OC44dnd9I3NwLWFjLWNvbnRhaW5lcnt6LWluZGV4Ojk5OTk5OTt0ZXh0LWFsaWduOmxlZnQ7YmFja2dyb3VuZC1jb2xvcjp3aGl0ZX0jc3AtYWMtY29udGFpbmVyICp7Zm9udC1zaXplOjEzcHg7Y29sb3I6YmxhY2s7ZmxvYXQ6bm9uZX0jc3AtYWMtbWFpbi1oZWFke3Bvc2l0aW9uOnJlbGF0aXZlO3RvcDowO2xlZnQ6MH0jc3AtYWMtc3Bhbi1pbmZve3Bvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjFweDt0b3A6MDtmb250LXNpemU6MTBweDtsaW5lLWhlaWdodDoxMHB4O2JhY2tncm91bmQ6bm9uZTtmb250LXN0eWxlOml0YWxpYztjb2xvcjojNWE1YTVhO3RleHQtc2hhZG93OndoaXRlIDBweCAxcHggMXB4fSNzcC1hYy1jb250YWluZXIgaW5wdXR7dmVydGljYWwtYWxpZ246bWlkZGxlO2Rpc3BsYXk6aW5saW5lLWJsb2NrO291dGxpbmU6bm9uZTtoZWlnaHQ6YXV0bztwYWRkaW5nOjBweDttYXJnaW4tYm90dG9tOjBweDttYXJnaW4tdG9wOjBweH0jc3AtYWMtY29udGFpbmVyIGlucHV0W3R5cGU9Im51bWJlciJde3dpZHRoOjUwcHg7dGV4dC1hbGlnbjpsZWZ0fSNzcC1hYy1jb250YWluZXIgaW5wdXRbdHlwZT0iY2hlY2tib3giXXtib3JkZXI6MXB4IHNvbGlkICNCNEI0QjQ7cGFkZGluZzoxcHg7bWFyZ2luOjNweDt3aWR0aDoxM3B4O2hlaWdodDoxM3B4O2JhY2tncm91bmQ6bm9uZTtjdXJzb3I6cG9pbnRlcjt2aXNpYmlsaXR5OnZpc2libGU7cG9zaXRpb246c3RhdGljfSNzcC1hYy1jb250YWluZXIgaW5wdXRbdHlwZT0iYnV0dG9uIl17Ym9yZGVyOjFweCBzb2xpZCAjY2NjO2N1cnNvcjpwb2ludGVyO2JhY2tncm91bmQ6bm9uZTt3aWR0aDphdXRvO2hlaWdodDphdXRvfSNzcC1hYy1jb250YWluZXIgbGl7bGlzdC1zdHlsZTpub25lO21hcmdpbjozcHggMDtib3JkZXI6bm9uZTtmbG9hdDpub25lO2N1cnNvcjpkZWZhdWx0O30jc3AtYWMtY29udGFpbmVyIGZpZWxkc2V0e2JvcmRlcjoycHggZ3Jvb3ZlICNjY2M7LW1vei1ib3JkZXItcmFkaXVzOjNweDtib3JkZXItcmFkaXVzOjNweDtwYWRkaW5nOjRweCA5cHggNnB4IDlweDttYXJnaW46MnB4O2Rpc3BsYXk6YmxvY2s7d2lkdGg6YXV0bztoZWlnaHQ6YXV0b30jc3AtYWMtY29udGFpbmVyIGxlZ2VuZHtsaW5lLWhlaWdodDoyMHB4O21hcmdpbi1ib3R0b206MHB4fSNzcC1hYy1jb250YWluZXIgZmllbGRzZXQgPiB1bHtwYWRkaW5nOjA7bWFyZ2luOjB9I3NwLWFjLWNvbnRhaW5lciB1bCNzcC1hYy1hX3VzZWlmcmFtZS1leHRlbmR7cGFkZGluZy1sZWZ0OjQwcHh9I3NwLWFjLXJlY3R7cG9zaXRpb246cmVsYXRpdmU7dG9wOjA7bGVmdDowO2Zsb2F0OnJpZ2h0O2hlaWdodDoxMHB4O3dpZHRoOjEwcHg7cGFkZGluZzowO21hcmdpbjowOy1tb3otYm9yZGVyLXJhZGl1czozcHg7Ym9yZGVyLXJhZGl1czozcHg7Ym9yZGVyOjFweCBzb2xpZCB3aGl0ZTstd2Via2l0LWJveC1zaGFkb3c6aW5zZXQgMCA1cHggMCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksMCAwIDNweCByZ2JhKDAsMCwwLDAuOCk7LW1vei1ib3gtc2hhZG93Omluc2V0IDAgNXB4IDAgcmdiYSgyNTUsMjU1LDI1NSwwLjMpLDAgMCAzcHggcmdiYSgwLDAsMCwwLjgpO2JveC1zaGFkb3c6aW5zZXQgMCA1cHggMCByZ2JhKDI1NSwyNTUsMjU1LDAuMyksMCAwIDNweCByZ2JhKDAsMCwwLDAuOCk7b3BhY2l0eTowLjh9I3NwLWFjLWRvdCwjc3AtYWMtY3VyLW1vZGV7cG9zaXRpb246YWJzb2x1dGU7ei1pbmRleDo5OTk5O3dpZHRoOjVweDtoZWlnaHQ6NXB4O3BhZGRpbmc6MDstbW96LWJvcmRlci1yYWRpdXM6M3B4O2JvcmRlci1yYWRpdXM6M3B4O2JvcmRlcjoxcHggc29saWQgd2hpdGU7b3BhY2l0eToxOy13ZWJraXQtYm94LXNoYWRvdzppbnNldCAwIC0ycHggMXB4IHJnYmEoMCwwLDAsMC4zKSxpbnNldCAwIDJweCAxcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLDBweCAxcHggMnB4IHJnYmEoMCwwLDAsMC45KTstbW96LWJveC1zaGFkb3c6aW5zZXQgMCAtMnB4IDFweCByZ2JhKDAsMCwwLDAuMyksaW5zZXQgMCAycHggMXB4IHJnYmEoMjU1LDI1NSwyNTUsMC4zKSwwcHggMXB4IDJweCByZ2JhKDAsMCwwLDAuOSk7Ym94LXNoYWRvdzppbnNldCAwIC0ycHggMXB4IHJnYmEoMCwwLDAsMC4zKSxpbnNldCAwIDJweCAxcHggcmdiYSgyNTUsMjU1LDI1NSwwLjMpLDBweCAxcHggMnB4IHJnYmEoMCwwLDAsMC45KX0jc3AtYWMtZG90e3JpZ2h0Oi0zcHg7dG9wOi0zcHh9I3NwLWFjLWN1ci1tb2Rle2xlZnQ6LTNweDt0b3A6LTNweDt3aWR0aDo2cHg7aGVpZ2h0OjZweH0jc3AtYWMtY29udGVudHtwYWRkaW5nOjA7bWFyZ2luOjBweDstbW96LWJvcmRlci1yYWRpdXM6M3B4O2JvcmRlci1yYWRpdXM6M3B4O2JvcmRlcjoxcHggc29saWQgI0EwQTBBMDstd2Via2l0LWJveC1zaGFkb3c6LTJweCAycHggNXB4IHJnYmEoMCwwLDAsMC4zKTstbW96LWJveC1zaGFkb3c6LTJweCAycHggNXB4IHJnYmEoMCwwLDAsMC4zKTtib3gtc2hhZG93Oi0ycHggMnB4IDVweCByZ2JhKDAsMCwwLDAuMyl9I3NwLWFjLW1haW57cGFkZGluZzo1cHg7Ym9yZGVyOjFweCBzb2xpZCB3aGl0ZTstbW96LWJvcmRlci1yYWRpdXM6M3B4O2JvcmRlci1yYWRpdXM6M3B4O2JhY2tncm91bmQtY29sb3I6I0YyRjJGNztiYWNrZ3JvdW5kOi1tb3otbGluZWFyLWdyYWRpZW50KHRvcCwjRkNGQ0ZDLCNGMkYyRjcgMTAwJSk7YmFja2dyb3VuZDotd2Via2l0LWdyYWRpZW50KGxpbmVhciwwIDAsMCAxMDAlLGZyb20oI0ZDRkNGQyksdG8oI0YyRjJGNykpfSNzcC1hYy1mb290e3Bvc2l0aW9uOnJlbGF0aXZlO2xlZnQ6MDtyaWdodDowO21pbi1oZWlnaHQ6MjBweH0jc3AtYWMtc2F2ZWJ1dHRvbntwb3NpdGlvbjphYnNvbHV0ZTt0b3A6MDtyaWdodDoycHh9I3NwLWFjLWNvbnRhaW5lciAuZW5kYnV0dG9ue21hcmdpbi10b3A6OHB4fSNzcC1hYy1jb250YWluZXIgLnNwLWFjLXNwYW5idXR0b257Ym9yZGVyOjFweCBzb2xpZCAjY2NjOy1tb3otYm9yZGVyLXJhZGl1czozcHg7Ym9yZGVyLXJhZGl1czozcHg7cGFkZGluZzoycHggM3B4O2N1cnNvcjpwb2ludGVyO2JhY2tncm91bmQtY29sb3I6I0Y5RjlGOTstd2Via2l0LWJveC1zaGFkb3c6aW5zZXQgMCAxMHB4IDVweCB3aGl0ZTstbW96LWJveC1zaGFkb3c6aW5zZXQgMCAxMHB4IDVweCB3aGl0ZTtib3gtc2hhZG93Omluc2V0IDAgMTBweCA1cHggd2hpdGV9I3NwLWFjLWNvbnRhaW5lciAuc3AtYWMtc3BhbmJ1dHRvbjpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNERER9bGFiZWxbY2xhc3M9Im5ld0Z1bmMiXXtjb2xvcjpibHVlfScsCiAgICAgICAgICAgICJBQy1NRU5VX1BhZ2UiKTsKICAgICAgICB9CgogICAgICAgIEFkZEN1c3RvbVN0eWxlKCk7CiAgICAgICAgdHJ5IHsKICAgICAgICAgIEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQoJ0FDLemHjeWumuWQkeiEmuacrOiuvue9ricsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3NwLWFjLWNvbnRlbnQiKS5zdHlsZS5kaXNwbGF5ID0gJ2Jsb2NrJzsKICAgICAgICAgIH0pOwogICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICB9CgogICAgICAgIC8qKui/meS4nOilv+S7peWQjuS8mueUqOS4iioqLwogICAgICAgIGZ1bmN0aW9uIGdldFNlYXJjaFZhbHVlKCkgewogICAgICAgICAgbGV0IGt2bCA9IGxvY2F0aW9uLnNlYXJjaC5zdWJzdHIoMSkuc3BsaXQoIiYiKTsKICAgICAgICAgIGxldCBzZWFyY2hWID0gIiI7CiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGt2bC5sZW5ndGg7IGkrKykgewogICAgICAgICAgICBsZXQgdmFsdWUgPSBrdmxbaV0ucmVwbGFjZSgvXih3ZHxxdWVyeXxxKT0vLCAiIik7CiAgICAgICAgICAgIGlmICh2YWx1ZSAhPT0ga3ZsW2ldKSB7CiAgICAgICAgICAgICAgc2VhcmNoViA9IHZhbHVlOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICAvLyAgJysnIOeZvuW6puOAgeaQnOeLl+OAgeW/heW6lOOAgeiwt+atjOOAgeWlveaQnAogICAgICAgICAgc2VhcmNoViA9IHNlYXJjaFYucmVwbGFjZSgiKyIsICIgIik7CiAgICAgICAgICByZXR1cm4gc2VhcmNoVjsKICAgICAgICB9CgogICAgICAgIGZ1bmN0aW9uIHJhcGlkRGVhbCgpIHsKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIGlmIChpbnNlcnRMb2NrZWQgPT09IGZhbHNlICYmIGN1clNpdGUuU2l0ZVR5cGVJRCAhPT0gU2l0ZVR5cGUuT1RIRVJTKSB7CiAgICAgICAgICAgICAgaW5zZXJ0TG9ja2VkID0gdHJ1ZTsKICAgICAgICAgICAgICBBQ0hhbmRsZSgpOyAvLyDlpITnkIbkuLvph43lrprlkJEKICAgICAgICAgICAgICBpZiAoQUNDb25maWcuaXNGYXZpY29uRW5hYmxlICYmIHR5cGVvZihjdXJTaXRlLkZhdmljb25UeXBlKSAhPT0gJ3VuZGVmaW5lZCcpIHsgLy8g5pi+56S6ZmF2aWNvbuWbvuaghwogICAgICAgICAgICAgICAgQUNfYWRkU3R5bGUoImgzOjpiZWZvcmUsIGgyOjpiZWZvcmUge2NvbnRlbnQ6ICcgJztkaXNwbGF5OmlubGluZS1ibG9ja30iLCAiQUMtU3R5bGUtRmF2aWNvbiIsICJoZWFkIik7CiAgICAgICAgICAgICAgICBhZGRGYXZpY29uKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY3VyU2l0ZS5GYXZpY29uVHlwZSkpOyAvLyDmt7vliqBGYXZpY29u5pi+56S6CiAgICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICBzYWZlUmVtb3ZlKCJpbWcuQUMtZmF2aWNvblQiKTsKICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY3VyU2l0ZS5GYXZpY29uVHlwZSkuZm9yRWFjaCgob25lKSA9PiB7CiAgICAgICAgICAgICAgICAgIG9uZS5yZW1vdmVBdHRyaWJ1dGUoImFjX2Zhdmljb25zdGF0dXMiKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIC8vIOWKqOaAgeS4i+WIkue6vwogICAgICAgICAgICAgIGlmICghQUNDb25maWcuaXNBTGluZUVuYWJsZSkgewogICAgICAgICAgICAgICAgQUNfYWRkU3R5bGUoImEsYSBlbXt0ZXh0LWRlY29yYXRpb246bm9uZSAhaW1wb3J0YW50fSIsICJBQy1Ob0xpbmUiLCAiYm9keSIpOy8vIOenu+mZpOi/meS6m+S4quS4i+WIkue6vwogICAgICAgICAgICAgIH0gZWxzZXsKICAgICAgICAgICAgICAgIHNhZmVSZW1vdmUoInN0eWxlW2NsYXNzPSdBQy1Ob0xpbmUnXSIpCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGlmIChBQ0NvbmZpZy5pc0Fkc0VuYWJsZSkgeyAvLyDnp7vpmaTlpJrkvZnnmoTlub/lkYrlhoXlrrkKICAgICAgICAgICAgICAgIHJlbW92ZUFEX2JhaWR1X3NvZ291KCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGlmIChBQ0NvbmZpZy5pc0NvdW50ZXJFbmFibGUpIHsgLy8g5pi+56S66K6h5pWw5ZmoCiAgICAgICAgICAgICAgICBhZGRDb3VudGVyKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY3VyU2l0ZS5Db3VudGVyVHlwZSkpOwogICAgICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiLkFDLUNvdW50ZXJUIikuZm9yRWFjaChvbmUgPT4gewogICAgICAgICAgICAgICAgICBvbmUucGFyZW50RWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ1NvcnRJbmRleCcpOwogICAgICAgICAgICAgICAgICBvbmUucmVtb3ZlKCkKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIGlmIChBQ0NvbmZpZy5kb0Rpc2FibGVTdWcpIHsgLy8g5LiN5ZCv55So56e75Yqo6aKE5rWLW+m7mOiupF0KICAgICAgICAgICAgICAgIGFjU2V0Q29va2llKCJPUklHSU4iLCAyLCAid3d3LmJhaWR1LmNvbSIpOwogICAgICAgICAgICAgICAgYWNTZXRDb29raWUoIklTU1ciLCAxKTsKICAgICAgICAgICAgICAgIGFjU2V0Q29va2llKCJJU1NXIiwgMSwgInd3dy5iYWlkdS5jb20iKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgLy8gaWYoQ09OU1QudXNlSXRlbS5IdVlhbk1vZGUgPT09IGZhbHNlICYmIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoInN0eWxlW2NsYXNzKj0nZGFya3JlYWRlciddIikgIT0gbnVsbCkgewogICAgICAgICAgICAgIC8vICAgQ09OU1QudXNlSXRlbS5IdVlhbk1vZGUgPSB0cnVlOwogICAgICAgICAgICAgIC8vIH0KICAgICAgICAgICAgICBpZiAoQUNDb25maWcuaXNCbG9ja0VuYWJsZSAmJiBjdXJTaXRlLlNpdGVUeXBlSUQgIT09IFNpdGVUeXBlLlNPR09VKSB7IC8vIOWQr+eUqOWxj+iUveWKn+iDvS0g5a+55q+P5LiA5Liq5paw5aKe55qE5Zyw5Z2A6YO96KaB5aSE55CGCiAgICAgICAgICAgICAgICBTaXRlQmxvY2suaW5pdFN0eWxlKCk7CiAgICAgICAgICAgICAgICBTaXRlQmxvY2suaW5pdCgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgICBpZihkb2N1bWVudC5ib2R5KXsKICAgICAgICAgICAgICAgIGlmICghQUNDb25maWcuaXNSaWdodERpc3BsYXlFbmFibGUpIHsgLy8g5Y+z5L6n5qCP5pi+56S6CiAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LnJlbW92ZSgic2hvd1JpZ2h0IikKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NMaXN0LmFkZCgic2hvd1JpZ2h0IikKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgaWYgKGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuR09PR0xFKSB7CiAgICAgICAgICAgICAgICBsZXQgbm9kZUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIjcnNvIikKICAgICAgICAgICAgICAgIGNvbnN0IGlzU3BlY2lhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNyc28+LmciKSAhPT0gbnVsbCAvLyDlrZjlnKjkuIDkuKroioLngrnljbPkuLpzcGVjaWFsCiAgICAgICAgICAgICAgICBpZihpc1NwZWNpYWwgIT09IENPTlNULmlzR29vZ2xlU3BlY2lhbCAmJiBDT05TVC5pc0dvb2dsZVNwZWNpYWwgPT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgICAgICAgQ09OU1QuaXNHb29nbGVTcGVjaWFsID0gdHJ1ZQogICAgICAgICAgICAgICAgICAgIHNhZmVSZW1vdmUoInN0eWxlW2NsYXNzPSdBQy1Ud29QYWdlRXhTdHlsZSddLHN0eWxlW2NsYXNzPSdBQy1UaHJlZVBhZ2VFeFN0eWxlJ10sc3R5bGVbY2xhc3M9J0FDLUZvdXJQYWdlRXhTdHlsZSddIik7CiAgICAgICAgICAgICAgICAgICAgYWNDc3NMb2FkRmxhZyA9IGZhbHNlOwogICAgICAgICAgICAgICAgICAgIENPTlNULlN0eWxlTWFuZ2VyLmluaXQoKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmKG5vZGVMaXN0Lmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgbm9kZUxpc3QuZm9yRWFjaCgobm9kZSkgPT4gewogICAgICAgICAgICAgICAgICAgIGlmIChDT05TVC5pc0dvb2dsZVNwZWNpYWwpIHsKICAgICAgICAgICAgICAgICAgICAgIG5vZGUuc3R5bGUuZGlzcGxheSAhPT0gJ2dyaWQnID8gbm9kZS5zdHlsZS5kaXNwbGF5ID0gJ2dyaWQnOiAnJwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICBub2RlLnN0eWxlLmRpc3BsYXkgIT09ICd1bnNldCcgPyBub2RlLnN0eWxlLmRpc3BsYXkgPSAndW5zZXQnOiAnJwogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyDnibnmrorlhYPntKDkuIDooYzlpITnkIYKICAgICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIiNyc28+ZGl2Om5vdCguZyk+ZGl2W2pzbW9kZWxdIikuZm9yRWFjaChvbmUgPT4gewogICAgICAgICAgICAgICAgICBvbmUucGFyZW50Tm9kZS5zdHlsZS5kaXNwbGF5ID0gInVuc2V0IgogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBpbnNlcnRMb2NrZWQgPSBmYWxzZTsKICAgICAgICAgICAgICB9LCAyMDApOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gYWNTZXRDb29raWUoY25hbWUsIGN2YWx1ZSwgZG9tYWluLCBleGRheXMpIHsKICAgICAgICAgIHRyeXsKICAgICAgICAgICAgZXhkYXlzID0gZXhkYXlzIHx8IDMwOwogICAgICAgICAgICBsZXQgZCA9IG5ldyBEYXRlKCk7CiAgICAgICAgICAgIGRvbWFpbiA9IChkb21haW4gPyAiZG9tYWluPSIgKyBkb21haW4gOiAiIikgKyAiOyI7CiAgICAgICAgICAgIGQuc2V0VGltZShkLmdldFRpbWUoKSArIChleGRheXMgKiAyNCAqIDYwICogNjAgKiAxMDAwKSk7CiAgICAgICAgICAgIGxldCBleHBpcmVzID0gImV4cGlyZXM9IiArIGQudG9VVENTdHJpbmcoKTsKICAgICAgICAgICAgZG9jdW1lbnQuY29va2llID0gY25hbWUgKyAiPSIgKyBjdmFsdWUgKyAiOyAiICsgZG9tYWluICsgZXhwaXJlcyArICI7cGF0aD0vIjsKICAgICAgICAgIH1jYXRjaChlKXt9CiAgICAgICAgfQogICAgICAgIGZ1bmN0aW9uIGdldE5vZGVIb3N0KHNpdGV0cE5vZGUpIHsKICAgICAgICAgIGlmKHNpdGV0cE5vZGUgaW5zdGFuY2VvZiBIVE1MQW5jaG9yRWxlbWVudCl7CiAgICAgICAgICAgIHJldHVybiB7Y3VySG9zdDogc2l0ZXRwTm9kZS5ob3N0LCBjdXJVcmw6IHNpdGV0cE5vZGUuaHJlZn07CiAgICAgICAgICB9CiAgICAgICAgICBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5CQUlEVSkgewogICAgICAgICAgICB2YXIgaHJlZiA9IG51bGw7CiAgICAgICAgICAgIGlmIChzaXRldHBOb2RlIGluc3RhbmNlb2YgSFRNTEVsZW1lbnQpIHsKICAgICAgICAgICAgICBocmVmID0gc2l0ZXRwTm9kZS5nZXRBdHRyaWJ1dGUoImhyZWYiKQogICAgICAgICAgICB9CiAgICAgICAgICAgIGlmIChocmVmICE9IG51bGwgJiYgaHJlZi5pbmNsdWRlcygiYmFpZHUuY29tL2xpbmsiKSkgewogICAgICAgICAgICAgIC8vIOW3sue7j+ino+aekOWHuuadpeS6hgogICAgICAgICAgICAgIHJldHVybiAge2N1ckhvc3Q6IGdldFRleHRIb3N0KGhyZWYpLCBjdXJVcmw6IGhyZWZ9OwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICByZXR1cm4ge2N1ckhvc3Q6IGdldFRleHRIb3N0KHNpdGV0cE5vZGUuaW5uZXJUZXh0IHx8IHNpdGV0cE5vZGUudGV4dENvbnRlbnQpLCBjdXJVcmw6IG51bGx9OwogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gQUNIYW5kbGUoKSB7CiAgICAgICAgICAvLyDlpITnkIbkuLvph43lrprlkJEKICAgICAgICAgIGlmIChjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLk9USEVSUyB8fCBjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLlNPR09VKSByZXR1cm47CiAgICAgICAgICBpZiAoQUNDb25maWcuaXNSZWRpcmVjdEVuYWJsZSkgewogICAgICAgICAgICBpZiAoY3VyU2l0ZS5TdHlwZV9Ob3JtYWwgIT09IG51bGwgJiYgY3VyU2l0ZS5TdHlwZV9Ob3JtYWwgIT09ICIiKSB7CiAgICAgICAgICAgICAgLy8g55m+5bqm5pCc54uX5Y676YeN5a6a5ZCRLeaZrumAmuaooeW8j+OAkOazqOaEj+S4jeiDveS4umRvY3VtZW50LnF1ZXJ5Li7jgJEKICAgICAgICAgICAgICByZXNldFVSTE5vcm1hbChkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGN1clNpdGUuU3R5cGVfTm9ybWFsKSk7CiAgICAgICAgICAgICAgaWYgKGNoZWNrSVNCYWlkdU1haW4oKSkgewogICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiLnNfZm9ybSAuaW5kZXgtbG9nby1zcmNbc3JjKj0nZ2lmJ10sIC5zX2Zvcm0gLmluZGV4LWxvZ28tc3JjbmV3W3NyYyo9J2dpZiddIikuZm9yRWFjaChmdW5jdGlvbiAocGVyKSB7CiAgICAgICAgICAgICAgICAgIHBlci5zcmMgPSAiaHR0cHM6Ly9waWMucm1iLmJkc3RhdGljLmNvbS9jODYyNTVlODAyODY5NjEzOWQzZTNlNGJiNDRjMDQ3Yi5wbmciOwogICAgICAgICAgICAgICAgICAvLyDnpZ7lpYfnmoTnmb7luqbnmb7lrrblj7cKICAgICAgICAgICAgICAgICAgLy8gaHR0cHM6Ly9pbWdzYS5iYWlkdS5jb20vZmV4L3BpYy9pdGVtLzg3MTgzNjdhZGFiNDRhZWRjYzkxYWIyYmJlMWM4NzAxYTA4YmZiMjYuanBnCiAgICAgICAgICAgICAgICAgIC8vIGh0dHBzOi8vYmFpZHUubnRhb3cuY29tL25ld2Nzcy9iYWlkdS5wbmcKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5HT09HTEUpIHJlbW92ZU9uTW91c2VEb3duRnVuYygpOyAvLyDnp7vpmaRvbk1vdXNlRG93buS6i+S7tu+8jOiwt+atjOWOu+mHjeWumuWQkQogICAgICAgICAgICBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5NQkFJRFUpIHJlbW92ZU1vYmlsZUJhaWR1RGlyZWN0TGluaygpOyAvLyDlpITnkIbnmb7luqbmiYvmnLrniYjmnKznmoTph43lrprlkJHlnLDlnYAKICAgICAgICAgICAgcmVtb3ZlUmVkaXJlY3RMaW5rVGFyZ2V0KCk7IC8vIOWPquenu+mZpOefpeS5jueahOmHjeWumuWQkemXrumimCAmIOeZvuW6puWtpuacr+mHjeWumuWQkemXrumimAogICAgICAgICAgICBzYWZlUmVtb3ZlKCIucmVzX3RvcF9iYW5uZXIiKTsgLy8g56e76Zmk55m+5bqm5Y+v6IO95pi+56S655qE5Yqr5oyBCiAgICAgICAgICB9CgogICAgICAgICAgdHJ5IHsgLy8g5pS+5YWl5byC5bi45o2V6I6377yM6Ziy5q2i55Sx5LqOaHRtbOaPkuWFpei/h+aFouWvvOiHtOeahGpz57uI5q2iCiAgICAgICAgICAgIGlmICghZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3NwLWFjLXN0eWxlIikuY2hlY2tlZCkgewogICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoImlucHV0W25hbWUqPSdzcC1hYy1hX2ZvcmNlX3N0eWxlXyddIikuZm9yRWFjaChwZXIgPT4gewogICAgICAgICAgICAgICAgcGVyLnNldEF0dHJpYnV0ZSgiZGlzYWJsZWQiLCAiZGlzYWJsZWQiKTsKICAgICAgICAgICAgICAgIHBlci5wYXJlbnROb2RlLnNldEF0dHJpYnV0ZSgidGl0bGUiLCAi6K+35byA5ZCv6Ieq5a6a5LmJ5qC35byPIikKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCJpbnB1dFtuYW1lKj0nc3AtYWMtYV9mb3JjZV9zdHlsZV8nXSIpLmZvckVhY2gocGVyID0+IHsKICAgICAgICAgICAgICAgIHBlci5yZW1vdmVBdHRyaWJ1dGUoImRpc2FibGVkIik7CiAgICAgICAgICAgICAgICBwZXIucGFyZW50Tm9kZS5zZXRBdHRyaWJ1dGUoInRpdGxlIiwgIkFDLeiHquWumuS5ieagt+W8j+WGheWuuSIpCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgaWYgKCFkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjc3AtYWMtYmxvY2siKS5jaGVja2VkKSB7CiAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiI3NwLWFjLXJlbW92ZUJsb2NrLCAjc3AtYWMtYmxvY2tCdG5EaXNwbGF5IikuZm9yRWFjaChwZXIgPT4gewogICAgICAgICAgICAgICAgcGVyLnNldEF0dHJpYnV0ZSgiZGlzYWJsZWQiLCAiZGlzYWJsZWQiKTsKICAgICAgICAgICAgICAgIHBlci5wYXJlbnROb2RlLnNldEF0dHJpYnV0ZSgidGl0bGUiLCAi6K+35byA5ZCv6Ieq5a6a5LmJ5qC35byPIikKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCIjc3AtYWMtcmVtb3ZlQmxvY2ssICNzcC1hYy1ibG9ja0J0bkRpc3BsYXkiKS5mb3JFYWNoKHBlciA9PiB7CiAgICAgICAgICAgICAgICBwZXIucmVtb3ZlQXR0cmlidXRlKCJkaXNhYmxlZCIpOwogICAgICAgICAgICAgICAgcGVyLnBhcmVudE5vZGUuc2V0QXR0cmlidXRlKCJ0aXRsZSIsICJBQy3oh6rkuLvmi6bmiKrlip/og70iKQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICBmdW5jdGlvbiBBQ3RvZ2dsZVNldHRpbmdEaXNwbGF5KGUpIHsKICAgICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICAgICAgICAvLyDmmL7npLrvvJ/pmpDol4/orr7nva7nlYzpnaIKICAgICAgICAgIGlmIChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuaWZyYW1lLWZhdGhlciBpZnJhbWUiKSA9PT0gbnVsbCkgewogICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuaWZyYW1lLWZhdGhlciIpLmluc2VydEFkamFjZW50SFRNTCgiYmVmb3JlZW5kIiwgIjxpZnJhbWUgc3JjPSdodHRwczovL2doYnRucy5jb20vZ2l0aHViLWJ0bi5odG1sP3VzZXI9bGFuZ3JlbjEzNTMmcmVwbz1HTV9zY3JpcHQmdHlwZT1zdGFyJmNvdW50PXRydWUnIGZyYW1lYm9yZGVyPScwJyBzY3JvbGxpbmc9JzAnIHN0eWxlPSdoZWlnaHQ6IDIwcHg7bWF4LXdpZHRoOiAxMDhweDtwYWRkaW5nLWxlZnQ6NXB4O2JveC1zaXppbmc6IGJvcmRlci1ib3g7bWFyZ2luLWJvdHRvbTogLTVweDtkaXNwbGF5OnVuc2V0ICFpbXBvcnRhbnQ7Jz48L2lmcmFtZT4iKTsKICAgICAgICAgIH0KICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkgewogICAgICAgICAgICBpZiAoZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3NwLWFjLWNvbnRlbnQiKS5zdHlsZS5kaXNwbGF5ID09PSAnYmxvY2snKSB7CiAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3NwLWFjLWNvbnRlbnQiKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIERCQ29uZmlnLm9sZFZlcnNpb24gPSBBQ0NvbmZpZy5vbGRWZXJzaW9uID0gR01faW5mby5zY3JpcHQudmVyc2lvbjsgLy8g5Y+q6ZyA6KaB5YaZ5Ye65LiA6YOo5YiG55qE5YWz6ZSu5pWw5o2u5Y2z5Y+vCiAgICAgICAgICAgICAgQUNTZXRWYWx1ZSgiQ29uZmlnIiwgSlNPTi5zdHJpbmdpZnkoREJDb25maWcpKTsKICAgICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuYWMtbmV3dmVyc2lvbkRpc3BsYXkiKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNzcC1hYy1jb250ZW50Iikuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sIDEwMCk7CiAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQoKICAgICAgICBmdW5jdGlvbiBTaG93U2V0dGluZygpIHsKICAgICAgICAgIGlmIChjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLk9USEVSUykgcmV0dXJuOwogICAgICAgICAgLy8g5aaC5p6c5LiN5a2Y5Zyo55qE6K+d77yM6YKj5LmI6Ieq5bex5Yib5bu65LiA5LiqLWNvcHkgZnJvbSBzdXBlclByZWxvYWQKICAgICAgICAgIGlmIChkb2N1bWVudC5ib2R5ICE9PSBudWxsICYmIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNzcC1hYy1jb250YWluZXIiKSA9PT0gbnVsbCkgewogICAgICAgICAgICBsZXQgQ29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgICAgICAgIENvbnRhaW5lci5pZCA9ICJzcC1hYy1jb250YWluZXIiOwogICAgICAgICAgICBDb250YWluZXIuaW5uZXJIVE1MID0KICAgICAgICAgICAgICBgPGRpdiBpZD0ic3AtYWMtY29udGVudCIgc3R5bGU9ImRpc3BsYXk6IG5vbmU7IiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS9odG1sIj4KICAgICAgICAgICAgICAgIDxkaXYgaWQ9InNwLWFjLW1haW4iPgogICAgICAgICAgICAgICAgICA8ZmllbGRzZXQgaWQ9InNwLWFjLWF1dG9wYWdlci1maWVsZCIgc3R5bGU9ImRpc3BsYXk6YmxvY2s7Ij4KICAgICAgICAgICAgICAgICAgICA8bGVnZW5kIGNsYXNzPSJpZnJhbWUtZmF0aGVyIj4KICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0ibGlua2hyZWYiIGhyZWY9Imh0dHBzOi8vd3d3Lm50YW93LmNvbS9hYm91dHNjcmlwdC5odG1sIiB0YXJnZXQ9Il9ibGFuayIgdi10ZXh0PSJsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnBhbmVsX3RpdGxlIj48L2E+CiAgICAgICAgICAgICAgICAgICAgPC9sZWdlbmQ+CiAgICAgICAgICAgICAgICAgICAgPHVsIGNsYXNzPSJzZXR0aW5nLW1haW4iIHYtc2hvdz0ib3RoZXIuY3VyVGFiID09PSAxIj4KICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIDp0aXRsZT0ibGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnJlZGlyZWN0X3RpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9InNwLWFjLXJlZGlyZWN0IiBuYW1lPSJzcC1hYy1hX3NlcGFyYXRvciIgdHlwZT0iY2hlY2tib3giICB2LW1vZGVsPSJBQ0NvbmZpZy5pc1JlZGlyZWN0RW5hYmxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwucmVkaXJlY3RfdGV4dCB9fQogICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJzcC1hYy1pc0VuTGFuZyIgbmFtZT0ic3AtYWMtYV9mb3JjZSIgdHlwZT0iY2hlY2tib3giIHYtbW9kZWw9IkFDQ29uZmlnLmlzRW5MYW5nIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlRW5fdGV4dCB9fQogICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0ic3AtYWMtc2F2ZWJ1dHRvbiIgQGNsaWNrPSJzYXZlQ29uZmlnIiBjbGFzcz0ic3AtYWMtc3BhbmJ1dHRvbiBlbmRidXR0b24iIDp0aXRsZT0ibGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLm9rQnRuX3RleHQiIHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7ZmxvYXQ6IHJpZ2h0O21hcmdpbi10b3A6IC02cHg7IiB2LXRleHQ9Imxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC5va0J0bl90ZXh0Ij48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgOnRpdGxlPSJsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwuYWRzX3RpdGxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9InNwLWFjLWFkcyIgbmFtZT0ic3AtYWMtYV9mb3JjZSIgdHlwZT0iY2hlY2tib3giIHYtbW9kZWw9IkFDQ29uZmlnLmlzQWRzRW5hYmxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwuYWRzX3RleHQgfX0KICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIDp0aXRsZT0ibGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLmF1dG9wYWdlX3RpdGxlIiBjbGFzcz0iIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9InNwLWFjLWlzQXV0b3BhZ2UiIG5hbWU9InNwLWFjLWFfZm9yY2UiIHR5cGU9ImNoZWNrYm94IiB2LW1vZGVsPSJBQ0NvbmZpZy5pc0F1dG9wYWdlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwuYXV0b3BhZ2VfdGV4dCB9fQogICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHRpdGxlPSJsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwuYmxvY2tlbmFibGVfdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0ic3AtYWMtYmxvY2siIG5hbWU9InNwLWFjLWFfZm9yY2UiIHR5cGU9ImNoZWNrYm94IiB2LW1vZGVsPSJBQ0NvbmZpZy5pc0Jsb2NrRW5hYmxlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwuYmxvY2tlbmFibGVfdGV4dCB9fQogICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0ic3AtYWMtYmxvY2tkaXlidXR0b24iIGNsYXNzPSJzcC1hYy1zcGFuYnV0dG9uIiBAY2xpY2s9Im90aGVyLmN1clRhYiA9IDIiIDp0aXRsZT0ibGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLmJsb2NrRGl5QnRuX3RpdGxlIiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDVweDtjb2xvcjogIzg4ODg4ODsiIHYtdGV4dD0ibGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLmJsb2NrRGl5QnRuX3RleHQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIDp0aXRsZT0ibGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLmJsb2NrZW5hYmxlX3RleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCA6dGl0bGU9Imxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC5ibG9ja0F1dG9SZW1vdmVfdGl0bGUiIHYtbW9kZWw9IkFDQ29uZmlnLmlzQmxvY2tEaXNwbGF5IiBpZD0ic3AtYWMtcmVtb3ZlQmxvY2siIHR5cGU9ImNoZWNrYm94Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwuYmxvY2tBdXRvUmVtb3ZlX3RleHQgfX0KICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIDp0aXRsZT0ibGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLmJsb2NrQnRuU2hvd190aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IDp0aXRsZT0ibGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLmJsb2NrQnRuU2hvd190aXRsZSIgIHYtbW9kZWw9IkFDQ29uZmlnLmlzQmxvY2tCdG5Ob3REaXNwbGF5IiBpZD0ic3AtYWMtYmxvY2tCdG5EaXNwbGF5IiB0eXBlPSJjaGVja2JveCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLmJsb2NrQnRuU2hvd190ZXh0IH19CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgOnRpdGxlPSJsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX3RleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0ic3AtYWMtc3R5bGUiIG5hbWU9InNwLWFjLWFfZm9yY2UiIHR5cGU9ImNoZWNrYm94IiB2LW1vZGVsPSJBQ0NvbmZpZy5BZHNTdHlsZUVuYWJsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV90ZXh0IH19CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tLS0tLS0tLS0tLeeZvuW6puagt+W8jy0tLS0tLS0tLS0tLS0tPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImNvbnRhaW5lci1sYWJlbCBiYWlkdSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJsYWJlbF9oaWRlIiB2LXRleHQ9Imxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfYmFpZHVfbGFibGUiIEBjbGljaz0ibGFiZWxTaG93SGlkZUVudiI+PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9Im1hcmdpbi1sZWZ0OjIwcHgiPjxpbnB1dCBuYW1lPSJzcC1hYy1hX2ZvcmNlX3N0eWxlX2JhaWR1IiB2YWx1ZT0iMCIgdi1tb2RlbD0iQUNDb25maWcuYmFpZHUuQWRzU3R5bGVNb2RlIiB0eXBlPSJyYWRpbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9iYWlkdV9vcmlnaW4gfX0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgIG5hbWU9J3NwLWFjLWh1eWFuX3N0eWxlX2JhaWR1JyB0eXBlPSdjaGVja2JveCcgdi1tb2RlbD0iQUNDb25maWcuYmFpZHUuSHVZYW5Nb2RlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX2JhaWR1X2h1eWFuIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9IiI+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfYmFpZHVsaXRlIiB0eXBlPSJjaGVja2JveCIgdi1tb2RlbD0iQUNDb25maWcuU3R5bGVfQmFpZHVMaXRlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX2JhaWR1X2JhaWR1TGl0ZSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT0ibWFyZ2luLWxlZnQ6MjBweCI+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfYmFpZHUiIHZhbHVlPSIxIiB2LW1vZGVsPSJBQ0NvbmZpZy5iYWlkdS5BZHNTdHlsZU1vZGUiIHR5cGU9InJhZGlvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX2JhaWR1XzFsaW5lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfYmFpZHUiIHZhbHVlPSIyIiB0eXBlPSJyYWRpbyIgdi1tb2RlbD0iQUNDb25maWcuYmFpZHUuQWRzU3R5bGVNb2RlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX2JhaWR1XzFsaW5lX2VudGVyIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfYmFpZHUiIHZhbHVlPSIzIiB0eXBlPSJyYWRpbyIgdi1tb2RlbD0iQUNDb25maWcuYmFpZHUuQWRzU3R5bGVNb2RlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX2JhaWR1XzJsaW5lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfYmFpZHUiIHZhbHVlPSI0IiB0eXBlPSJyYWRpbyIgdi1tb2RlbD0iQUNDb25maWcuYmFpZHUuQWRzU3R5bGVNb2RlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX2JhaWR1XzNsaW5lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfYmFpZHUiIHZhbHVlPSI1IiB0eXBlPSJyYWRpbyIgdi1tb2RlbD0iQUNDb25maWcuYmFpZHUuQWRzU3R5bGVNb2RlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX2JhaWR1XzRsaW5lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8YnI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0tLS0tLS0tLS0t55m+5bqm5qC35byPLS0tLS0tLS0tLS0tLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImhlaWdodDogMXB4O3dpZHRoOjI2N3B4O21hcmdpbi1sZWZ0OjI1cHg7YmFja2dyb3VuZC1jb2xvcjojZDhkOGQ4O21hcmdpbi10b3A6MXB4OyI+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0tLS0tLS0tLS0t6LC35q2M5qC35byPLS0tLS0tLS0tLS0tLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iY29udGFpbmVyLWxhYmVsIGdvb2dsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJsYWJlbF9oaWRlIiB2LXRleHQ9Imxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfZ29vZ2xlX2xhYmxlIiBAY2xpY2s9ImxhYmVsU2hvd0hpZGVFbnYiPjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPSJtYXJnaW4tbGVmdDoyMHB4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgbmFtZT0ic3AtYWMtYV9mb3JjZV9zdHlsZV9nb29nbGUiIHZhbHVlPSIwIiB0eXBlPSJyYWRpbyIgdi1tb2RlbD0iQUNDb25maWcuZ29vZ2xlLkFkc1N0eWxlTW9kZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9nb29nbGVfb3JpZ2luIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgOnRpdGxlPSJsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX2dvb2dsZV9odXlhbiI+PGlucHV0IG5hbWU9InNwLWFjLWh1eWFuX3N0eWxlX2dvb2dsZSIgdi1tb2RlbD0iQUNDb25maWcuZ29vZ2xlLkh1WWFuTW9kZSIgdHlwZT0iY2hlY2tib3giPgogICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfZ29vZ2xlX2h1eWFuIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgOnRpdGxlPSJsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX2dvb2dsZV9nb29nbGVMaXRlIiBzdHlsZT0iIj48aW5wdXQgbmFtZT0ic3AtYWMtZ29vZ2xlX2luX2JhaWR1bW9kZSIgdi1tb2RlbD0iQUNDb25maWcuaXNHb29sZUluQmFpZHVNb2RlRW5hYmxlIiB0eXBlPSJjaGVja2JveCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9nb29nbGVfZ29vZ2xlTGl0ZSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGJyPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT0ibWFyZ2luLWxlZnQ6MjBweCI+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfZ29vZ2xlIiB2YWx1ZT0iMSIgdi1tb2RlbD0iQUNDb25maWcuZ29vZ2xlLkFkc1N0eWxlTW9kZSIgdHlwZT0icmFkaW8iPgogICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfZ29vZ2xlXzFsaW5lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfZ29vZ2xlIiB2YWx1ZT0iMiIgdi1tb2RlbD0iQUNDb25maWcuZ29vZ2xlLkFkc1N0eWxlTW9kZSIgdHlwZT0icmFkaW8iIGNoZWNrZWQ9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9nb29nbGVfMWxpbmVfZW50ZXIgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD48aW5wdXQgbmFtZT0ic3AtYWMtYV9mb3JjZV9zdHlsZV9nb29nbGUiIHZhbHVlPSIzIiB2LW1vZGVsPSJBQ0NvbmZpZy5nb29nbGUuQWRzU3R5bGVNb2RlIiB0eXBlPSJyYWRpbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9nb29nbGVfMmxpbmUgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD48aW5wdXQgbmFtZT0ic3AtYWMtYV9mb3JjZV9zdHlsZV9nb29nbGUiIHZhbHVlPSI0IiB2LW1vZGVsPSJBQ0NvbmZpZy5nb29nbGUuQWRzU3R5bGVNb2RlIiB0eXBlPSJyYWRpbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9nb29nbGVfM2xpbmUgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD48aW5wdXQgbmFtZT0ic3AtYWMtYV9mb3JjZV9zdHlsZV9nb29nbGUiIHZhbHVlPSI1IiB2LW1vZGVsPSJBQ0NvbmZpZy5nb29nbGUuQWRzU3R5bGVNb2RlIiB0eXBlPSJyYWRpbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9nb29nbGVfNGxpbmUgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLS0tLS0tLS0tLS3osLfmrYzmoLflvI8tLS0tLS0tLS0tLS0tLT4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iaGVpZ2h0OiAxcHg7d2lkdGg6MjY3cHg7bWFyZ2luLWxlZnQ6MjVweDtiYWNrZ3JvdW5kLWNvbG9yOiNkOGQ4ZDg7bWFyZ2luLXRvcDoxcHg7Ij48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLS0tLS0tLS0tLS3lv4XlupTmoLflvI8tLS0tLS0tLS0tLS0tLT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJjb250YWluZXItbGFiZWwgYmluZyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJsYWJlbF9oaWRlIiB2LXRleHQ9Imxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfYmluZ19sYWJsZSIgQGNsaWNrPSJsYWJlbFNob3dIaWRlRW52Ij48L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT0ibWFyZ2luLWxlZnQ6MjBweCI+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfYmluZyIgdi1tb2RlbD0iQUNDb25maWcuYmluZy5BZHNTdHlsZU1vZGUiIHZhbHVlPSIwIiB0eXBlPSJyYWRpbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9iaW5nX29yaWdpbiB9fQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIDp0aXRsZT0ibGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9iaW5nX2h1eWFuIj48aW5wdXQgbmFtZT0ic3AtYWMtaHV5YW5fc3R5bGVfYmluZyIgdi1tb2RlbD0iQUNDb25maWcuYmluZy5IdVlhbk1vZGUiIHR5cGU9ImNoZWNrYm94Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX2JpbmdfaHV5YW4gfX0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9Im1hcmdpbi1sZWZ0OjIwcHgiPjxpbnB1dCBuYW1lPSJzcC1hYy1hX2ZvcmNlX3N0eWxlX2JpbmciIHYtbW9kZWw9IkFDQ29uZmlnLmJpbmcuQWRzU3R5bGVNb2RlIiB2YWx1ZT0iMSIgdHlwZT0icmFkaW8iPgogICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfYmluZ18xbGluZSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPjxpbnB1dCBuYW1lPSJzcC1hYy1hX2ZvcmNlX3N0eWxlX2JpbmciIHZhbHVlPSIyIiB2LW1vZGVsPSJBQ0NvbmZpZy5iaW5nLkFkc1N0eWxlTW9kZSIgdHlwZT0icmFkaW8iPgogICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfYmluZ18xbGluZV9lbnRlciB9fQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPjxpbnB1dCBuYW1lPSJzcC1hYy1hX2ZvcmNlX3N0eWxlX2JpbmciIHZhbHVlPSIzIiB2LW1vZGVsPSJBQ0NvbmZpZy5iaW5nLkFkc1N0eWxlTW9kZSIgdHlwZT0icmFkaW8iIGNoZWNrZWQ9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9iaW5nXzJsaW5lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfYmluZyIgdmFsdWU9IjQiIHYtbW9kZWw9IkFDQ29uZmlnLmJpbmcuQWRzU3R5bGVNb2RlIiB0eXBlPSJyYWRpbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9iaW5nXzNsaW5lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfYmluZyIgdmFsdWU9IjUiIHYtbW9kZWw9IkFDQ29uZmlnLmJpbmcuQWRzU3R5bGVNb2RlIiB0eXBlPSJyYWRpbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9iaW5nXzRsaW5lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLS0tLS0tLS0tLS3lv4XlupTmoLflvI8tLS0tLS0tLS0tLS0tLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImhlaWdodDogMXB4O3dpZHRoOjI2N3B4O21hcmdpbi1sZWZ0OjI1cHg7YmFja2dyb3VuZC1jb2xvcjojZDhkOGQ4O21hcmdpbi10b3A6MXB4OyI+PC9kaXY+LS0+CjwhLS0gICAgICAgICAgICAgICAgICAgICAgICAmbHQ7ISZuZGFzaDsmIzQ1OyYjNDU7JiM0NTsmIzQ1OyYjNDU7JiM0NTsmIzQ1OyYjNDU7JiM0NTsmIzQ1O+aQnOeLl+agt+W8jyYjNDU7JiM0NTsmIzQ1OyYjNDU7JiM0NTsmIzQ1OyYjNDU7JiM0NTsmIzQ1OyYjNDU7JiM0NTsmIzQ1OyZuZGFzaDsmZ3Q7LS0+CjwhLS0gICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9ImNvbnRhaW5lci1sYWJlbCBzb2dvdSI+LS0+CjwhLS0gICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibGFiZWxfaGlkZSIgdi10ZXh0PSJsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX3NvZ291X2xhYmxlIiBAY2xpY2s9ImxhYmVsU2hvd0hpZGVFbnYiPjwvbGFiZWw+LS0+CjwhLS0gICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT0ibWFyZ2luLWxlZnQ6MjBweCI+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfc29nb3UiIHYtbW9kZWw9IkFDQ29uZmlnLnNvZ291LkFkc1N0eWxlTW9kZSIgdmFsdWU9IjAiIHR5cGU9InJhZGlvIj4tLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9zb2dvdV9vcmlnaW4gfX0tLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4tLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIDp0aXRsZT0ibGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9zb2dvdV9odXlhbiI+PGlucHV0IG5hbWU9InNwLWFjLWh1eWFuX3N0eWxlX3NvZ291IiB2LW1vZGVsPSJBQ0NvbmZpZy5zb2dvdS5IdVlhbk1vZGUiIHR5cGU9ImNoZWNrYm94Ij4tLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9zb2dvdV9odXlhbiB9fS0tPgo8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPi0tPgo8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICA8YnI+LS0+CjwhLS0gICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT0ibWFyZ2luLWxlZnQ6MjBweCI+LS0+CjwhLS0gICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBuYW1lPSJzcC1hYy1hX2ZvcmNlX3N0eWxlX3NvZ291IiB2YWx1ZT0iMSIgdi1tb2RlbD0iQUNDb25maWcuc29nb3UuQWRzU3R5bGVNb2RlIiB0eXBlPSJyYWRpbyI+LS0+CjwhLS0gICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfc29nb3VfMWxpbmUgfX0tLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4tLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPjxpbnB1dCBuYW1lPSJzcC1hYy1hX2ZvcmNlX3N0eWxlX3NvZ291IiB2YWx1ZT0iMiIgdi1tb2RlbD0iQUNDb25maWcuc29nb3UuQWRzU3R5bGVNb2RlIiB0eXBlPSJyYWRpbyI+LS0+CjwhLS0gICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfc29nb3VfMWxpbmVfZW50ZXIgfX0tLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4tLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPjxpbnB1dCBuYW1lPSJzcC1hYy1hX2ZvcmNlX3N0eWxlX3NvZ291IiB2YWx1ZT0iMyIgdi1tb2RlbD0iQUNDb25maWcuc29nb3UuQWRzU3R5bGVNb2RlIiB0eXBlPSJyYWRpbyIgY2hlY2tlZD0iIj4tLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9zb2dvdV8ybGluZSB9fS0tPgo8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPi0tPgo8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfc29nb3UiIHZhbHVlPSI0IiB2LW1vZGVsPSJBQ0NvbmZpZy5zb2dvdS5BZHNTdHlsZU1vZGUiIHR5cGU9InJhZGlvIj4tLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9zb2dvdV8zbGluZSB9fS0tPgo8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPi0tPgo8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfc29nb3UiIHZhbHVlPSI1IiB2LW1vZGVsPSJBQ0NvbmZpZy5zb2dvdS5BZHNTdHlsZU1vZGUiIHR5cGU9InJhZGlvIj4tLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9zb2dvdV80bGluZSB9fS0tPgo8IS0tICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPi0tPgo8IS0tICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4tLT4KPCEtLSAgICAgICAgICAgICAgICAgICAgICAgICZsdDshJm5kYXNoOyYjNDU7JiM0NTsmIzQ1OyYjNDU7JiM0NTsmIzQ1OyYjNDU7JiM0NTsmIzQ1OyYjNDU75pCc54uX5qC35byPJiM0NTsmIzQ1OyYjNDU7JiM0NTsmIzQ1OyYjNDU7JiM0NTsmIzQ1OyYjNDU7JiM0NTsmIzQ1OyYjNDU7Jm5kYXNoOyZndDstLT4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iaGVpZ2h0OiAxcHg7d2lkdGg6MjY3cHg7bWFyZ2luLWxlZnQ6MjVweDtiYWNrZ3JvdW5kLWNvbG9yOiNkOGQ4ZDg7bWFyZ2luLXRvcDoxcHg7Ij48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLS0tLS0tLS0tLS3puK3puK3mkJzmoLflvI8tLS0tLS0tLS0tLS0tLT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJjb250YWluZXItbGFiZWwgZHVjayI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJsYWJlbF9oaWRlIiB2LXRleHQ9Imxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfZHVja19sYWJsZSIgQGNsaWNrPSJsYWJlbFNob3dIaWRlRW52Ij48L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT0ibWFyZ2luLWxlZnQ6MjBweCI+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfZHVjayIgdi1tb2RlbD0iQUNDb25maWcuZHVjay5BZHNTdHlsZU1vZGUiIHZhbHVlPSIwIiB0eXBlPSJyYWRpbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9kdWNrX29yaWdpbiB9fQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIDp0aXRsZT0ibGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9kdWNrX2h1eWFuIj48aW5wdXQgbmFtZT0ic3AtYWMtaHV5YW5fc3R5bGVfZHVjayIgdi1tb2RlbD0iQUNDb25maWcuZHVjay5IdVlhbk1vZGUiIHR5cGU9ImNoZWNrYm94Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX2R1Y2tfaHV5YW4gfX0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgOnRpdGxlPSJsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX2R1Y2tfbm9ybWFsIiBzdHlsZT0iIj48aW5wdXQgdi1tb2RlbD0iQUNDb25maWcubm9ybWFsaXplRHVjayIgdHlwZT0iY2hlY2tib3giPgogICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfZHVja19ub3JtYWwgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9Im1hcmdpbi1sZWZ0OjIwcHgiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBuYW1lPSJzcC1hYy1hX2ZvcmNlX3N0eWxlX2R1Y2siIHZhbHVlPSIxIiB2LW1vZGVsPSJBQ0NvbmZpZy5kdWNrLkFkc1N0eWxlTW9kZSIgdHlwZT0icmFkaW8iPgogICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfZHVja18xbGluZSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPjxpbnB1dCBuYW1lPSJzcC1hYy1hX2ZvcmNlX3N0eWxlX2R1Y2siIHZhbHVlPSIyIiB2LW1vZGVsPSJBQ0NvbmZpZy5kdWNrLkFkc1N0eWxlTW9kZSIgdHlwZT0icmFkaW8iPgogICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfZHVja18xbGluZV9lbnRlciB9fQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPjxpbnB1dCBuYW1lPSJzcC1hYy1hX2ZvcmNlX3N0eWxlX2R1Y2siIHZhbHVlPSIzIiB2LW1vZGVsPSJBQ0NvbmZpZy5kdWNrLkFkc1N0eWxlTW9kZSIgdHlwZT0icmFkaW8iIGNoZWNrZWQ9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9kdWNrXzJsaW5lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfZHVjayIgdmFsdWU9IjQiIHYtbW9kZWw9IkFDQ29uZmlnLmR1Y2suQWRzU3R5bGVNb2RlIiB0eXBlPSJyYWRpbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9kdWNrXzNsaW5lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfZHVjayIgdmFsdWU9IjUiIHYtbW9kZWw9IkFDQ29uZmlnLmR1Y2suQWRzU3R5bGVNb2RlIiB0eXBlPSJyYWRpbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9kdWNrXzRsaW5lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLS0tLS0tLS0tLS3puK3puK3mkJzmoLflvI8tLS0tLS0tLS0tLS0tLT4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBzdHlsZT0iaGVpZ2h0OiAxcHg7d2lkdGg6MjY3cHg7bWFyZ2luLWxlZnQ6MjVweDtiYWNrZ3JvdW5kLWNvbG9yOiNkOGQ4ZDg7bWFyZ2luLXRvcDoxcHg7Ij48L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLS0tLS0tLS0tLS3lpJrlkInmoLflvI8tLS0tLS0tLS0tLS0tLT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJjb250YWluZXItbGFiZWwgZG9nZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJsYWJlbF9oaWRlIiB2LXRleHQ9Imxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfZG9nZV9sYWJsZSIgQGNsaWNrPSJsYWJlbFNob3dIaWRlRW52Ij48L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT0ibWFyZ2luLWxlZnQ6MjBweCI+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfZG9nZSIgdi1tb2RlbD0iQUNDb25maWcuZG9nZS5BZHNTdHlsZU1vZGUiIHZhbHVlPSIwIiB0eXBlPSJyYWRpbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9kb2dlX29yaWdpbiB9fQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIDp0aXRsZT0ibGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9kb2dlX2h1eWFuIj48aW5wdXQgbmFtZT0ic3AtYWMtaHV5YW5fc3R5bGVfZG9nZSIgdi1tb2RlbD0iQUNDb25maWcuZG9nZS5IdVlhbk1vZGUiIHR5cGU9ImNoZWNrYm94Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX2RvZ2VfaHV5YW4gfX0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgOnRpdGxlPSJsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwudXNlclN0eWxlX2RvZ2Vfbm9ybWFsIiBzdHlsZT0iIj48aW5wdXQgdi1tb2RlbD0iQUNDb25maWcubm9ybWFsaXplRG9nZSIgdHlwZT0iY2hlY2tib3giPgogICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfZG9nZV9ub3JtYWwgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9Im1hcmdpbi1sZWZ0OjIwcHgiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBuYW1lPSJzcC1hYy1hX2ZvcmNlX3N0eWxlX2RvZ2UiIHZhbHVlPSIxIiB2LW1vZGVsPSJBQ0NvbmZpZy5kb2dlLkFkc1N0eWxlTW9kZSIgdHlwZT0icmFkaW8iPgogICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfZG9nZV8xbGluZSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPjxpbnB1dCBuYW1lPSJzcC1hYy1hX2ZvcmNlX3N0eWxlX2RvZ2UiIHZhbHVlPSIyIiB2LW1vZGVsPSJBQ0NvbmZpZy5kb2dlLkFkc1N0eWxlTW9kZSIgdHlwZT0icmFkaW8iPgogICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC51c2VyU3R5bGVfZG9nZV8xbGluZV9lbnRlciB9fQogICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPjxpbnB1dCBuYW1lPSJzcC1hYy1hX2ZvcmNlX3N0eWxlX2RvZ2UiIHZhbHVlPSIzIiB2LW1vZGVsPSJBQ0NvbmZpZy5kb2dlLkFkc1N0eWxlTW9kZSIgdHlwZT0icmFkaW8iIGNoZWNrZWQ9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9kb2dlXzJsaW5lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfZG9nZSIgdmFsdWU9IjQiIHYtbW9kZWw9IkFDQ29uZmlnLmRvZ2UuQWRzU3R5bGVNb2RlIiB0eXBlPSJyYWRpbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9kb2dlXzNsaW5lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+PGlucHV0IG5hbWU9InNwLWFjLWFfZm9yY2Vfc3R5bGVfZG9nZSIgdmFsdWU9IjUiIHYtbW9kZWw9IkFDQ29uZmlnLmRvZ2UuQWRzU3R5bGVNb2RlIiB0eXBlPSJyYWRpbyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnVzZXJTdHlsZV9kb2dlXzRsaW5lIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgIDwhLS0tLS0tLS0tLS0t5aSa5ZCJ5qC35byPLS0tLS0tLS0tLS0tLS0+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPCEtLS0tLS0tLS0tLS3miqTnnLzmqKHlvI/orr7nva4tLS0tLS0tLS0tLS0tLT4KICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIDp0aXRsZT0ibGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLmh1eWFuTW9kZV90aXRsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJzcC1hYy11c2VyY29sb3IiIHYtbW9kZWw9IkFDQ29uZmlnLmlzVXNlckNvbG9yRW5hYmxlIiBuYW1lPSJzcC1hYy1hX2ZvcmNlIiB0eXBlPSJjaGVja2JveCIgY2hlY2tlZD0iIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwuaHV5YW5Nb2RlX3RleHQgfX0KICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibWVudS1ib3gtY29udGFpbmVyIiA6dGl0bGU9Imxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC5odXlhbk1vZGVfdGl0bGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBzdHlsZT0ibWFyZ2luLWxlZnQ6MjBweDsiIHYtdGV4dD0ibGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLmh1eWFuQ29sb3JfdGV4dCI+PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9InNwLWFjLW1lbnVodXlhbkNvbG9yIiBAaW5wdXQuc3RvcD0idXNlVGhpc0h1eWFuQ29sb3IiIHYtbW9kZWw9IkFDQ29uZmlnLmRlZmF1bHRIdVlhbkNvbG9yIiB0eXBlPSJjb2xvciIgOnRpdGxlPSJsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwuaHV5YW5Db2xvcl90aXRsZSIgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjttYXJnaW4tdG9wOi0wLjA1cmVtO2hlaWdodDoyM3B4OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJtZW51LWJveC1zbWFsbCIgZGF0YS12YWx1ZT0iI0RFRjFFRiIgQGNsaWNrLnN0b3A9InVzZVRoaXNIdXlhbkNvbG9yIiBzdHlsZT0iYmFja2dyb3VuZC1jb2xvcjojREVGMUVGOyI+Jm5ic3A7Jm5ic3A7Jm5ic3A7Jm5ic3A7PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9Im1lbnUtYm94LXNtYWxsIiBkYXRhLXZhbHVlPSIjRjNGMkVFIiBAY2xpY2suc3RvcD0idXNlVGhpc0h1eWFuQ29sb3IiIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOiNGM0YyRUU7Ij4mbmJzcDsmbmJzcDsmbmJzcDsmbmJzcDs8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibWVudS1ib3gtc21hbGwiIGRhdGEtdmFsdWU9IiNFNUU1RTUiIEBjbGljay5zdG9wPSJ1c2VUaGlzSHV5YW5Db2xvciIgc3R5bGU9ImJhY2tncm91bmQtY29sb3I6I0U1RTVFNTsiPiZuYnNwOyZuYnNwOyZuYnNwOyZuYnNwOzwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJsaW5raHJlZiIgZGF0YS1ocmVmPSJodHRwczovL3d3dy5udGFvdy5jb20vY29sb3JwaWNrZXIuaHRtbCIgc3R5bGU9ImN1cnNvcjpwb2ludGVyO21hcmdpbi1yaWdodDogMTBweDsiIG9uY2xpY2s9IndpbmRvdy5vcGVuKHRoaXMuZGF0YXNldC5ocmVmKSIgdi10ZXh0PSJsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwuaHV5YW5Db2xvck1vcmVfdGV4dCI+PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICA8IS0tLS0tLS0tLS0tLUZhdmljb27lm77moIforr7nva4tLS0tLS0tLS0tLS0tLT4KICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCA6dGl0bGU9Imxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC5mYXZpY29uX3RpdGxlIiB2LW1vZGVsPSJBQ0NvbmZpZy5pc0Zhdmljb25FbmFibGUiIGlkPSJzcC1hYy1mYXZpY29uIiBuYW1lPSJzcC1hYy1hX2ZvcmNlIiB0eXBlPSJjaGVja2JveCIgY2hlY2tlZD0iIj4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwuZmF2aWNvbl90ZXh0IH19CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPSJtYXJnaW4tbGVmdDoyMHB4OyIgdi10ZXh0PSJsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwuZmF2aWNvbl9kZWZhdWx0SWNvbl90ZXh0Ij48L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCBpZD0ic3AtYWMtZmF2aWNvblVybCIgbmFtZT0ic3AtYWMtYV9mb3JjZSIgdi1tb2RlbD0iQUNDb25maWcuZGVmYXVsdEZhdmljb25VcmwiIHZhbHVlPSJodHRwczovL2FlMDEuYWxpY2RuLmNvbS9rZi9IVEIxZFJZMFg4T0QzS1ZqU1pGRnE2QW45cFhheS5qcGciIHN0eWxlPSJ3aWR0aDo1NSU7bWFyZ2luLXRvcDotMC4zZW07IiB0eXBlPSJpbnB1dCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPCEtLS0tLS0tLS0tLS3np7vpmaTnmb7luqbmkJzntKLpooTmtYstLS0tLS0tLS0tLS0tLT4KICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dCA6dGl0bGU9Imxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC5zZWFyY2hPcmlnaW5fdGl0bGUiIHYtbW9kZWw9IkFDQ29uZmlnLmRvRGlzYWJsZVN1ZyIgaWQ9InNwLWFjLXN1Z19vcmlnaW4iIG5hbWU9InNwLWFjLWFfZm9yY2UiIHR5cGU9ImNoZWNrYm94IiBjaGVja2VkPSIiPgogICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC5zZWFyY2hPcmlnaW5fdGV4dCB9fQogICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgIDwhLS0tLS0tLS0tLS0t6ZmE5YqgN+OAgTjjgIE5LS0tLS0tLS0tLS0tLS0+CiAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9InNwLWFjLXJpZ2h0IiB2LW1vZGVsPSJBQ0NvbmZpZy5pc1JpZ2h0RGlzcGxheUVuYWJsZSIgdHlwZT0iY2hlY2tib3giPgogICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC5zaG93UmlnaHRfdGV4dCB9fQogICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJzcC1hYy1jb3VudGVyIiB2LW1vZGVsPSJBQ0NvbmZpZy5pc0NvdW50ZXJFbmFibGUiIG5hbWU9InNwLWFjLWFfZm9yY2UiIHR5cGU9ImNoZWNrYm94Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwuc2hvd0NvdW50ZXJfdGV4dCB9fQogICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGlkPSJzcC1hYy1hbGluZSIgdi1tb2RlbD0iQUNDb25maWcuaXNBTGluZUVuYWJsZSIgbmFtZT0ic3AtYWMtYV9mb3JjZSIgdHlwZT0iY2hlY2tib3giPgogICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC5zaG93QUxpbmVfdGV4dCB9fQogICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgIDwhLS0tLS0tLS0tLS0t6Ieq5a6a5LmJ5qC35byP5YaF5a65LS0tLS0tLS0tLS0tLS0+CiAgICAgICAgICAgICAgICAgICAgICA8bGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgaWQ9InNwLWFjLXVzZXJzdHlsZSIgdi1tb2RlbD0iQUNDb25maWcuaXNVc2VyU3R5bGVFbmFibGUiIG5hbWU9InNwLWFjLWFfZm9yY2UiIHR5cGU9ImNoZWNrYm94Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwuc2hvd1VzZXJTdHlsZV90ZXh0IH19CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgaWQ9InNwLWFjLXVzZXJzdHlsZVRFWFQiIHYtbW9kZWw9IkFDQ29uZmlnLlVzZXJTdHlsZVRleHQiIEBrZXl1cD0ibG9hZEN1c3RvbVN0eWxlIiBAY2hhbmdlPSJsb2FkQ3VzdG9tU3R5bGUiIEBwYXN0ZT0ibG9hZEN1c3RvbVN0eWxlIiBuYW1lPSJzcC1hYy1hX2ZvcmNlIiBzdHlsZT0id2lkdGg6ODUlO2hlaWdodDogNjZweDttYXJnaW4tbGVmdDozMHB4OyIgdHlwZT0iaW5wdXQiID48L3RleHRhcmVhPgogICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9ImxpbmtocmVmIiB0YXJnZXQ9Il9ibGFuayIgOmhyZWY9Imxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC5jb250YWN0TWVfdXJsIiB2LXRleHQ9Imxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC5jb250YWN0TWVfdGV4dCI+PC9hPgogICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICAgICAgICAgIDwhLS0tLS0tLS0tLS0t5oum5oiq5Z+f5ZCN6K6+572ucGFuZWwtLS0tLS0tLS0tLS0tLT4KICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3M9InNldHRpbmctc2Vjb25kIiB2LXNob3c9Im90aGVyLmN1clRhYiA9PT0gMiI+CiAgICAgICAgICAgICAgICAgICAgICA8bGkgc3R5bGU9J21hcmdpbi1ib3R0b206IDhweCAhaW1wb3J0YW50Oyc+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0nc3AtYWMtYmxvY2tkaXlidXR0b24tYmFjaycgQGNsaWNrPSJvdGhlci5jdXJUYWI9MSxvdGhlci5zaG93QmxvY2tMaXN0QXJlYSA9IGZhbHNlIiBjbGFzcz0nc3AtYWMtc3BhbmJ1dHRvbic+e3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnNldHRpbmdfcGFuZWxfc2Vjb25kLmJhY2tCdG5fdGV4dCB9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAge3sgbGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLnNldHRpbmdfcGFuZWxfc2Vjb25kLmJsb2NrTGFiZWxfdGV4dCB9fX0KICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICA8bGkgc3R5bGU9J21hcmdpbi1ib3R0b206IDhweCAhaW1wb3J0YW50Oyc+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSdzcC1hYy1ibG9ja2RpeWJ1dHRvbi1kaXlsaXN0JyBjbGFzcz0nc3AtYWMtc3BhbmJ1dHRvbicgQGNsaWNrPSJvdGhlci5zaG93QmxvY2tMaXN0QXJlYSA9ICFvdGhlci5zaG93QmxvY2tMaXN0QXJlYSIgdi10ZXh0PSJjYWxfZGl5QmxvY2tMaXN0QnRuIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSdhYy1ibG9ja0xpc3QnIEBjbGljaz0icmVtb3ZlQUJsb2NrTGlzdEl0ZW0iIHN0eWxlPSdtYXgtaGVpZ2h0OjYwdmg7b3ZlcmZsb3cteTogc2Nyb2xsOyc+CiAgICAgICAgICAgICAgICAgICAgICAgIDx1bCB2LXNob3c9IiFvdGhlci5zaG93QmxvY2tMaXN0QXJlYSIgdi1odG1sPSJnZXRCbG9ja0xpc3QiPjwvdWw+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSdhYy1ibG9ja0JveENvbicgc3R5bGU9J21heC1oZWlnaHQ6IDYwdmg7dGV4dC1hbGlnbjogY2VudGVyO21hcmdpbi1sZWZ0OiAyNnB4Oyc+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSB2LXNob3c9Im90aGVyLnNob3dCbG9ja0xpc3RBcmVhIiAgQGtleXVwPSJzeW5jVG9CbG9ja0xpc3QiIEBjaGFuZ2U9InN5bmNUb0Jsb2NrTGlzdCIgQHBhc3RlPSJzeW5jVG9CbG9ja0xpc3QiIHJvd3M9IjIwIiB2LXRleHQ9IkFDQ29uZmlnLlVzZXJCbG9ja0xpc3Quam9pbignXFxuJykiPjwvdGV4dGFyZWE+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgPGxpPgogICAgICAgICAgICAgICAgICAgICAgICB7eyBsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwuc2V0dGluZ19wYW5lbF9zZWNvbmQuYWRkQmxvY2tMYWJlbF90ZXh0IH19PGlucHV0IGNsYXNzPSJzcC1hYy1hZGRSdWxlT25lIiBAa2V5dXAuZW50ZXI9ImNrQWRkUnVsZSIgdi1tb2RlbD0ib3RoZXIuYWRkQmxvY2tJdGVtIiBzdHlsZT0nd2lkdGg6NTUlOyc+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSdzcC1hYy1hZGRSdWxlYnV0dG9uJyBjbGFzcz0nc3AtYWMtc3BhbmJ1dHRvbiBlbmRidXR0b24nIEBjbGljaz0iY2tBZGRSdWxlIiBzdHlsZT0ncG9zaXRpb246IHJlbGF0aXZlICFpbXBvcnRhbnQ7bGluZS1oZWlnaHQ6IDE3cHg7JyB2LXRleHQ9Imxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC5zZXR0aW5nX3BhbmVsX3NlY29uZC5hZGRCdG5MYWJlbF90ZXh0Ij7mlrDlop48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPHVsIHYtc2hvdz0ib3RoZXIuY3VyVGFiID09PSAzIiBzdHlsZT0id2lkdGg6IDMwMHB4Ij4KICAgICAgICAgICAgICAgICAgICAgIDxsaT4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGlhbG9nLWJvZHkiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSdzcC1hYy1ibG9ja2RpeWJ1dHRvbi1iYWNrJyBAY2xpY2s9Im90aGVyLmN1clRhYj0xIiBjbGFzcz0nc3AtYWMtc3BhbmJ1dHRvbic+6L+U5ZuePC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+5L2/55So6K+05piO77yaPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2Pi08L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPjEuIOacrOiEmuacrOS4jeWMheWQq+S7u+S9leW5v+WRiuWGheWuue+8jOS5n+aXoOaEj+S6juegtOWdj+e9keermeeOsOacieWKn+iDveeahOWujOaVtOaAp++8jOS7heW4jOacm+mAmui/h+S4gOS6m+aYvuekuuaViOaenOeahOWPmOabtOiDveabtOWlveeahOeVmeWtmOWvueW6lOe9keermeeOsOacieeahOeUqOaIt++8jOS4gOWumueoi+W6puS4iuabtOWlveWcsOS/neivgeS6huebruagh+e9keermeeahOaXpea0u+OAgjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAyLiDlkIzml7bmnKzohJrmnKzkuK3miYDmnInlip/og73lnYfkuLrlrabkuaDlkoznoJTnqbZ3ZWLliY3nq6/mioDmnK/nmoTlj5HlsZXogIzlvIDlj5HvvIzluIzmnJvkuLrlrabkuaDliY3nq6/mioDmnK/nmoTnoJTnqbbkurrlkZjmj5DkvpvkuIDkuKrmm7Tlpb3nmoTlj4LogIPku6PnoIHvvIzkv4Pov5t3ZWLliY3nq6/mioDmnK/nmoTlj5HlsZXvvIzkvr/kuo7mioDmnK/nmoTlrabkuaDlkozkuqTmtYHvvIzmnKzohJrmnKzkuI3mtonlj4rlr7nnvZHnq5nmupDnoIHnmoTosIPor5Xlkozkv67mlLnvvIzlm6Dkvb/nlKjmnKzohJrmnKzov5vooYzpnZ7ms5XnlKjpgJTkuI7mnKzohJrmnKzml6DlhbPjgIIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICAgICAgICAgICAgPCEtLS0tLS0tLS0tLS3kv53lrZjjgIHlj5bmtojmjInpkq4tLS0tLS0tLS0tLS0tLT4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBpZD0ic3AtYWMtY2FuY2VsYnV0dG9uIiBjbGFzcz0ic3AtYWMtc3BhbmJ1dHRvbiBlbmRidXR0b24iIEBjbGljaz0iY2xvc2VQYW5lbCIgOnRpdGxlPSJsYW4udXNlLmZpZWxkc2V0X3BhbmVsLnNldHRpbmdfcGFuZWwuY2FuY2VsQnRuX3RleHQiIHN0eWxlPSJwb3NpdGlvbjogcmVsYXRpdmU7ZmxvYXQ6IGxlZnQ7IiB2LXRleHQ9Imxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC5jYW5jZWxCdG5fdGV4dCI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDxzcGFuIGlkPSJzcC1hYy1zYXZlYnV0dG9uIiByZWY9ImJvdHRvbVNhdmVCdXR0b24iIEBjbGljaz0ic2F2ZUNvbmZpZyIgY2xhc3M9InNwLWFjLXNwYW5idXR0b24gZW5kYnV0dG9uIiA6dGl0bGU9Imxhbi51c2UuZmllbGRzZXRfcGFuZWwuc2V0dGluZ19wYW5lbC5va0J0bl90ZXh0IiBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlO2Zsb2F0OiByaWdodDsiIHYtdGV4dD0ibGFuLnVzZS5maWVsZHNldF9wYW5lbC5zZXR0aW5nX3BhbmVsLm9rQnRuX3RleHQiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9maWVsZHNldD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PmA7CiAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChDb250YWluZXIpOwogICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIGxldCBhbGxOb2RlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi5BQy1mYXZpY29uVCwgLkFDLUNvdW50ZXJUIik7CiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGFsbE5vZGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIGlmIChhbGxOb2Rlc1tpXS5nZXRBdHRyaWJ1dGUoJ2FjQ2xpY2snKSA9PT0gbnVsbCkgewogICAgICAgICAgICAgIGFsbE5vZGVzW2ldLnNldEF0dHJpYnV0ZSgnYWNDbGljaycsICcxJyk7CiAgICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICAgIGFsbE5vZGVzW2ldLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgICAgcmV0dXJuIEFDdG9nZ2xlU2V0dGluZ0Rpc3BsYXkoZSk7CiAgICAgICAgICAgICAgICB9LCB0cnVlKTsKICAgICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoImJvZHkgI3NwLWFjLWNvbnRhaW5lciIpLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpOyAvLyDpmLvmraLngrnlh7voh6rouqvnmoTml7blgJnlhbPpl60KICAgICAgICAgICAgfSwgZmFsc2UpOwogICAgICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCJib2R5IikuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkgewogICAgICAgICAgICAgIHNhZmVGdW5jdGlvbiggKCkgPT4gewogICAgICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3NwLWFjLWNvbnRlbnQiKS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnOwogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgIH0sIGZhbHNlKTsKICAgICAgICAgIH0gY2F0Y2ggKGUpIHsKICAgICAgICAgIH0KCiAgICAgICAgfQoKICAgICAgICBmdW5jdGlvbiBpc0VsZW1lbnRWaXNpYmxlKGRvbSkgewogICAgICAgICAgY29uc3Qgc2NyVG9wID0gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcCB8fCBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcDsKICAgICAgICAgIHJldHVybiAhKHNjclRvcCA+IChkb20ub2Zmc2V0VG9wICsgZG9tLm9mZnNldEhlaWdodCkgfHwgKHNjclRvcCArIHdpbmRvdy5pbm5lckhlaWdodCkgPCBkb20ub2Zmc2V0VG9wKTsKICAgICAgICB9CgogICAgICAgIGZ1bmN0aW9uIHJlbW92ZU1vYmlsZUJhaWR1RGlyZWN0TGluaygpIHsKICAgICAgICAgIGxldCBub2RlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIiNwYWdlICNwYWdlLWJkICNyZXN1bHRzIC5yZXN1bHQ6bm90KFthY19yZWRpcmVjdFN0YXR1c10pIik7CiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IG5vZGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIGxldCBjdXJOb2RlID0gbm9kZXNbaV07CiAgICAgICAgICAgIHNhZmVGdW5jdGlvbihmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgbGV0IGN1ckRhdGEgPSBKU09OLnBhcnNlKGN1ck5vZGUuZGF0YXNldC5sb2cucmVwbGFjZSgvJy9nbSwgIlwiIikpOwogICAgICAgICAgICAgIGxldCB0cnVlTGluayA9IGN1ckRhdGEubXU7CiAgICAgICAgICAgICAgY3VyTm9kZS5xdWVyeVNlbGVjdG9yKCJhcnRpY2xlIikuc2V0QXR0cmlidXRlKCJybC1saW5rLWhyZWYiLCB0cnVlTGluayk7CiAgICAgICAgICAgICAgY3VyTm9kZS5xdWVyeVNlbGVjdG9yQWxsKCJhIikuZm9yRWFjaChmdW5jdGlvbiAocGVyKSB7CiAgICAgICAgICAgICAgICBwZXIuc2V0QXR0cmlidXRlKCJocmVmIiwgdHJ1ZUxpbmspOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgY3VyTm9kZS5zZXRBdHRyaWJ1dGUoImFjX3JlZGlyZWN0U3RhdHVzIiwgIjEiKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIGZ1bmN0aW9uIHJlbW92ZU9uTW91c2VEb3duRnVuYygpIHsKICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgIGxldCByZXN1bHROb2RlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIi5nIC5yYyBhLCAjcnMsICNyc28gLmcgYSIpOwogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJlc3VsdE5vZGVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgICAgbGV0IG9uZSA9IHJlc3VsdE5vZGVzW2ldOwogICAgICAgICAgICAgIG9uZS5zZXRBdHRyaWJ1dGUoIm9ubW91c2Vkb3duIiwgIiIpOyAvLyDosLfmrYzljrvph43lrprlkJHlubLmibAKICAgICAgICAgICAgICBvbmUuc2V0QXR0cmlidXRlKCJ0YXJnZXQiLCAiX2JsYW5rIik7IC8vIOiwt+atjOmTvuaOpeaWsOagh+etvuaJk+W8gAogICAgICAgICAgICB9CiAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gcmVtb3ZlUmVkaXJlY3RMaW5rVGFyZ2V0KCkgewogICAgICAgICAgaWYgKGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuWkhJSFUpIHsKICAgICAgICAgICAgbGV0IG5vZGVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgiLlJpY2hUZXh0IGFbaHJlZio9Jy8vbGluay56aGlodS5jb20vP3RhcmdldCddIik7CiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgbm9kZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICBsZXQgdXJsID0gZGVjb2RlVVJJQ29tcG9uZW50KG5vZGVzW2ldLmhyZWYucmVwbGFjZSgvaHR0cHM/OlwvXC9saW5rXC56aGlodVwuY29tXC9cP3RhcmdldD0vLCAiIikpOwogICAgICAgICAgICAgIG5vZGVzW2ldLmhyZWYgPSB1cmw7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5CQUlEVV9YVUVTSFUpIHsKICAgICAgICAgICAgbGV0IHhub2RlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoImFbaHJlZio9J3NjX3Z1cmw9aHR0cCddIik7CiAgICAgICAgICAgIGZvciAobGV0IGogPSAwOyBpIDwgeG5vZGVzLmxlbmd0aDsgaisrKSB7CiAgICAgICAgICAgICAgbGV0IHh1cmwgPSBnZXRVcmxBdHRyaWJ1dGUoeG5vZGVzW2pdLmhyZWYsICJzY192dXJsIiwgdHJ1ZSk7CiAgICAgICAgICAgICAgeG5vZGVzW2pdLmhyZWYgPSB4dXJsOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICAvLyDmj5Dlj5Z1cmzlhYPntKDnmoTlj4LmlbDlgLwKICAgICAgICBmdW5jdGlvbiBnZXRVcmxBdHRyaWJ1dGUodXJsLCBhdHRyaWJ1dGUsIG5lZWREZWNvZGUpIHsKICAgICAgICAgIGxldCBzZWFyY2hWYWx1ZVMgPSAodXJsLnN1YnN0cigxKSArICIiKS5zcGxpdCgiJiIpOwogICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBzZWFyY2hWYWx1ZVMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgbGV0IGtleV92YWx1ZSA9IHNlYXJjaFZhbHVlU1tpXS5zcGxpdCgiPSIpOwogICAgICAgICAgICBsZXQgcmVnID0gbmV3IFJlZ0V4cCgiXiIgKyBhdHRyaWJ1dGUgKyAiJCIpOwogICAgICAgICAgICBpZiAocmVnLnRlc3Qoa2V5X3ZhbHVlWzBdKSkgewogICAgICAgICAgICAgIGxldCBzZWFyY2hXb3JkcyA9IGtleV92YWx1ZVsxXTsKICAgICAgICAgICAgICByZXR1cm4gbmVlZERlY29kZSA/IGRlY29kZVVSSUNvbXBvbmVudChzZWFyY2hXb3JkcykgOiBzZWFyY2hXb3JkczsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gcmVzZXRVUkxOb3JtYWwobGlzdCkgewogICAgICAgICAgLy8g5rOo5oSP5pyJ6YeN5aSN55qE5Zyw5Z2A77yM5bC96YeP5a+56YeN5aSN5Zyw5Z2A6L+b6KGM5Y676YeNCiAgICAgICAgICB2YXIgaGFzRGVhbEhyZWZTZXQgPSBuZXcgU2V0KCk7CiAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgLy8g5q2k5pa55rOV5piv5byC5q2l77yM5pWF5Zyo57uT5p2f55qE5pe25YCZ5L2/55SoaeS8muWHuumXrumimC3kuKXph40hCiAgICAgICAgICAgIC8vIOmHh+eUqOmXreWMheeahOaWueazleadpei/m+ihjOaVsOaNrueahOS8oOmAkgogICAgICAgICAgICBsZXQgY3VyTm9kZSA9IGxpc3RbaV07CiAgICAgICAgICAgIGxldCBjdXJocmVmID0gY3VyTm9kZS5ocmVmOwogICAgICAgICAgICBpZiAobGlzdFtpXSAhPT0gbnVsbCAmJiBsaXN0W2ldLmdldEF0dHJpYnV0ZSgiYWNfcmVkaXJlY3RTdGF0dXMiKSA9PT0gbnVsbCkgewogICAgICAgICAgICAgIGxpc3RbaV0uc2V0QXR0cmlidXRlKCJhY19yZWRpcmVjdFN0YXR1cyIsICIwIik7CiAgICAgICAgICAgICAgbGV0IGxlbjEgPSBoYXNEZWFsSHJlZlNldC5zaXplOwogICAgICAgICAgICAgIGhhc0RlYWxIcmVmU2V0LmFkZChjdXJocmVmKTsKICAgICAgICAgICAgICBsZXQgbGVuMiA9IGhhc0RlYWxIcmVmU2V0LnNpemU7CiAgICAgICAgICAgICAgaWYgKGxlbjEgPT09IGxlbjIpIGNvbnRpbnVlOyAvLyDor7TmmI7mlbDmja7lt7Lnu4/lpITnkIbov4fvvIzlrZjlnKjnm7jlkIznmoTorrDlvZUKICAgICAgICAgICAgICBpZiAoY3VyaHJlZi5pbmNsdWRlcygid3d3LmJhaWR1LmNvbS9saW5rIikgfHwKICAgICAgICAgICAgICAgIGN1cmhyZWYuaW5jbHVkZXMoIm0uYmFpZHUuY29tL2Zyb20iKSB8fAogICAgICAgICAgICAgICAgY3VyaHJlZi5pbmNsdWRlcygid3d3LnNvZ291LmNvbS9saW5rIikgfHwKICAgICAgICAgICAgICAgIGN1cmhyZWYuaW5jbHVkZXMoInNvLmNvbS9saW5rIikpIHsKICAgICAgICAgICAgICAgIChmdW5jdGlvbiAoY19jdXJub2RlLCBjX2N1cmhyZWYpIHsKICAgICAgICAgICAgICAgICAgbGV0IHVybCA9IGNfY3VyaHJlZi5yZXBsYWNlKC9eaHR0cDovLCAiaHR0cHM6Iik7CiAgICAgICAgICAgICAgICAgIGlmIChjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLkJBSURVICYmICF1cmwuaW5jbHVkZXMoImVxaWQiKSkgewogICAgICAgICAgICAgICAgICAgIC8vIOWmguaenOaYr+eZvuW6pu+8jOW5tuS4lOayoeacieW4puacieino+aekOWPguaVsO+8jOmCo+S5iOaJi+WKqOW4puS4igogICAgICAgICAgICAgICAgICAgIHVybCA9IHVybCArICImd2Q9JmVxaWQ9IjsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICBsZXQgZ21SZXF1ZXN0Tm9kZSA9IEdNX3htbGh0dHBSZXF1ZXN0KHsKICAgICAgICAgICAgICAgICAgICAvLyBmcm9tOiAiYWN4aHIiLAogICAgICAgICAgICAgICAgICAgIGV4dERhdGE6IGNfY3VyaHJlZiwgLy8g55So5LqO5omp5bGVCiAgICAgICAgICAgICAgICAgICAgdXJsOiB1cmwsCiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogeyJBY2NlcHQiOiAiKi8qIiwgIlJlZmVyZXIiOiBjX2N1cmhyZWYucmVwbGFjZSgvXmh0dHA6LywgImh0dHBzOiIpfSwKICAgICAgICAgICAgICAgICAgICBtZXRob2Q6ICJHRVQiLAogICAgICAgICAgICAgICAgICAgIHRpbWVvdXQ6IDgwMDAsCiAgICAgICAgICAgICAgICAgICAgb25yZWFkeXN0YXRlY2hhbmdlOiBmdW5jdGlvbiAocmVzcG9uc2UpIHsgLy8gTUFSSyDmnInml7blgJnov5nkuKrlh73mlbDmoLnmnKzkuI3ov5vmnaUgLSDosIPor5XnmoTpl67popggLSB0aW1lb3V0CiAgICAgICAgICAgICAgICAgICAgICBpZihyZXNwb25zZS5yZXNwb25zZVRleHQgfHwgcmVzcG9uc2UucmVzcG9uc2VIZWFkZXJzKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOeUseS6juaYr+eJueauiui/lOWbni3lubbkuJTlpb3mkJwt5pCc54uXLeeZvuW6pumDveaYr+i/meS4quagvOW8j++8jOaVheaPkOWHugogICAgICAgICAgICAgICAgICAgICAgICBEZWFsUmVkaXJlY3QoZ21SZXF1ZXN0Tm9kZSwgY19jdXJocmVmLCByZXNwb25zZS5yZXNwb25zZVRleHQsICJVUkw9JyhbXiddKyknIikKICAgICAgICAgICAgICAgICAgICAgICAgLy8g6L+Z5Liq5piv5Zyo5LiK6Z2i5peg5rOV5aSE55CG55qE5oOF5Ya15LiL77yM5aSH55So55qEIHRtLWZpbmFsdXJsZGhkZyAgdG0tZmluYWx1cmxtZmRoCgogICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UucmVzcG9uc2VIZWFkZXJzLmluY2x1ZGVzKCJ0bS1maW5hbHVybCIpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHJlbFVSTCA9IFJlZ19HZXQocmVzcG9uc2UucmVzcG9uc2VIZWFkZXJzLCAidG0tZmluYWx1cmxcXHcrOiAoW15cXHNdKykiKTsKICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVsVVJMID09PSBudWxsIHx8IHJlbFVSTCA9PT0gIiIgfHwgcmVsVVJMLmluY2x1ZGVzKCJ3d3cuYmFpZHUuY29tL3NlYXJjaC9lcnJvciIpKSByZXR1cm47CiAgICAgICAgICAgICAgICAgICAgICAgICAgRGVhbFJlZGlyZWN0KGdtUmVxdWVzdE5vZGUsIGNfY3VyaHJlZiwgcmVsVVJMKTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9KShjdXJOb2RlLCBjdXJocmVmKTsgLy/kvKDpgJLml6fnmoTnvZHlnYDov4fljrvvvIzor7vkvZxjX2N1cmhyZWYKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgLy8gY3VyTm9kZS5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW92ZXIiLCAoKT0+IHsKICAgICAgICAgICAgICAvLyAgIGNvbnN0IEFCS2V5ID0gUmVkaXJlY3RNYXAuZ2V0KGN1ck5vZGUuaHJlZik7IC8vIOWOn+WniyAtPiDkuYvlkI7nmoTpk77mjqUKICAgICAgICAgICAgICAvLyAgIGlmKEFCS2V5KSBjdXJOb2RlLmhyZWYgPSBBQktleTsKICAgICAgICAgICAgICAvLyB9KQogICAgICAgICAgICAgIC8vIGN1ck5vZGUuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdXQiLCAoKT0+IHsKICAgICAgICAgICAgICAvLyAgIGNvbnN0IEJBS2V5ID0gUmVkaXJlY3RNYXAuZ2V0KGN1ck5vZGUuaHJlZik7IC8vIOS5i+WQjueahOi/nuaOpSAtPiDljp/lp4sKICAgICAgICAgICAgICAvLyAgIGlmKEJBS2V5KSBjdXJOb2RlLmhyZWYgPSBCQUtleTsKICAgICAgICAgICAgICAvLyB9KQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgICBpZiAoaGFzRGVhbEhyZWZTZXQuc2l6ZSA+IDAgJiYgbGlzdC5sZW5ndGggLSBoYXNEZWFsSHJlZlNldC5zaXplID4gMCkgY29uc29sZS5sb2coIuS4ouW8g+aOiSIsIGxpc3QubGVuZ3RoIC0gaGFzRGVhbEhyZWZTZXQuc2l6ZSwgIuS4qumHjeWkjemTvuaOpSIpOwogICAgICAgIH0KCiAgICAgICAgdmFyIERlYWxSZWRpcmVjdCA9IGZ1bmN0aW9uIChyZXF1ZXN0LCBjdXJOb2RlSHJlZiwgcmVzcFRleHQsIFJlZ1RleHQpIHsKICAgICAgICAgIGlmIChyZXNwVGV4dCA9PT0gbnVsbCB8fCB0eXBlb2YgKHJlc3BUZXh0KSA9PT0gInVuZGVmaW5lZCIpIHJldHVybjsKICAgICAgICAgIGxldCByZXN1bHRSZXNwb25zZVVybCA9ICIiOwogICAgICAgICAgaWYgKFJlZ1RleHQgIT0gbnVsbCkgewogICAgICAgICAgICByZXN1bHRSZXNwb25zZVVybCA9IFJlZ19HZXQocmVzcFRleHQsIFJlZ1RleHQpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgcmVzdWx0UmVzcG9uc2VVcmwgPSByZXNwVGV4dDsKICAgICAgICAgIH0KICAgICAgICAgIGlmIChyZXN1bHRSZXNwb25zZVVybCAhPT0gbnVsbCAmJiByZXN1bHRSZXNwb25zZVVybCAhPT0gIiIgJiYgIXJlc3VsdFJlc3BvbnNlVXJsLmluY2x1ZGVzKCJ3d3cuYmFpZHUuY29tL2xpbmsiKSkgewogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgIGlmIChjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLlNPR09VKSBjdXJOb2RlSHJlZiA9IGN1ck5vZGVIcmVmLnJlcGxhY2UoL15odHRwczpcL1wvd3d3LnNvZ291LmNvbS8sICIiKTsKICAgICAgICAgICAgICBsZXQgaG9zdCA9IGdldFRleHRIb3N0KHJlc3VsdFJlc3BvbnNlVXJsKTsKICAgICAgICAgICAgICAvLyBSZWRpcmVjdE1hcC5zZXQoY3VyTm9kZUhyZWYsIHJlc3VsdFJlc3BvbnNlVXJsKTsgLy8g6L+b6KGM5LiA5Liq5pWw5o2u5YWz6IGUCiAgICAgICAgICAgICAgLy8gUmVkaXJlY3RNYXAuc2V0KHJlc3VsdFJlc3BvbnNlVXJsLCBjdXJOb2RlSHJlZik7IC8vIOi/m+ihjOS4gOS4quaVsOaNruWFs+iBlAogICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIipbaHJlZio9JyIgKyBjdXJOb2RlSHJlZiArICInXSIpLmZvckVhY2goIHBlciA9PiB7CiAgICAgICAgICAgICAgICBsZXQgY2hhbmdlTm9kZSA9IHBlcjsKCiAgICAgICAgICAgICAgICBjaGFuZ2VOb2RlLnNldEF0dHJpYnV0ZSgiYWNfcmVkaXJlY3RTdGF0dXMiLCAiMiIpOwogICAgICAgICAgICAgICAgY2hhbmdlTm9kZS5ocmVmID0gcmVzdWx0UmVzcG9uc2VVcmw7CiAgICAgICAgICAgICAgICAvLyBjaGFuZ2VOb2RlLnNldEF0dHJpYnV0ZSgiZGF0YS1vcmlocmVmIiwgY2hhbmdlTm9kZS5ocmVmKTsKICAgICAgICAgICAgICAgIGlmIChjaGFuZ2VOb2RlLmhhc0F0dHJpYnV0ZSgibWV0YSIpKSB7CiAgICAgICAgICAgICAgICAgIGNoYW5nZU5vZGUuc2V0QXR0cmlidXRlKCJtZXRhIiwgaG9zdCk7CiAgICAgICAgICAgICAgICAgIGNoYW5nZU5vZGUuZGF0YXNldC5ob3N0ID0gaG9zdDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmIChjaGFuZ2VOb2RlLnRleHQgJiYgY2hhbmdlTm9kZS50ZXh0Lmxlbmd0aCA8IDEwICYmICFjaGFuZ2VOb2RlLnRleHQuaW5jbHVkZXMoaG9zdCkKICAgICAgICAgICAgICAgICAgLy8g5LiN6IO95pivcmVkaXJlY3QgdXJsIOS4jeiDveaYr2gyXGgz5LiL55u05bGe6ZO+5o6lCiAgICAgICAgICAgICAgICAgICYmICFjaGFuZ2VOb2RlLnBhcmVudEVsZW1lbnQudGFnTmFtZS50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKCJoIikpIHsKICAgICAgICAgICAgICAgICAgY2hhbmdlTm9kZS5pbnNlcnRBZGphY2VudEhUTUwoImJlZm9yZUVuZCIsICImbmJzcDstJm5ic3A7IiArIGhvc3QpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pCgogICAgICAgICAgICAgIG90aGVyRGF0YS5vdGhlci5jdXJIb3N0cy5hY3B1c2goaG9zdCArICIjIyMiICsgcmVzdWx0UmVzcG9uc2VVcmwpOwogICAgICAgICAgICAgIHJlcXVlc3QuYWJvcnQoKTsKICAgICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfTsKCiAgICAgICAgZnVuY3Rpb24gcmVtb3ZlQURfYmFpZHVfc29nb3UoKSB7IC8vIOenu+mZpOe9keermeiHquacieW5v+WRigogICAgICAgICAgaWYgKGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuQkFJRFUpIHsKCiAgICAgICAgICAgIC8vIOenu+mZpHNoYWRvd0RPTeW5v+WRiu+8m+aQnOe0ouWFs+mUruWtl++8mua3mOWune+8m+eEtuWQjueCueWHu+aQnOe0ouahhu+8jOW5v+WRiuS8muWkmuasoemHjeeOsHNoYWRvd2RvbQogICAgICAgICAgICBzYWZlRnVuY3Rpb24oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICQoJy5jLWNvbnRhaW5lciA+Pj4gLmMtY29udGFpbmVyJykuaGFzKCcuZjEzPnNwYW46c3RhcnRzLXdpdGgoIuW5v+WRiiIpJykucmVtb3ZlKCk7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgLy8g56e76Zmk5Y+z5L6n5qCP5bm/5ZGKCiAgICAgICAgICAgIHNhZmVSZW1vdmVfeHBhdGgoImlkKCdjb250ZW50X3JpZ2h0JykvZGl2Wy4vL2Fbc3RhcnRzLXdpdGgodGV4dCgpLCAn5bm/5ZGKJyldXSIpOwogICAgICAgICAgICAvLyDnp7vpmaTmoIflh4blub/lkYoKICAgICAgICAgICAgc2FmZVJlbW92ZV94cGF0aCgiaWQoJ2NvbnRlbnRfbGVmdCcpL2RpdlsuLy9zcGFuW2NvbnRhaW5zKHRleHQoKSwgJ+W5v+WRiicpXV0iKTsKICAgICAgICAgICAgLy8g56e76Zmk5qCH5YeG5bm/5ZGKIC0g5pawCiAgICAgICAgICAgIHNhZmVSZW1vdmVfeHBhdGgoImlkKCdjb250ZW50X2xlZnQnKS8vZGl2W2NvbnRhaW5zKEBjbGFzcywgJ3NlX3N0X2Zvb3RlcicpXS9hW2NvbnRhaW5zKHRleHQoKSwgJ+W5v+WRiicpXSIpOwogICAgICAgICAgICAvLyDnp7vpmaTlj7PkvqfmoI/pobbpg6gt5bqV6YOo5peg55So5bm/5ZGKCiAgICAgICAgICAgIHNhZmVSZW1vdmVfeHBhdGgoImlkKCdjb250ZW50X3JpZ2h0JykvYnIiKTsKICAgICAgICAgICAgc2FmZVJlbW92ZV94cGF0aCgiaWQoJ2NvbnRlbnRfcmlnaHQnKS9kaXZbbm90KEBpZCldIik7CiAgICAgICAgICAgIC8vIOenu+mZpOmhtumDqOWPr+iDveWHuueOsOeahCAi5Li65oKo5o6o6I2QIgogICAgICAgICAgICBzYWZlUmVtb3ZlX3hwYXRoKCJpZCgnY29udGVudF9sZWZ0JykvL2Rpdltjb250YWlucyhAY2xhc3MsICdfcnMnKV0iKTsKCiAgICAgICAgICB9IGVsc2UgaWYgKGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuTUJBSURVKSB7CiAgICAgICAgICAgIC8qKioq56e76Zmk5omL5py65qih5byP5LiK55qE6YOo5YiG5bm/5ZGKKioqKi8KICAgICAgICAgICAgc2FmZVJlbW92ZV94cGF0aCgiaWQoJ3BhZ2UtYmQnKS9kaXZbbm90KGNvbnRhaW5zKEBjbGFzcywgJ3Jlc3VsdCcpKV0iKTsKICAgICAgICAgICAgc2FmZVJlbW92ZV94cGF0aCgiaWQoJ3BhZ2UtYmQnKS9kaXZbbm90KEBjbGFzcyldIik7CiAgICAgICAgICAgIHNhZmVSZW1vdmVfeHBhdGgoIi8vZGl2W0BjbGFzcz0nbmEtbGlrZS1jb250YWluZXInXSIpOwogICAgICAgICAgICAvLyBzYWZlRnVuY3Rpb24oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAvLyAgICQoJyNwYWdlLWJkICNyZXN1bHRzPmRpdjpub3QoW2NsYXNzKj0icmVzdWx0Il0pJykucmVtb3ZlKCk7CiAgICAgICAgICAgIC8vIH0pOwogICAgICAgICAgICAvLyBzYWZlRnVuY3Rpb24oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAvLyAgICQoJyNwYWdlLWJkICNyZXN1bHRzPmRpdjpub3QoW2NsYXNzXSknKS5yZW1vdmUoKTsKICAgICAgICAgICAgLy8gfSk7CiAgICAgICAgICB9IGVsc2UgaWYgKGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuU08pIHsKICAgICAgICAgICAgc2FmZVJlbW92ZSgiI3NvX2t3LWFkIik7CiAgICAgICAgICAgIHNhZmVSZW1vdmUoIiNtLXNwcmVhZC1sZWZ0Iik7CiAgICAgICAgICAgIC8vIOenu+mZpOaQnOe0ouS4reW6lemDqOW5v+WRigogICAgICAgICAgICBzYWZlUmVtb3ZlKCIjbS1zcHJlYWQtYm90dG9tIik7CiAgICAgICAgICAgIC8vIOenu+mZpOWPs+S+p+agj+mhtumDqOW5v+WRigogICAgICAgICAgICBzYWZlUmVtb3ZlX3hwYXRoKCJpZCgncmlnaHR0b3BfYm94JykvL2xpWy4vL3NwYW5bY29udGFpbnModGV4dCgpLCAn5bm/5ZGKJyldXSIpOwogICAgICAgICAgfSBlbHNlIGlmIChjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLkJJTkcpIHsKICAgICAgICAgICAgc2FmZVJlbW92ZSgiLmJfYWQiKTsKICAgICAgICAgIH0gZWxzZSBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5HT09HTEUpIHsKICAgICAgICAgICAgc2FmZVJlbW92ZSgiI2JvdHRvbWFkcyIpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gYWRkQ291bnRlcihjaXRlTGlzdCkgewogICAgICAgICAgbGV0IGNzc1RleHQgPSAicG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDoxO21hcmdpbi1yaWdodDo0cHg7ZGlzcGxheTppbmxpbmUtYmxvY2s7Y29sb3I6d2hpdGU7Zm9udC1mYW1pbHk6J+W+rui9r+mbhem7kSc7Zm9udC1zaXplOjE2cHg7dGV4dC1hbGlnbjpjZW50ZXI7d2lkdGg6MjJweDtsaW5lLWhlaWdodDoyMnB4O2JvcmRlci1yYWRpdXM6NTAlOyI7CiAgICAgICAgICBsZXQgZGl2ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7CiAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNpdGVMaXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIGxldCBjdXIgPSBjaXRlTGlzdFtpXQogICAgICAgICAgICBjb25zdCBpbmRleCA9IGN1ci5nZXRBdHRyaWJ1dGUoJ1NvcnRJbmRleCcpOwogICAgICAgICAgICBpZiAoaW5kZXggPT09IG51bGwgfHwgdHlwZW9mIChpbmRleCkgPT09ICJ1bmRlZmluZWQiKSB7CiAgICAgICAgICAgICAgY3VyLnNldEF0dHJpYnV0ZSgnU29ydEluZGV4JywgQ09OU1Quc29ydEluZGV4KTsKICAgICAgICAgICAgICBjdXIuaW5uZXIgPSBjdXIuaW5uZXJIVE1MOwogICAgICAgICAgICAgIGRpdi5pbm5lckhUTUwgPSAiPGVtIGNsYXNzPSdBQy1Db3VudGVyVCcgc3R5bGU9IiArIGNzc1RleHQgKyAiPiIgKyBDT05TVC5zb3J0SW5kZXggKyAiPC9lbT4iOwogICAgICAgICAgICAgIGN1ci5pbm5lckhUTUwgPSBkaXYuaW5uZXJIVE1MICsgY3VyLmlubmVyOwogICAgICAgICAgICAgIENPTlNULnNvcnRJbmRleCsrOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGNvbnN0IGN1ckNvdW50ZXIgPSBjdXIucXVlcnlTZWxlY3RvcigiLkFDLUNvdW50ZXJUIikKICAgICAgICAgICAgICBjb25zdCBvcmlJbmRleCA9IGN1ckNvdW50ZXIuaW5uZXJUZXh0CiAgICAgICAgICAgICAgY29uc3QgY2hlY2tWYWx1ZSA9IChpICsgMSkgJSAxMDA7CiAgICAgICAgICAgICAgLy8g5pWw5o2u5YC85LiN5ZCMCiAgICAgICAgICAgICAgLy8g5pWw5o2u5rKh5pyJ6KKr57+76K+RCiAgICAgICAgICAgICAgaWYgKCtpbmRleCAhPT0gY2hlY2tWYWx1ZSAmJiAhL15cZCskLy50ZXN0KG9yaUluZGV4KSkgeyAvLyDmjInpnIDmm7TmlrAKICAgICAgICAgICAgICAgIGN1ckNvdW50ZXIuaW5uZXJUZXh0ID1jaGVja1ZhbHVlOwogICAgICAgICAgICAgICAgY3VyLnNldEF0dHJpYnV0ZSgnU29ydEluZGV4JywgY2hlY2tWYWx1ZSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICB2YXIgSG9zdFJlZyA9IG5ldyBSZWdFeHAoLyhodHRwcz86XC9cLyk/KFteL1xzXSspL2kpOwoKICAgICAgICBmdW5jdGlvbiBnZXRUZXh0SG9zdChzYmVmb3JlKSB7CiAgICAgICAgICBzYmVmb3JlID0gKHNiZWZvcmUgJiYgc2JlZm9yZS50cmltKCkpLnJlcGxhY2UoL1xzLVxzXGR7NH0tXGR7MSwyfS1cZHsxLDJ9LywgIiIpIHx8ICIiOwogICAgICAgICAgbGV0IHNlbmQ7CiAgICAgICAgICBsZXQgcmVzdWx0ID0gc2JlZm9yZS5zcGxpdCgnLScpOwogICAgICAgICAgLy8gLS3mkJzni5fnmb7luqbkuJPnlKjvvJvlpoLmnpznrKzkuIDkuKrmmK/kuK3mlofnmoTor53vvIzlnLDlnYDlsLHmmK/nrKzkuozkuKoKICAgICAgICAgIGlmICgocmVzdWx0Lmxlbmd0aCA+IDEgJiYgbmV3IFJlZ0V4cCgiW1xcdTRFMDAtXFx1OUZGRl0rIiwgImciKS50ZXN0KHNiZWZvcmUpKSAmJiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5CQUlEVSB8fCBjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLlNPR09VKSkgewogICAgICAgICAgICBzYmVmb3JlID0gcmVzdWx0WzFdOwogICAgICAgICAgfQogICAgICAgICAgLy8g5q2k5pe2c2JlZm9yZeWHoOS5juaYr+etieS6jue9keWdgOS6hu+8jOS9huaYr+acieaXtuWAmeS8muacieWkmueahOepuuagvO+8jOWkmueahOWGheWuue+8jOWkmueahOWJjee8gGh0dHDvvIzlpJrkvZnnmoTot6/lvoQKICAgICAgICAgIGxldCByZXMgPSBIb3N0UmVnLmV4ZWMoc2JlZm9yZSk7CiAgICAgICAgICBzZW5kID0gKHJlcyAmJiByZXNbMl0udHJpbSgpKSB8fCAiIjsKICAgICAgICAgIC8vIHNlbmQgPSBzYmVmb3JlLnJlcGxhY2UoLyhcL1teL10qfFxzKikvLCAiIikucmVwbGFjZSgvPFtePl0qPi9nLCAiIikucmVwbGFjZSgvaHR0cHM/OlwvXC8vZywgIiIpLnJlcGxhY2UoLzxcLz9zdHJvbmc+L2csICIiKS5yZXBsYWNlKC88XC8/Yj4vZywgIiIpLnJlcGxhY2UoLzw/Pj8vZywgIiIpLnJlcGxhY2UoLyggfFwvKS4qL2csICIiKS5yZXBsYWNlKC9cLlwuLiovLCAiIik7CiAgICAgICAgICBpZiAoc2VuZCA9PT0gIiIpIHJldHVybiBudWxsOwogICAgICAgICAgaWYgKHNlbmQuaW5kZXhPZigiLiIpIDwgMCkgcmV0dXJuIG51bGw7CiAgICAgICAgICBpZiAoc2VuZC5pbmRleE9mKCLihrUiKSA+PSAwKSByZXR1cm4gbnVsbDsKICAgICAgICAgIHJldHVybiBzZW5kLnRyaW0oKTsKICAgICAgICB9CgogICAgICAgIGZ1bmN0aW9uIGFkZEZhdmljb24oY2l0ZUxpc3QpIHsKICAgICAgICAgIGlmIChjdXJTaXRlLlNpdGVUeXBlSUQgIT09IFNpdGVUeXBlLkRPR0UpIHsKICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNpdGVMaXN0Lmxlbmd0aDsgaW5kZXgrKykgewogICAgICAgICAgICAgIGlmIChudWxsID09PSBjaXRlTGlzdFtpbmRleF0uZ2V0QXR0cmlidXRlKCJhY19mYXZpY29uU3RhdHVzIikpIHsKICAgICAgICAgICAgICAgIGxldCBjdXJOb2RlID0gY2l0ZUxpc3RbaW5kZXhdOwogICAgICAgICAgICAgICAgbGV0IHRhcmdldE5vZGUgPSBjdXJOb2RlOwogICAgICAgICAgICAgICAgbGV0IHsgY3VySG9zdCwgY3VyVXJsIH0gPSBnZXROb2RlSG9zdCh0YXJnZXROb2RlKTsKICAgICAgICAgICAgICAgIGlmIChjdXJIb3N0ID09PSBudWxsIHx8IChjdXJVcmwgJiYgY3VyVXJsLmluY2x1ZGVzKCJ3d3cuYmFpZHUuY29tL2xpbmsiKSkpIHsgLy8g6Lez6L+HYmFpZHUuY2xpY2sKICAgICAgICAgICAgICAgICAgY29udGludWU7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBvdGhlckRhdGEub3RoZXIuY3VySG9zdHMuYWNwdXNoKGN1ckhvc3QgKyAiIyMjIiArIGN1clVybCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBsZXQgZmF2aWNvblVybCA9IGN1ckhvc3Q7CiAgICAgICAgICAgICAgICBsZXQgSUkgPSAwOwogICAgICAgICAgICAgICAgZm9yICg7IElJIDw9IDU7IElJKyspIHsKICAgICAgICAgICAgICAgICAgdGFyZ2V0Tm9kZSA9IHRhcmdldE5vZGUucGFyZW50Tm9kZTsKICAgICAgICAgICAgICAgICAgaWYgKHRhcmdldE5vZGUgIT0gbnVsbCAmJiB0YXJnZXROb2RlLnF1ZXJ5U2VsZWN0b3IoY3VyU2l0ZS5GYXZpY29uQWRkVG8pICE9IG51bGwpIHsKICAgICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgaWYodGFyZ2V0Tm9kZS5wYXJlbnROb2RlLmhhc0F0dHJpYnV0ZSgndHBsJykgJiYgdGFyZ2V0Tm9kZS5wYXJlbnROb2RlLmdldEF0dHJpYnV0ZSgndHBsJykuaW5jbHVkZXMoJ3N0b2NrJykpIHsKICAgICAgICAgICAgICAgICAgY3VyTm9kZS5zZXRBdHRyaWJ1dGUoImFjX2Zhdmljb25TdGF0dXMiLCAiLTMiKTsKICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIC8vY29uc29sZS5sb2coaW5kZXgrIi4iK2Zhdmljb25VcmwrIi0tIitJSSk7CiAgICAgICAgICAgICAgICBpZiAoSUkgPD0gNSkgewogICAgICAgICAgICAgICAgICAvLyDlhYjnlKjniLboioLngrnliKTmlq3kuIDkuIvmmK/lkKblrZjlnKhpbWcKICAgICAgICAgICAgICAgICAgbGV0IHRtcEhUTUwgPSB0YXJnZXROb2RlLmlubmVySFRNTDsKICAgICAgICAgICAgICAgICAgbGV0IHBvcyA9IHRtcEhUTUwuaW5kZXhPZigiZmF2LXVybCIpCiAgICAgICAgICAgICAgICAgICAgJiB0bXBIVE1MLmluZGV4T2YoIndyX2ZhdiIpCiAgICAgICAgICAgICAgICAgICAgJiB0bXBIVE1MLmluZGV4T2YoImZhdnVybCIpCiAgICAgICAgICAgICAgICAgICAgJiB0bXBIVE1MLmluZGV4T2YoInRpdC1pY28iKQogICAgICAgICAgICAgICAgICAgICYgdG1wSFRNTC5pbmRleE9mKCJpbWdfZmF2IHJtc19pbWciKQogICAgICAgICAgICAgICAgICAgICYgdG1wSFRNTC5pbmRleE9mKCJjLXRvb2wtIikKICAgICAgICAgICAgICAgICAgICAmIHRtcEhUTUwuaW5kZXhPZigic3BhbiBjbGFzcz1cImMtaWNvbiBjLWljb24tIikKICAgICAgICAgICAgICAgICAgICAmIHRtcEhUTUwuaW5kZXhPZigiaW1nIGNsYXNzPVwieEEzM0djIik7CiAgICAgICAgICAgICAgICAgIC8v5LuW6Ieq5bex5bey57uP5YGa5LqGZmF2aWNvbuS6hgogICAgICAgICAgICAgICAgICBpZiAocG9zID4gLTEpIHsKICAgICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZygi5bey5pyJ5Zu+54mH77yaIik7CiAgICAgICAgICAgICAgICAgICAgY3VyTm9kZS5zZXRBdHRyaWJ1dGUoImFjX2Zhdmljb25TdGF0dXMiLCAiLTIiKTsKICAgICAgICAgICAgICAgICAgICBjb250aW51ZTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICB0YXJnZXROb2RlID0gdGFyZ2V0Tm9kZS5xdWVyeVNlbGVjdG9yKGN1clNpdGUuRmF2aWNvbkFkZFRvKTsKICAgICAgICAgICAgICAgICAgLy8g54m55q6K5aSE55CGQklORwogICAgICAgICAgICAgICAgICAvLyBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5CSU5HKSBjdXJOb2RlID0gY3VyTm9kZS5xdWVyeVNlbGVjdG9yKCJoMiIpOwogICAgICAgICAgICAgICAgICAvL2h0dHBzOi8vYXBpLmJ5aS5wdy9mYXZpY29uLz91cmw9Pz8/PyDkuI3nqLPlrpoKICAgICAgICAgICAgICAgICAgLy9odHRwOi8vIitmYXZpY29uVXJsKyIvY2RuLmljbz9kZWZhdWx0aWNvbj1odHRwOi8vc296LmltL2Zhdmljb24uaWNvIOS4jeeos+WumgogICAgICAgICAgICAgICAgICAvL2h0dHBzOi8vd3d3Lnh0d2luZC5jb20vYXBpL2luZGV4LnBocD91cmw9Pz8/PyDmjILkuobjgILjgILjgIIKICAgICAgICAgICAgICAgICAgLy9odHRwczovL3N0YXRpY3MuZG5zcG9kLmNuL3Byb3h5X2Zhdmljb24vXy9mYXZpY29uP2RvbWFpbj1zaW5hLmNuCiAgICAgICAgICAgICAgICAgIC8vd3d3Lmdvb2dsZS5jb20vczIvZmF2aWNvbnM/ZG9tYWluPTc2NDM1MDE3Ny5sb2Z0ZXIuY29tCiAgICAgICAgICAgICAgICAgIC8v5aaC5p6c5Zyw5Z2A5LiN5q2j56Gu77yM6YKj5LmI5Lii5byDCiAgICAgICAgICAgICAgICAgIGxldCBob3N0ID0gZmF2aWNvblVybC5yZXBsYWNlKC9bXi5dK1wuKFteLl0rKVwuKFteLl0rKS8sICIkMS4kMiIpOwogICAgICAgICAgICAgICAgICBpZiAodGFyZ2V0Tm9kZS5xdWVyeVNlbGVjdG9yKCIuQUMtZmF2aWNvblQiKSA9PT0gbnVsbCAmJiBob3N0Lmxlbmd0aCA+IDMpIHsKICAgICAgICAgICAgICAgICAgICBsZXQgaW5zTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImltZyIpOwogICAgICAgICAgICAgICAgICAgIC8vIGN1ck5vZGUgPSBjdXJOb2RlLmNoaWxkcmVuWzBdIHx8IGN1ck5vZGUuZmlyc3RDaGlsZCA7IC8vIGZpcnN0Q2hpbGTlrrnmmJPpgYfliLB0ZXh05a+56LGhCiAgICAgICAgICAgICAgICAgICAgY3VyTm9kZS5zZXRBdHRyaWJ1dGUoImFjX2Zhdmljb25TdGF0dXMiLCAiMSIpOwogICAgICAgICAgICAgICAgICAgIC8vIGN1ck5vZGUuaW5zZXJ0QmVmb3JlKGluc05vZGUsIGN1ck5vZGUuZmlyc3RDaGlsZCk7CiAgICAgICAgICAgICAgICAgICAgaW5zTm9kZS5jbGFzc05hbWUgPSAiQUMtZmF2aWNvblQiOwogICAgICAgICAgICAgICAgICAgIGluc05vZGUuc2V0QXR0cmlidXRlKCJyZWZlcnJlcnBvbGljeSIsICJuby1yZWZlcnJlciIpOwogICAgICAgICAgICAgICAgICAgIGluc05vZGUuc3R5bGUgPSAicG9zaXRpb246cmVsYXRpdmU7ei1pbmRleDoxO3ZlcnRpY2FsLWFsaWduOnN1YjtoZWlnaHQ6MTZweDt3aWR0aDoxNnB4O21hcmdpbi1yaWdodDo1cHg7bWFyZ2luLWJvdHRvbTogMnB4O3VzZXItc2VsZWN0Om5vbmU7IjsKCiAgICAgICAgICAgICAgICAgICAgaW5zTm9kZS5zcmMgPSAiaHR0cHM6Ly9mYXZpY29uLnlhbmRleC5uZXQvZmF2aWNvbi92Mi8iICsgKGN1ck5vZGUuaHJlZiB8fCBob3N0KTsgLy8gTUFSSyB5YW5kZXjmlK/mjIHov5nnp43mn6Xor6Lop4TliJkKICAgICAgICAgICAgICAgICAgICBpbnNOb2RlLnNldEF0dHJpYnV0ZSgiZmF2aWNvbklEIiwgIjAiKTsKICAgICAgICAgICAgICAgICAgICBpbnNOb2RlLnNldEF0dHJpYnV0ZSgib25kcmFnc3RhcnQiLCAicmV0dXJuIGZhbHNlOyIpIC8vIOemgeatouaLluWKqOWbvueJhy3pgb/lhY3mi5bplJnkuoYKICAgICAgICAgICAgICAgICAgICAvLyBjdXJOb2RlLmlubmVySFRNTCA9IGluc05vZGUub3V0ZXJIVE1MICsgY3VyTm9kZS5pbm5lckhUTUw7CiAgICAgICAgICAgICAgICAgICAgLy8gY3VyTm9kZS5pbnNlcnRBZGphY2VudEhUTUwoImFmdGVyRW5kIiwgaW5zTm9kZS5pbm5lckhUTUwpOwogICAgICAgICAgICAgICAgICAgIGxldCBiZWZvcmVJbmRleCA9IDA7CiAgICAgICAgICAgICAgICAgICAgaWYgKHRhcmdldE5vZGUuY2hpbGROb2Rlc1tiZWZvcmVJbmRleF0uY2xhc3NOYW1lID09PSAiQUMtQ291bnRlclQiKSB7CiAgICAgICAgICAgICAgICAgICAgICBiZWZvcmVJbmRleCA9IDE7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIHRhcmdldE5vZGUuaW5zZXJ0QmVmb3JlKGluc05vZGUsIHRhcmdldE5vZGUuY2hpbGROb2Rlc1tiZWZvcmVJbmRleF0pOwogICAgICAgICAgICAgICAgICAgIChmdW5jdGlvbiAoeGN1cikgewogICAgICAgICAgICAgICAgICAgICAgaW5zTm9kZS5vbmxvYWQgPSBmdW5jdGlvbiAoZW52KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBpbWdOb2RlID0geGN1ci5xdWVyeVNlbGVjdG9yKCIuQUMtZmF2aWNvblQiKTsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKChpbWdOb2RlIHx8IHt9KS5uYXR1cmFsV2lkdGggPCAxMCkgewogICAgICAgICAgICAgICAgICAgICAgICAgIGltZ05vZGUuc2V0QXR0cmlidXRlKCJvbGQtc3JjIiwgaW1nTm9kZS5zcmMpOwogICAgICAgICAgICAgICAgICAgICAgICAgIGltZ05vZGUuc3JjID0gQUNDb25maWcuZGVmYXVsdEZhdmljb25Vcmw7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgaW1nTm9kZS5vbmxvYWQgPSAiamF2YXNjcmlwdDp2b2lkKDApOyI7CiAgICAgICAgICAgICAgICAgICAgICB9OwogICAgICAgICAgICAgICAgICAgIH0pKHRhcmdldE5vZGUpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB2YXIgY2hlY2tOb2RlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoIiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIik7CiAgICAgICAgICAgIGZvciAobGV0IGZhTm9kZSBvZiBjaGVja05vZGVzKSB7CiAgICAgICAgICAgICAgbGV0IGZhdmljb25Ob2RlID0gZmFOb2RlLnF1ZXJ5U2VsZWN0b3IoIi5yZXN1bHRfX2ljb24gaW1nIik7CiAgICAgICAgICAgICAgbGV0IGJlZm9yZU5vZGUgPSBmYU5vZGUucXVlcnlTZWxlY3RvcigiLnJlc3VsdF9fdGl0bGUgYSIpOwogICAgICAgICAgICAgIGlmKGZhdmljb25Ob2RlICYmIGJlZm9yZU5vZGUpewogICAgICAgICAgICAgICAgZmF2aWNvbk5vZGUuc3R5bGUgPSAidmVydGljYWwtYWxpZ246bWlkZGxlO21hcmdpbi1yaWdodDo1cHg7IjsKICAgICAgICAgICAgICAgIGJlZm9yZU5vZGUucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoZmF2aWNvbk5vZGUsIGJlZm9yZU5vZGUpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gSW5zZXJ0U2V0dGluZ01lbnUoKSB7CiAgICAgICAgICBpZiAoKGN1clNpdGUuU2l0ZVR5cGVJRCAhPT0gU2l0ZVR5cGUuT1RIRVJTKSAmJiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjbXl1c2VyIikgPT09IG51bGwpIHsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICBsZXQgcGFyZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3UsICNnYj5kaXY+ZGl2PmRpdiwgI2JfaGVhZGVyPiNpZF9oLCAudG9wLWJhciAuc29nb3Utc2V0LWJveCwgI2hlYWRlcl93cmFwcGVyIC5qcy1obC1idXR0b24sIGJvZHlbZG9nZV0gI2hlYWRlcl93cmFwcGVyICNoZWFkZXIiKTsgLy9iYWlkdTsgZ29vZ2xlOyBiaW5nOyDmkJzni5cKICAgICAgICAgICAgICBwYXJlbnQuc3R5bGUgPSAid2lkdGg6IGF1dG87IjsKICAgICAgICAgICAgICBsZXQgdXNlckFkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgICAgICAgICAgICB1c2VyQWRpdi5pZCA9ICJteXVzZXIiOwogICAgICAgICAgICAgIHVzZXJBZGl2LmlubmVySFRNTCA9IGA8aW5wdXQgdHlwZT0nc3VibWl0JyBjbGFzcz0nbXl1c2VyY29uZmlnJyB2YWx1ZT0nJHtBbGxEYXRhLmxhbi51c2UubWVudV90ZXh0fScvPjxzcGFuIGNsYXNzPSdhYy1uZXd2ZXJzaW9uRGlzcGxheScgc3R5bGU9J2JhY2tncm91bmQtY29sb3I6IHJlZDtmbG9hdDogbGVmdDtoZWlnaHQ6IDhweDt3aWR0aDogOHB4O2JvcmRlci1yYWRpdXM6IDRweDtkaXNwbGF5OiR7KENPTlNULmhhc05ld0Z1bmNOZWVkRGlzcGxheSA/ICJ1bnNldCIgOiAibm9uZSIpfSc+Jm5ic3A7PC9zcGFuPmA7CiAgICAgICAgICAgICAgcGFyZW50Lmluc2VydEJlZm9yZSh1c2VyQWRpdiwgcGFyZW50LmNoaWxkTm9kZXNbMF0pOwogICAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNteXVzZXIgLm15dXNlcmNvbmZpZyIpLmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgICAgIHJldHVybiBBQ3RvZ2dsZVNldHRpbmdEaXNwbGF5KGUpOwogICAgICAgICAgICAgIH0sIHRydWUpOwogICAgICAgICAgICB9IGNhdGNoIChlKSB7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0oKTsgLy8g6K+75Y+W5Liq5Lq66K6+572u5L+h5oGvCiAgICAgIC8qKgogICAgICAgKiBAcGFyYW0gY2FsbGJhY2sg5Zue6LCD5Ye95pWw77yM6ZyA6KaB6L+U5Zue5piv5ZCm57uT5p2fVHJ1ZeOAgUZhbHNl44CB5ZCm5YiZ55u45b2T5LqO5a6a5pe25ZmoCiAgICAgICAqIGNhbGxiYWNrIHJldHVybjoKICAgICAgICogIHRydWUgPSDlgJLorqHml7YKICAgICAgICogIGZhbHNlID0g6K6h5pe25ZmoCiAgICAgICAqICBub25lID0g6K6h5pe25ZmoCiAgICAgICAqIEBwYXJhbSBwZXJpb2Qg5ZGo5pyf77yM5aaCOjIwMG1zCiAgICAgICAqIEBwYXJhbSBydW5Ob3cg56uL5Y2z5omn6KGMCiAgICAgICAqLwogICAgICBmdW5jdGlvbiBSQUZJbnRlcnZhbChjYWxsYmFjaywgcGVyaW9kLCBydW5Ob3cpIHsKICAgICAgICAvLyDkuIDnp5I2MOasoe+8jOWvueW6lDHnp5IxMDAwbXMKICAgICAgICBjb25zdCBuZWVkQ291bnQgPSBwZXJpb2QgLyAxMDAwICogNjA7CiAgICAgICAgbGV0IHRpbWVzID0gMDsgLy8g5bey57uP6K6h5pWw55qE5pWw6YePCgogICAgICAgIGlmKHJ1bk5vdyA9PT0gdHJ1ZSl7IC8vIOWvueS6jueri+WNs+aJp+ihjOWHveaVsOeahOeri+WNs+WIpOWumu+8jOWQpuWImei/m+ihjAogICAgICAgICAgY29uc3Qgc2hvdWxkRmluaXNoID0gY2FsbGJhY2soKTsKICAgICAgICAgIGlmKHNob3VsZEZpbmlzaCkgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgZnVuY3Rpb24gc3RlcCgpIHsKICAgICAgICAgIGlmKHRpbWVzIDwgbmVlZENvdW50KXsKICAgICAgICAgICAgLy8g6K6h5pWw5pyq57uT5p2fLee7p+e7reiuoeaVsAogICAgICAgICAgICB0aW1lcysrOwogICAgICAgICAgICByZXF1ZXN0QW5pbWF0aW9uRnJhbWUoc3RlcCkKICAgICAgICAgIH1lbHNlewogICAgICAgICAgICAvLyDorqHmlbDnu5PmnZ8t5YGc5q2i6K6h5pWw77yM5Yik5a6a57uT5p6cCiAgICAgICAgICAgIGNvbnN0IHNob3VsZEZpbmlzaCA9IGNhbGxiYWNrKCkgfHwgZmFsc2U7CiAgICAgICAgICAgIGlmKCFzaG91bGRGaW5pc2gpewogICAgICAgICAgICAgIC8vIOi/lOWbnuWAvOS4umZhbHNl77yM6YeN5ZCv6K6h5pWw5ZmoCiAgICAgICAgICAgICAgdGltZXMgPSAwOwogICAgICAgICAgICAgIHJlcXVlc3RBbmltYXRpb25GcmFtZShzdGVwKQogICAgICAgICAgICB9ZWxzZXsKICAgICAgICAgICAgICAvLyDov5Tlm57lgLzkuLp0cnVl77yM57uT5p2f6K6h5pWw5ZmoCiAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICAgcmVxdWVzdEFuaW1hdGlvbkZyYW1lKHN0ZXApOwogICAgICB9CgogICAgICBmdW5jdGlvbiBzYWZlRnVuY3Rpb24oZnVuYykgewogICAgICAgIHRyeSB7CiAgICAgICAgICBmdW5jKCk7CiAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgIH0KICAgICAgfQoKICAgICAgZnVuY3Rpb24gc2FmZVdhaXRGdW5jKHNlbGVjdG9yLCBjYWxsYmFja0Z1bmMsIHRpbWUsIG5vdENsZWFyKSB7CiAgICAgICAgdGltZSA9IHRpbWUgfHwgNTA7CiAgICAgICAgbm90Q2xlYXIgPSBub3RDbGVhciB8fCBmYWxzZTsKICAgICAgICBsZXQgZG9DbGVhciA9ICFub3RDbGVhcjsKICAgICAgICBSQUZJbnRlcnZhbChmdW5jdGlvbiAoKSB7CiAgICAgICAgICBpZiAoKHR5cGVvZiAoc2VsZWN0b3IpID09PSAic3RyaW5nIiAmJiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHNlbGVjdG9yKSAhPSBudWxsKSkgewogICAgICAgICAgICBjYWxsYmFja0Z1bmMoZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3RvcikpOwogICAgICAgICAgICBpZiAoZG9DbGVhcikgcmV0dXJuIHRydWU7CiAgICAgICAgICB9IGVsc2UgaWYgKHR5cGVvZiAoc2VsZWN0b3IpID09PSAiZnVuY3Rpb24iICYmIChzZWxlY3RvcigpICE9IG51bGwgfHwgKHNlbGVjdG9yKCkgfHwgW10pLmxlbmd0aCA+IDApKSB7CiAgICAgICAgICAgIGNhbGxiYWNrRnVuYyhzZWxlY3RvcigpWzBdKTsKICAgICAgICAgICAgaWYgKGRvQ2xlYXIpIHJldHVybiB0cnVlOwogICAgICAgICAgfQogICAgICAgIH0sIHRpbWUsIHRydWUpOwogICAgICB9CgogICAgICBmdW5jdGlvbiBBQ19hZGRTdHlsZShjc3MsIGNsYXNzTmFtZSwgYWRkVG9UYXJnZXQsIGlzUmVsb2FkLCBpbml0VHlwZSkgeyAvLyDmt7vliqBDU1Pku6PnoIHvvIzkuI3ogIPomZHmlofmnKzovb3lhaXml7bpl7TvvIzlj6rmiafooYzkuIDmrKEt5peg6K665oiQ5Yqf5LiO5ZCm77yM5bim5pyJY2xhc3NOYW1lCiAgICAgICAgUkFGSW50ZXJ2YWwoZnVuY3Rpb24gKCkgewogICAgICAgICAgLyoqCiAgICAgICAgICAgKiBhZGRUb1RhcmdldOi/memHjOS4jeimgeS9v+eUqGhlYWTmoIfnrb4saGVhZOagh+etvueahGNzc+S8muWcqGh0bWzovb3lhaXml7bliqDovb3vvIwKICAgICAgICAgICAqIGh0bWzliqDovb3lkI7kvLzkuY7kuI3kvJrlho3mrKHliqDovb3vvIxib2R55Lya6Ieq5Yqo5Yqg6L29CiAgICAgICAgICAgKiAqKi8KICAgICAgICAgIGxldCBhZGRUbyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYWRkVG9UYXJnZXQpOwogICAgICAgICAgaWYgKHR5cGVvZiAoYWRkVG9UYXJnZXQpID09PSAidW5kZWZpbmVkIikKICAgICAgICAgICAgYWRkVG8gPSAoZG9jdW1lbnQuaGVhZCB8fCBkb2N1bWVudC5ib2R5IHx8IGRvY3VtZW50LmRvY3VtZW50RWxlbWVudCk7CiAgICAgICAgICBpc1JlbG9hZCA9IGlzUmVsb2FkIHx8IGZhbHNlOyAvLyDpu5jorqTmmK/pnZ7liqDovb3lnosKICAgICAgICAgIGluaXRUeXBlID0gaW5pdFR5cGUgfHwgInRleHQvY3NzIjsKICAgICAgICAgIC8vIOWmguaenOayoeacieebruagh+iKgueCuSjliJnnm7TmjqXliqApIHx8IOacieebruagh+iKgueCueS4lOaJvuWIsOS6huiKgueCuSjov5vooYzmlrDlop4pCiAgICAgICAgICBpZiAodHlwZW9mIChhZGRUb1RhcmdldCkgPT09ICJ1bmRlZmluZWQiIHx8ICh0eXBlb2YgKGFkZFRvVGFyZ2V0KSAhPSAidW5kZWZpbmVkIiAmJiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGFkZFRvVGFyZ2V0KSAhPSBudWxsKSkgewogICAgICAgICAgICAvLyBjbGVhckludGVydmFsKHRvdXQpOwogICAgICAgICAgICAvLyDlpoLmnpx0cnVlIOW8uuihjOimhueblu+8jOS4jeeuoeacieayoeaciS0t5YWI5Yig6ZmkCiAgICAgICAgICAgIC8vIOWmguaenGZhbHNl77yM5LiN6KaG55uW77yM5L2G5piv5aaC5p6c5pyJ55qE6K+d77yM6KaB6YCA5Ye677yM5LiN5a2Y5Zyo5YiZ5paw5aKeLS3ml6DpnIDliKDpmaQKICAgICAgICAgICAgaWYgKGlzUmVsb2FkID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgc2FmZVJlbW92ZSgiLiIgKyBjbGFzc05hbWUpOwogICAgICAgICAgICB9IGVsc2UgaWYgKGlzUmVsb2FkID09PSBmYWxzZSAmJiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuIiArIGNsYXNzTmFtZSkgIT0gbnVsbCkgewogICAgICAgICAgICAgIC8vIOiKgueCueWtmOWcqCAmJiDkuI3lh4blpIfopobnm5YKICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICBsZXQgY3NzTm9kZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInN0eWxlIik7CiAgICAgICAgICAgIGlmIChjbGFzc05hbWUgIT0gbnVsbCkgY3NzTm9kZS5jbGFzc05hbWUgPSBjbGFzc05hbWU7CiAgICAgICAgICAgIGNzc05vZGUuc2V0QXR0cmlidXRlKCJ0eXBlIiwgaW5pdFR5cGUpOwogICAgICAgICAgICBjc3NOb2RlLmlubmVySFRNTCA9IGNzczsKICAgICAgICAgICAgdHJ5IHsKICAgICAgICAgICAgICBhZGRUby5hcHBlbmRDaGlsZChjc3NOb2RlKTsKICAgICAgICAgICAgfSBjYXRjaCAoZSkgewogICAgICAgICAgICAgIGNvbnNvbGUubG9nKGUubWVzc2FnZSk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICB9CiAgICAgICAgfSwgMjAsIHRydWUpOwogICAgICB9CgogICAgICBmdW5jdGlvbiBzYWZlUmVtb3ZlKGNzc1NlbGVjdG9yKSB7CiAgICAgICAgc2FmZUZ1bmN0aW9uKCgpID0+IHsKICAgICAgICAgIGxldCByZW1vdmVOb2RlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoY3NzU2VsZWN0b3IpOwogICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZW1vdmVOb2Rlcy5sZW5ndGg7IGkrKykKICAgICAgICAgICAgcmVtb3ZlTm9kZXNbaV0ucmVtb3ZlKCk7CiAgICAgICAgfSkKICAgICAgfQoKICAgICAgZnVuY3Rpb24gc2FmZVJlbW92ZV94cGF0aCh4cGF0aFNlbGVjdG9yKSB7CiAgICAgICAgc2FmZUZ1bmN0aW9uKCgpID0+IHsKICAgICAgICAgIGxldCByZW1vdmVOb2RlcyA9IGdldEFsbEVsZW1lbnRzKHhwYXRoU2VsZWN0b3IpOwogICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCByZW1vdmVOb2Rlcy5sZW5ndGg7IGkrKykKICAgICAgICAgICAgcmVtb3ZlTm9kZXNbaV0ucmVtb3ZlKCk7CiAgICAgICAgfSkKICAgICAgfQoKICAgICAgZnVuY3Rpb24gY2hlY2tJU0JhaWR1TWFpbigpIHsgLy8g6aaW6aG1PXRydWU76Z2e6aaW6aG1PWZhbHNlCiAgICAgICAgLy8g5aaC5p6c5piv55m+5bqmICYmICDmsqHmnIko55m+5bqm5pCc57Si57uT5p6c55qE5qCH5b+XLVvlrZjlnKhd55m+5bqm55qE5YaF5a65KSByZXR1cm47CiAgICAgICAgcmV0dXJuICEoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5CQUlEVSAmJiAhKGxvY2F0aW9uLmhyZWYucmVwbGFjZSgvKCZ8XD8pKHdkfHdvcmQpPS8sICIiKSAhPT0gbG9jYXRpb24uaHJlZiB8fCBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIjY29udGVudF9sZWZ0IikgfHwKICAgICAgICAgICAgKChkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIja3ciKSAmJiBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIja3ciKS5nZXRBdHRyaWJ1dGUoInZhbHVlIikpIHx8ICIiKSAhPT0gIiIpCiAgICAgICAgKQogICAgICB9CgogICAgICAvKioKICAgICAgICog5qOA5p+lZG9jdW1lbnTnmoTlrZDoioLngrnmmK/lkKblkKvmnInlhYPntKAKICAgICAgICogQHBhcmFtIG5vZGVDbGFzcyDlvoXmo4Dmn6XlhYPntKAKICAgICAgICogQHJldHVybnMge2Jvb2xlYW59IFR8RgogICAgICAgKi8KICAgICAgZnVuY3Rpb24gY2hlY2tEb2NtZW50SGFzTm9kZShub2RlQ2xhc3MpIHsKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRvY3VtZW50LmNoaWxkTm9kZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGlmIChkb2N1bWVudC5jaGlsZE5vZGVzW2ldLmRhdGEgJiYgZG9jdW1lbnQuY2hpbGROb2Rlc1tpXS5kYXRhLmluZGV4T2Yobm9kZUNsYXNzKSA+IDApCiAgICAgICAgICAgIHJldHVybiB7cmVzOiB0cnVlLCBub2RlOiBkb2N1bWVudC5jaGlsZE5vZGVzW2ldfTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHtyZXM6IGZhbHNlLCBub2RlOiBudWxsfTsKICAgICAgfQoKICAgICAgZnVuY3Rpb24gRlNCYWlkdSgpIHsgLy8gdGhhbmtzIGZvciBjb2RlIGZyb20g5rWu55SfQOacquathyBAcGFnZSBodHRwczovL2dyZWFzeWZvcmsub3JnL3poLVRXL3NjcmlwdHMvMzE2NDIKICAgICAgICAvLyBkZWJ1Zygi5Yid5aeL5YyWRlNCQUlEVSIpOwoKICAgICAgICBDT05TVC5TdHlsZU1hbmdlciA9IHsKICAgICAgICAgIC8qKgogICAgICAgICAgICog5a+85YWlY3Nz5YaF5a655Li644CQ5paH5pys5qC85byP44CR77yB77yB77yBCiAgICAgICAgICAgKiBAcGFyYW0gZGF0YSBjc3PlhoXlrrkKICAgICAgICAgICAqIEBwYXJhbSB0b0NsYXNzTmFtZSDpooTmnJ/nmoTnsbvlkI0KICAgICAgICAgICAqLwogICAgICAgICAgaW1wb3J0U3R5bGU6IGZ1bmN0aW9uIChkYXRhLCB0b0NsYXNzTmFtZSwgdXNlTm9ybWFsQ1NTLCBtdXN0TG9hZCkgewogICAgICAgICAgICBpZiAodHlwZW9mIChkYXRhKSA9PT0gInVuZGVmaW5lZCIgfHwgZGF0YSA9PT0gbnVsbCkgewogICAgICAgICAgICAgIC8vIOi/meS4quWxheeEtuWcqFZN5LiK5Ye66Zeu6aKY5LqG77yM5b6I5aWH5oCqCiAgICAgICAgICAgICAgY29uc29sZS5lcnJvcigiR01fZ2V0UmVzb3VyY2VUZXh06I635Y+W5YaF5a655pWw5o2u5byC5bi4Iik7CiAgICAgICAgICAgICAgcmV0dXJuCiAgICAgICAgICAgIH0KICAgICAgICAgICAgdXNlTm9ybWFsQ1NTID0gdXNlTm9ybWFsQ1NTIHx8IGZhbHNlOwogICAgICAgICAgICBtdXN0TG9hZCA9IG11c3RMb2FkIHx8IGZhbHNlOwogICAgICAgICAgICAvLyDmma7pgJrmtY/op4jlmajmqKHlvI8tLeS9huaYr+S8vOS5juagt+W8j+WKoOi9veeahOS8mOWFiOe6p+S9juS6jmhlYWTkuK3nmoRzdHlsZeS8mOWFiOe6pwogICAgICAgICAgICBpZiAoIXVzZU5vcm1hbENTUyAmJiBjdXJTaXRlLlNpdGVUeXBlSUQgIT09IFNpdGVUeXBlLkRVQ0spIHsKICAgICAgICAgICAgICAvLyDpgJrov4dtdXN05Y+C5pWw5p2l5Yik5a6ac3R5bGXmmK/lkKbliqDovb0KICAgICAgICAgICAgICAvLyBkYXRhID0gZGF0YS5yZXBsYWNlKC9iYWlkdS5jb20jXCQjL2lnbSwgJycpOwogICAgICAgICAgICAgIGlmIChkYXRhLmluZGV4T2YoImh0dHAiKSAhPT0gMCkgZGF0YSA9ICJkYXRhOnRleHQvY3NzO3V0Zi04LCIgKyBlbmNvZGVVUklDb21wb25lbnQoZGF0YSk7CiAgICAgICAgICAgICAgdmFyIHtyZXMsfSA9IGNoZWNrRG9jbWVudEhhc05vZGUodG9DbGFzc05hbWUpOwogICAgICAgICAgICAgIGlmICghcmVzKSB7CiAgICAgICAgICAgICAgICBsZXQgcGkgPSBkb2N1bWVudC5jcmVhdGVQcm9jZXNzaW5nSW5zdHJ1Y3Rpb24oCiAgICAgICAgICAgICAgICAgICJ4bWwtc3R5bGVzaGVldCIsCiAgICAgICAgICAgICAgICAgIGB0eXBlPSJ0ZXh0L2NzcyIgbXVzdD0iJHttdXN0TG9hZH0iIGNsYXNzPSIke3RvQ2xhc3NOYW1lfSIgaHJlZj0iJHtkYXRhfSJgCiAgICAgICAgICAgICAgICApOyAvLyDms6jmhI/lv4XpobvopoHlj4zlvJXlj7cKICAgICAgICAgICAgICAgIGRvY3VtZW50Lmluc2VydEJlZm9yZShwaSwgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLyogKioqKioqKioqKuWkmumHjeagt+W8jy3lhbzlrrllZGdlICYmIOm7keWknOiEmuacrCoqKioqKioqKioqKiAqLwogICAgICAgICAgICAgIEFDX2FkZFN0eWxlKGRhdGEsIHRvQ2xhc3NOYW1lLCAiaGVhZCIsIGZhbHNlLCAidGV4dC9jc3MiKTsKICAgICAgICAgICAgICAvKiAqKioqKioqKioq5aSa6YeN5qC35byPLeWFvOWuuWVkZ2UgJiYg6buR5aSc6ISa5pysKioqKioqKioqKioqICovCiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAvL+WKoOi9veaZrumAmuagt+W8jwogICAgICAgICAgbG9hZENvbW1vblN0eWxlOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIHRoaXMubG9hZFN0eWxlKENPTlNULnVzZUl0ZW0ubmFtZSArICJDb21tb25TdHlsZSIsIENPTlNULnVzZUl0ZW0ubmFtZSArICJDb21tb25TdHlsZSIpOwogICAgICAgICAgfSwKICAgICAgICAgIGxvYWRCYWlkdUxpdGVTdHlsZTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICBDT05TVC5TdHlsZU1hbmdlci5sb2FkU3R5bGUoImJhaWR1TGl0ZVN0eWxlIiwgImJhaWR1TGl0ZVN0eWxlIiwgbnVsbCwgZmFsc2UsIHRydWUpOwogICAgICAgICAgICBDT05TVC5TdHlsZU1hbmdlci5sb2FkUGxhaW5Ub0NTUygiYmFpZHVMaXRlU3R5bGUiKTsKICAgICAgICAgIH0sCiAgICAgICAgICBsb2FkU3R5bGU6IGFzeW5jIGZ1bmN0aW9uIChzdHlsZU5hbWUsIGluc0NsYXNzTmFtZSwgc2V0VXJsLCB1c2VOb3JtYWxDU1MsIG11c3RMb2FkKSB7CiAgICAgICAgICAgIC8vIOWFqOmDqOmHh+eUqHRleHQvY3Nz55qE5YaF5a655p2l6L295YWlCiAgICAgICAgICAgIC8vIOWmguaenOaYr2RlYnVn5qih5byP44CC5oiW6ICF5pivZ23mqKHlvI8KICAgICAgICAgICAgaWYgKGlzTG9jYWxEZWJ1ZykgewogICAgICAgICAgICAgIGRlYnVnKCLmnKzlnLAt5Yqg6L295qC35byP77yaIiArIGluc0NsYXNzTmFtZSk7CiAgICAgICAgICAgICAgc2V0VXJsID0gc2V0VXJsIHx8ICJodHRwOi8vMTI3LjAuMC4xLyIgKyBzdHlsZU5hbWUgKyAiLmNzcyI7CiAgICAgICAgICAgICAgdGhpcy5pbXBvcnRTdHlsZShzZXRVcmwsICJBQy0iICsgaW5zQ2xhc3NOYW1lLCB1c2VOb3JtYWxDU1MsIG11c3RMb2FkKTsKICAgICAgICAgICAgfSBlbHNlIGlmIChpc05ld0dNID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgLy8g5LuF55So5LqOR3JlYXNlTW9ua2V5NC4wKwogICAgICAgICAgICAgIGRlYnVnKCLnibnmrormqKHlvI8t5Yqg6L295qC35byP77yaIiArIGluc0NsYXNzTmFtZSk7CiAgICAgICAgICAgICAgc2V0VXJsID0gc2V0VXJsIHx8ICJodHRwczovL3N5bmMudHVqaWR1LmNvbS9uZXdjc3MvIiArIHN0eWxlTmFtZSArICIuY3NzIjsKICAgICAgICAgICAgICB0aGlzLmltcG9ydFN0eWxlKHNldFVybCwgIkFDLSIgKyBpbnNDbGFzc05hbWUsIHVzZU5vcm1hbENTUywgbXVzdExvYWQpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIGRlYnVnKCLliqDovb3moLflvI/vvJoiICsgaW5zQ2xhc3NOYW1lKTsKICAgICAgICAgICAgICAvLyBUYW1wZXJNb25rZXkgKyBHcmVhc2VNb25rZXkgPCA0LjAgKyBWaW9sZW50TW9ua2V5ICg0LjBHcmVhc2VNb25rZXnkuI3mlK/mjIFHZXRSZXNvdXJjZeaWueazlSkKICAgICAgICAgICAgICB0aGlzLmltcG9ydFN0eWxlKGF3YWl0IEdNX2dldFJlc291cmNlVGV4dChzdHlsZU5hbWUpLCAiQUMtIiArIGluc0NsYXNzTmFtZSwgdXNlTm9ybWFsQ1NTLCBtdXN0TG9hZCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICAvL+WKoOi9veaKpOecvOaooeW8j+agt+W8jwogICAgICAgICAgbG9hZEh1WWFuU3R5bGU6IGZ1bmN0aW9uIChjb2xvcikgewogICAgICAgICAgICBsZXQgc3R5bGUgPSAiYm9keVtiYWlkdV0sI3dyYXBwZXIgI2hlYWQsI3dyYXBwZXIgI3NfdGFiLGZvcm0uZm0gLnNfaXB0X3dyLmJne2JhY2tncm91bmQtY29sb3I6I2ZmZn0jY29udGFpbmVyICNjb250ZW50X2xlZnQgLnJlc3VsdC1vcCwjY29udGFpbmVyICNjb250ZW50X2xlZnQgLnJlc3VsdCwjY29udGFpbmVyICNycywjY29udGFpbmVyICNjb250ZW50X3JpZ2h0e2JhY2tncm91bmQtY29sb3I6I2FhYTtib3JkZXI6MXB4IGRvdWJsZSAjYTJkN2Q0O2JvcmRlci1yYWRpdXM6MH0jY29udGFpbmVyICNjb250ZW50X2xlZnQgLnJlc3VsdC1vcDpob3ZlciwjY29udGFpbmVyICNjb250ZW50X2xlZnQgLnJlc3VsdDpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNjY2MhaW1wb3J0YW50fSNjb250YWluZXIgI2NvbnRlbnRfbGVmdCAucmVzdWx0LW9wIGgzLCNjb250YWluZXIgI2NvbnRlbnRfbGVmdCAuYy1jb250YWluZXIgaDMsI2NvbnRhaW5lciAjcnMgLnR0e2JhY2tncm91bmQtY29sb3I6I2JiYn0ubmFfY250IC5ud3NfaXRtLC5ud3NfaXRtYiwjYl9jb250ZW50ICNiX3Jlc3VsdHMgbGksYm9keSAjYl9oZWFkZXJ7YmFja2dyb3VuZC1jb2xvcjojYWFhO2JvcmRlcjoxcHggZG91YmxlICNhMmQ3ZDQ7Ym9yZGVyLXJhZGl1czowfSNiX2NvbnRlbnQgI2JfcmVzdWx0cyBsaTpob3ZlcntiYWNrZ3JvdW5kLWNvbG9yOiNjY2MhaW1wb3J0YW50fSNiX2NvbnRlbnQgI2JfcmVzdWx0cyBsaSBoMntiYWNrZ3JvdW5kLWNvbG9yOiNiYmJ9I3JzbyAuZywuYmtXTWdkPi5nLC5ia1dNZ2QgZy1pbm5lci1jYXJkLCNyaHNjb2wgI3JocywjcmhzY29sICNyaHMgLmc+ZGl2LC5jMnh6VGIgLmcsLnJ1VGNJZCAuZywuZm0wNklmIC5nLC5jVW5RS2UgLmcsLkhhblFtZiAuZ3tiYWNrZ3JvdW5kLWNvbG9yOiNhYWE7Ym9yZGVyOjFweCBkb3VibGUgI2EyZDdkNDtib3JkZXItcmFkaXVzOjB9I3JzbyAuZzpob3ZlciwuYmtXTWdkPi5nOmhvdmVye2JhY2tncm91bmQtY29sb3I6I2NjYyFpbXBvcnRhbnR9LmJrV01nZCAuZyBkaXYuciwjcnNvIC5nIGgze2JhY2tncm91bmQtY29sb3I6I2JiYn0iOwogICAgICAgICAgICBpZiAoQUNDb25maWcuaXNVc2VyQ29sb3JFbmFibGUpIHsKICAgICAgICAgICAgICBjb2xvciA9IGNvbG9yIHx8IEFDQ29uZmlnLmRlZmF1bHRIdVlhbkNvbG9yIHx8ICIjRkZGRkZGIjsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBjb2xvciA9IGNvbG9yIHx8ICIjRkZGRkZGIjsKICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoY29sb3IuaW5kZXhPZigiIyIpICE9PSAwIHx8IGNvbG9yLmxlbmd0aCA8IDcpIHJldHVybjsKICAgICAgICAgICAgaWYgKGlzTmV3R00gPT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgc3R5bGUgPSBHTV9nZXRSZXNvdXJjZVRleHQoIk1haW5IdVlhblN0eWxlIik7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgc3R5bGUgPSBzdHlsZQogICAgICAgICAgICAucmVwbGFjZSgvI2FhYShhKikvaWdtLCBjb2xvcikKICAgICAgICAgICAgLnJlcGxhY2UoLyNiYmIoYiopL2lnbSwgdGhpcy5MaWdodGVyKGNvbG9yLCAtNDApKQogICAgICAgICAgICAucmVwbGFjZSgvI2NjYyhjKikvaWdtLCB0aGlzLkxpZ2h0ZXIoY29sb3IsIDQ1KSk7CiAgICAgICAgICAgIEFDX2FkZFN0eWxlKHN0eWxlLCAiQUMtIiArIENPTlNULnVzZUl0ZW0ubmFtZSArICJIdVlhblN0eWxlIiArIChpc05ld0dNID8gIiIgOiAiLUZpbGUiKSwgImhlYWQiLCB0cnVlKTsgLy8g6ZyA6KaB5L+u5pS555qE77yM5omA5Lul5Li6dHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIGNsaXAyNTU6IGZ1bmN0aW9uICh2YWx1ZSkgewogICAgICAgICAgICBpZiAodmFsdWUgPiAyNTUpIHJldHVybiAyNTU7CiAgICAgICAgICAgIGlmICh2YWx1ZSA8IDApIHJldHVybiAwOwogICAgICAgICAgICByZXR1cm4gdmFsdWU7CiAgICAgICAgICB9LAogICAgICAgICAgTGlnaHRlcjogZnVuY3Rpb24gKG9yaVJHQiwgZGVsdGFZKSB7CiAgICAgICAgICAgIC8vIOaMieavlOS+i+e8qeaUviArIDEvZGVsdGFZCiAgICAgICAgICAgIC8vIEhFWCAyIFJHQgogICAgICAgICAgICBsZXQgcmdiID0gb3JpUkdCLnJlcGxhY2UoIiMiLCAiIik7CiAgICAgICAgICAgIGxldCBSID0gcGFyc2VJbnQoIjB4IiArIHJnYi5zdWJzdHIoMCwgMikpOwogICAgICAgICAgICBsZXQgRyA9IHBhcnNlSW50KCIweCIgKyByZ2Iuc3Vic3RyKDIsIDIpKTsKICAgICAgICAgICAgbGV0IEIgPSBwYXJzZUludCgiMHgiICsgcmdiLnN1YnN0cig0LCAyKSk7CiAgICAgICAgICAgIC8vIFJHQiAyIFlVVgogICAgICAgICAgICBsZXQgWSA9ICgoNjYgKiBSICsgMTI5ICogRyArIDI1ICogQiArIDEyOCkgPj4gOCkgKyAxNjsKICAgICAgICAgICAgbGV0IFUgPSAoKC0zOCAqIFIgLSA3NCAqIEcgKyAxMTIgKiBCICsgMTI4KSA+PiA4KSArIDEyODsKICAgICAgICAgICAgbGV0IFYgPSAoKDExMiAqIFIgLSA5NCAqIEcgLSAxOCAqIEIgKyAxMjgpID4+IDgpICsgMTI4OwogICAgICAgICAgICBZID0gWSAqICgxICsgMS4wIC8gZGVsdGFZKTsvLyDmj5Dpq5jkuq7luqYKICAgICAgICAgICAgLy8gWVVWIDIgUkdCCiAgICAgICAgICAgIFIgPSB0aGlzLmNsaXAyNTUoKDI5OCAqIChZIC0gMTYpICsgNDA5ICogKFYgLSAxMjgpICsgMTI4KSA+PiA4KTsKICAgICAgICAgICAgRyA9IHRoaXMuY2xpcDI1NSgoMjk4ICogKFkgLSAxNikgLSAxMDAgKiAoVSAtIDEyOCkgLSAyMDggKiAoViAtIDEyOCkgKyAxMjgpID4+IDgpOwogICAgICAgICAgICBCID0gdGhpcy5jbGlwMjU1KCgyOTggKiAoWSAtIDE2KSArIDUxNiAqIChVIC0gMTI4KSArIDEyOCkgPj4gOCk7CiAgICAgICAgICAgIHJldHVybiAiIyIgKyAoKFIgPDwgMTYpICsgKEcgPDwgOCkgKyBCKS50b1N0cmluZygxNik7CiAgICAgICAgICB9LAogICAgICAgICAgLy/liqDovb3ljZXpobXmoLflvI8KICAgICAgICAgIGxvYWRPbmVQYWdlU3R5bGU6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgdGhpcy5sb2FkU3R5bGUoQ09OU1QudXNlSXRlbS5uYW1lICsgIk9uZVBhZ2VTdHlsZSIsIENPTlNULnVzZUl0ZW0ubmFtZSArICJPbmVQYWdlU3R5bGUiKTsKICAgICAgICAgIH0sCiAgICAgICAgICAvL+WKoOi9veWPjOmhteagt+W8jwogICAgICAgICAgbG9hZFR3b1BhZ2VTdHlsZTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICB0aGlzLmxvYWRTdHlsZShDT05TVC51c2VJdGVtLm5hbWUgKyAiVHdvUGFnZVN0eWxlIiwgQ09OU1QudXNlSXRlbS5uYW1lICsgIlR3b1BhZ2VTdHlsZSIpOwogICAgICAgICAgICBsZXQgY3NzSGVhZCA9ICIiOwogICAgICAgICAgICBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5CQUlEVSB8fCBjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLk1CQUlEVSkgY3NzSGVhZCA9ICIjY29udGFpbmVyICNjb250ZW50X2xlZnQsIGJvZHlbbmV3c10gI2NvbnRhaW5lciAjY29udGVudF9sZWZ0PmRpdjpub3QoW2NsYXNzXSk6bm90KFtpZF0pIjsKICAgICAgICAgICAgaWYgKGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuR09PR0xFKSBDT05TVC5pc0dvb2dsZVNwZWNpYWwgPyBjc3NIZWFkID0gIi5zcmcsICNyc28iIDogY3NzSGVhZCA9ICIuc3JnLCAjcnNvPmRpdjpub3QoLmcpIjsKICAgICAgICAgICAgaWYgKGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuQklORykgY3NzSGVhZCA9ICIjYl9jb250ZW50ICNiX3Jlc3VsdHMiOwogICAgICAgICAgICBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5TT0dPVSkgY3NzSGVhZCA9ICIjbWFpbiAucmVzdWx0cyI7CiAgICAgICAgICAgIGlmIChjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLkRVQ0spIGNzc0hlYWQgPSAiI2xpbmtzX3dyYXBwZXIgLnJlc3VsdHMtLW1haW4gI2xpbmtzIjsKICAgICAgICAgICAgaWYgKGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuRE9HRSkgY3NzSGVhZCA9ICIjbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tbWFpbiAjbGlua3MiOwogICAgICAgICAgICBBQ19hZGRTdHlsZShjc3NIZWFkICsgIntncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgyLCBtaW5tYXgoNTAlLDFmcikpO2dyaWQtdGVtcGxhdGUtYXJlYXM6J3htYWluIHhtYWluJztncmlkLWNvbHVtbi1nYXA6IDFweDt9LkFDLnNwLXNlcGFyYXRvcntncmlkLWNvbHVtbi1zdGFydDogMTtncmlkLWNvbHVtbi1lbmQ6IHhtYWluLWVuZDt9IiwKICAgICAgICAgICAgICAiQUMtVHdvUGFnZUV4U3R5bGUiLCAiaGVhZCIpOwogICAgICAgICAgfSwKICAgICAgICAgIC8vIOWKoOi9veS4ieWIl+agt+W8jwogICAgICAgICAgbG9hZFRocmVlUGFnZVN0eWxlOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGxldCBjc3NIZWFkID0gIiI7CiAgICAgICAgICAgIGlmIChjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLkJBSURVIHx8IGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuTUJBSURVKSBjc3NIZWFkID0gIiNjb250YWluZXIgI2NvbnRlbnRfbGVmdCwgYm9keVtuZXdzXSAjY29udGFpbmVyICNjb250ZW50X2xlZnQ+ZGl2Om5vdChbY2xhc3NdKTpub3QoW2lkXSkiOwogICAgICAgICAgICBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5HT09HTEUpIENPTlNULmlzR29vZ2xlU3BlY2lhbCA/IGNzc0hlYWQgPSAiLnNyZywgI3JzbyIgOiBjc3NIZWFkID0gIi5zcmcsICNyc28+ZGl2Om5vdCguZykiOwogICAgICAgICAgICBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5CSU5HKSBjc3NIZWFkID0gIiNiX2NvbnRlbnQgI2JfcmVzdWx0cyI7CiAgICAgICAgICAgIGlmIChjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLlNPR09VKSBjc3NIZWFkID0gIiNtYWluIC5yZXN1bHRzIjsKICAgICAgICAgICAgaWYgKGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuRFVDSykgY3NzSGVhZCA9ICIjbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tbWFpbiAjbGlua3MiOwogICAgICAgICAgICBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5ET0dFKSBjc3NIZWFkID0gIiNsaW5rc193cmFwcGVyIC5yZXN1bHRzLS1tYWluICNsaW5rcyI7CiAgICAgICAgICAgIEFDX2FkZFN0eWxlKGNzc0hlYWQgKyAie2dyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDMsIG1pbm1heCgzMy4zJSwxZnIpKTtncmlkLXRlbXBsYXRlLWFyZWFzOid4bWFpbiB4bWFpbiB4bWFpbic7Z3JpZC1jb2x1bW4tZ2FwOiAxMHB4O30iLAogICAgICAgICAgICAgICJBQy1UaHJlZVBhZ2VFeFN0eWxlIiwgImhlYWQiKTsKICAgICAgICAgIH0sCiAgICAgICAgICAvLyDliqDovb3lm5vliJfmoLflvI8KICAgICAgICAgIGxvYWRGb3VyUGFnZVN0eWxlOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGxldCBjc3NIZWFkID0gIiI7CiAgICAgICAgICAgIGlmIChjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLkJBSURVIHx8IGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuTUJBSURVKSBjc3NIZWFkID0gIiNjb250YWluZXIgI2NvbnRlbnRfbGVmdCwgYm9keVtuZXdzXSAjY29udGFpbmVyICNjb250ZW50X2xlZnQ+ZGl2Om5vdChbY2xhc3NdKTpub3QoW2lkXSkiOwogICAgICAgICAgICBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5HT09HTEUpIENPTlNULmlzR29vZ2xlU3BlY2lhbCA/IGNzc0hlYWQgPSAiLnNyZywgI3JzbyIgOiBjc3NIZWFkID0gIi5zcmcsICNyc28+ZGl2Om5vdCguZykiOwogICAgICAgICAgICBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5CSU5HKSBjc3NIZWFkID0gIiNiX2NvbnRlbnQgI2JfcmVzdWx0cyI7CiAgICAgICAgICAgIGlmIChjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLlNPR09VKSBjc3NIZWFkID0gIiNtYWluIC5yZXN1bHRzIjsKICAgICAgICAgICAgaWYgKGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuRE9HRSkgY3NzSGVhZCA9ICIjbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tbWFpbiAjbGlua3MiOwogICAgICAgICAgICBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEID09PSBTaXRlVHlwZS5ET0dFKSBjc3NIZWFkID0gIiNsaW5rc193cmFwcGVyIC5yZXN1bHRzLS1tYWluICNsaW5rcyI7CiAgICAgICAgICAgIEFDX2FkZFN0eWxlKGNzc0hlYWQgKyAie2dyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDQsIG1pbm1heCgyNSUsMWZyKSk7Z3JpZC10ZW1wbGF0ZS1hcmVhczoneG1haW4geG1haW4geG1haW4geG1haW4nO2dyaWQtY29sdW1uLWdhcDogMXB4O30iLAogICAgICAgICAgICAgICJBQy1Gb3VyUGFnZUV4U3R5bGUiLCAiaGVhZCIpOwogICAgICAgICAgfSwKICAgICAgICAgIGxvYWRQbGFpblRvQ1NTOiBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgZG9jdW1lbnQuY2hpbGROb2Rlcy5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgIGxldCBjdXJOb2RlID0gZG9jdW1lbnQuY2hpbGROb2Rlc1tpXTsKICAgICAgICAgICAgICBpZiAoY3VyTm9kZS5kZWwpIGN1ck5vZGUucmVtb3ZlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgc2FmZVJlbW92ZSgic3R5bGVbY2xhc3MqPSdBQyddW2RlbD0nMSddIik7CiAgICAgICAgICB9LAogICAgICAgICAgLy8g56aB5q2i54us56uL55qE5qC35byP5Yqg6L29CiAgICAgICAgICBsb2FkQ1NTVG9QbGFpbjogZnVuY3Rpb24gKCkgewogICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGRvY3VtZW50LmNoaWxkTm9kZXMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICBsZXQgY3VyTm9kZSA9IGRvY3VtZW50LmNoaWxkTm9kZXNbaV07CiAgICAgICAgICAgICAgLy8g5aaC5p6c5piv5a2Y5ZyoY3Nz77yMIOS4lOmdnuW/hemhu+aVsOaNrgogICAgICAgICAgICAgIGlmIChjdXJOb2RlLnRhcmdldCA9PT0gInhtbC1zdHlsZXNoZWV0IiAmJiBjdXJOb2RlLmRhdGEuaW5kZXhPZigibXVzdD1cInRydWUiKSA8IDApIHsKICAgICAgICAgICAgICAgIGN1ck5vZGUuZGF0YSA9ICIiOwogICAgICAgICAgICAgICAgY3VyTm9kZS5kZWwgPSB0cnVlOwoKICAgICAgICAgICAgICAgIC8vIOWvueS6jmVkZ2XlkoxzYWZhcmnpg73nibnmrorlpITnkIbkuIDkuIvlkKcKICAgICAgICAgICAgICAgIGlmIChuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkuaW5kZXhPZigiZWRnZSIpID4gMCB8fCBuYXZpZ2F0b3IudXNlckFnZW50LnRvTG93ZXJDYXNlKCkuaW5kZXhPZigic2FmYXJpIikgPiAwKSB7CiAgICAgICAgICAgICAgICAgIGN1ck5vZGUucmVtb3ZlKCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgaW5pdCgpIHsKICAgICAgICAgICAgQ29udHJvbE1hbmFnZXIuaW5pdCgpOwogICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgdmFyIENvbnRyb2xNYW5hZ2VyID0gewogICAgICAgICAgLy/lsYXkuK3mmL7npLogLS0tIOW/hemhu+aYr+eZvuW6puWSjOiwt+atjOeahOaQnOe0oue7k+aenOmhtemdou+8jOWFtuS7lumhtemdouS4jeiDveWKoOi9veeahC0t5bey57uP6YCa6L+H6ISa5pysaW5jbHVkZeagh+etvumZkOWItuS6huS4gOmDqOWIhgogICAgICAgICAgY2VudGVyRGlzcGxheTogZnVuY3Rpb24gKCkgewogICAgICAgICAgICAvLyDlpoLmnpzmmK/nmb7luqYgJiYgKCjlnLDlnYDmm7/mjaItPuWMheWQq3dk5YWz6ZSu6K+NW+abv+aNouS5i+WQjuS4jeetiS3mmK/nmb7luqbnu5PmnpzpobXpnaJdKSB8fCDmnInlj7PovrnmoI8t6IKv5a6a5piv55m+5bqm5pCc57Si57uT5p6c6aG1IHx8IHZhbHVl5Lit5a2Y5Zyo5pCc57Si5YaF5a65KSByZXR1cm47CiAgICAgICAgICAgIGlmICghY2hlY2tJU0JhaWR1TWFpbigpKSB7CiAgICAgICAgICAgICAgQ09OU1QuU3R5bGVNYW5nZXIubG9hZENTU1RvUGxhaW4oKTsKICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgQUNfYWRkU3R5bGUoIi5taW5pZGl2ICNsb2dvIGltZ3t3aWR0aDogMTAwcHg7aGVpZ2h0OiB1bnNldDttYXJnaW4tdG9wOiAwLjNyZW07fSIsICJBQy1zdHlsZS1sb2dvIiwgImhlYWQiKTsKICAgICAgICAgICAgbGV0IHJlc3VsdCA9IHBhcnNlSW50KENPTlNULnVzZUl0ZW0uQWRzU3R5bGVNb2RlIHx8IC0xKTsKICAgICAgICAgICAgaWYgKGFjQ3NzTG9hZEZsYWcgPT09IGZhbHNlICYmIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIi5BQ0V4dGVuc2lvbiIpID09PSBudWxsKSB7CiAgICAgICAgICAgICAgZGVidWcoImlu5qC35byP5Y2z5bCG5Yqg6L29OiIgKyByZXN1bHQpOwogICAgICAgICAgICAgIGxldCBleHBhbmRTdHlsZSA9ICIjd3JhcHBlciAjcnMsICN3cmFwcGVyICNjb250ZW50X2xlZnQgLnJlc3VsdCwgI3dyYXBwZXIgI2NvbnRlbnRfbGVmdCAuYy1jb250YWluZXJ7bWluLXdpZHRoOjY3MHB4O30uYy1zcGFuMTh7d2lkdGg6NzglIWltcG9ydGFudDttaW4td2lkdGg6NTUwcHg7fS5jLXNwYW4yNHt3aWR0aDogYXV0byFpbXBvcnRhbnQ7fSI7CiAgICAgICAgICAgICAgaWYgKHJlc3VsdCA9PT0gMSkgewogICAgICAgICAgICAgICAgQUNfYWRkU3R5bGUoZXhwYW5kU3R5bGUsICJBQy1TdHlsZS1leHBhbmQiLCAiaGVhZCIpOwogICAgICAgICAgICAgICAgQ09OU1QuU3R5bGVNYW5nZXIubG9hZENvbW1vblN0eWxlKCk7CiAgICAgICAgICAgICAgfSBlbHNlIGlmIChyZXN1bHQgPT09IDIpIHsvL+WNlemhteWxheS4rQogICAgICAgICAgICAgICAgQUNfYWRkU3R5bGUoZXhwYW5kU3R5bGUsICJBQy1TdHlsZS1leHBhbmQiLCAiaGVhZCIpOwogICAgICAgICAgICAgICAgQ09OU1QuU3R5bGVNYW5nZXIubG9hZENvbW1vblN0eWxlKCk7CiAgICAgICAgICAgICAgICBDT05TVC5TdHlsZU1hbmdlci5sb2FkT25lUGFnZVN0eWxlKCk7CiAgICAgICAgICAgICAgfSBlbHNlIGlmIChyZXN1bHQgPT09IDMpIHsgLy/lj4zpobXlsYXkuK0KICAgICAgICAgICAgICAgIENPTlNULlN0eWxlTWFuZ2VyLmxvYWRDb21tb25TdHlsZSgpOwogICAgICAgICAgICAgICAgQ09OU1QuU3R5bGVNYW5nZXIubG9hZFR3b1BhZ2VTdHlsZSgpOwogICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzdWx0ID09PSA0KSB7IC8vIOS4ieWIlwogICAgICAgICAgICAgICAgQ09OU1QuU3R5bGVNYW5nZXIubG9hZENvbW1vblN0eWxlKCk7CiAgICAgICAgICAgICAgICBDT05TVC5TdHlsZU1hbmdlci5sb2FkVHdvUGFnZVN0eWxlKCk7CiAgICAgICAgICAgICAgICBDT05TVC5TdHlsZU1hbmdlci5sb2FkVGhyZWVQYWdlU3R5bGUoKTsKICAgICAgICAgICAgICB9IGVsc2UgaWYgKHJlc3VsdCA9PT0gNSkgeyAvLyDlm5vliJcKICAgICAgICAgICAgICAgIENPTlNULlN0eWxlTWFuZ2VyLmxvYWRDb21tb25TdHlsZSgpOwogICAgICAgICAgICAgICAgQ09OU1QuU3R5bGVNYW5nZXIubG9hZFR3b1BhZ2VTdHlsZSgpOwogICAgICAgICAgICAgICAgQ09OU1QuU3R5bGVNYW5nZXIubG9hZEZvdXJQYWdlU3R5bGUoKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgYWNDc3NMb2FkRmxhZyA9IHRydWU7CiAgICAgICAgICAgICAgZGVidWcoImlu5qC35byP6L+Q6KGM57uT5p2fIik7CiAgICAgICAgICAgICAgaWYgKGN1clNpdGUuU2l0ZVR5cGVJRCA9PT0gU2l0ZVR5cGUuQkFJRFUgJiYgQUNDb25maWcuU3R5bGVfQmFpZHVMaXRlID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICBBQ19hZGRTdHlsZShHTV9nZXRSZXNvdXJjZVRleHQoImJhaWR1TGl0ZVN0eWxlIiksICJBQy1iYWlkdUxpdGVTdHlsZSIsICJoZWFkIikKICAgICAgICAgICAgICAgIENPTlNULlN0eWxlTWFuZ2VyLmxvYWRCYWlkdUxpdGVTdHlsZSgpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICBpZiAoY3VyU2l0ZS5TaXRlVHlwZUlEICE9PSBTaXRlVHlwZS5CQUlEVSAmJiBjdXJTaXRlLlNpdGVUeXBlSUQgIT09IFNpdGVUeXBlLkJBSURVX1hVRVNIVSAmJiBjdXJTaXRlLlNpdGVUeXBlSUQgIT09IFNpdGVUeXBlLkdPT0dMRSAmJiBjdXJTaXRlLlNpdGVUeXBlSUQgIT09IFNpdGVUeXBlLkJJTkcgJiYgY3VyU2l0ZS5TaXRlVHlwZUlEICE9PSBTaXRlVHlwZS5TT0dPVSAmJiBjdXJTaXRlLlNpdGVUeXBlSUQgIT09IFNpdGVUeXBlLkRVQ0sgJiYgY3VyU2l0ZS5TaXRlVHlwZUlEICE9PSBTaXRlVHlwZS5ET0dFKSByZXR1cm47CgogICAgICAgICAgICAvLyDlpoLmnpzmmK/osLfmrYwgJiYgKOWcsOWdgOabv+aNoi0+5piv6LC35q2M5Zu+5YOP6aG16Z2iIHx8IOaYr+WcsOWbvumhtemdoilb5pu/5o2i6KaB5Y+YXSByZXR1cm47CiAgICAgICAgICAgIGlmIChjdXJTaXRlLlNpdGVUeXBlSUQgPT09IFNpdGVUeXBlLkdPT0dMRSAmJiBsb2NhdGlvbi5ocmVmLnJlcGxhY2UoL3RibT0oaXNjaHxsY2x8c2hvcHxmbG0pLywgIiIpICE9PSBsb2NhdGlvbi5ocmVmKSB7CiAgICAgICAgICAgICAgQ09OU1QuU3R5bGVNYW5nZXIubG9hZENTU1RvUGxhaW4oKTsKICAgICAgICAgICAgICByZXR1cm47CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLyoq5oqk55y8U3R5bGXmnIDlkI7ovb3lhaUqKi8KICAgICAgICAgICAgaWYgKENPTlNULnVzZUl0ZW0uSHVZYW5Nb2RlID09PSB0cnVlIHx8IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoInN0eWxlW2NsYXNzKj0nZGFya3JlYWRlciddIikgIT0gbnVsbCkgQ09OU1QuU3R5bGVNYW5nZXIubG9hZEh1WWFuU3R5bGUoKTsKCiAgICAgICAgICAgIENPTlNULlN0eWxlTWFuZ2VyLmxvYWRQbGFpblRvQ1NTKCk7CiAgICAgICAgICB9LAogICAgICAgICAgaW5pdDogZnVuY3Rpb24gKCkgewogICAgICAgICAgICBpZiAoQ09OU1QuaXNHb29nbGVJbWFnZVVybCkgcmV0dXJuOwogICAgICAgICAgICB0aGlzLmNlbnRlckRpc3BsYXkoKTsKICAgICAgICAgIH0KICAgICAgICB9OwogICAgICAgIC8vIGRlYnVnKCLosIPnlKjliqDovb3oh6rlrprkuYljc3MiKTsKICAgICAgICBDb250cm9sTWFuYWdlci5pbml0KCk7CiAgICAgICAgcmV0dXJuIENPTlNULlN0eWxlTWFuZ2VyOwogICAgICB9CiAgICB9CiAgfSkoKTsKfSgpOwo=","resources":[{"meta":{"name":"baiduCommonStyle.css","url":"http://ibaidu.tujidu.com/newcss/baiduCommonStyle.css?t=24.26","ts":1635731540134,"mimetype":"text/css"},"source":""},{"meta":{"name":"baiduOnePageStyle.css","url":"http://ibaidu.tujidu.com/newcss/baiduOnePageStyle.css?t=24.26","ts":1635731540134,"mimetype":"text/css"},"source":"LyoqU3RvcmUgQmFpZHVPbmVQYWdlU3R5bGUqKi8NCiN3cmFwcGVyX3dyYXBwZXIgI2NvbnRhaW5lcnsNCiAgICB3aWR0aDogMTAwJTsNCiAgICBtYXJnaW4tbGVmdDogdW5zZXQ7DQp9DQpmb3JtLmZtew0KICAgIHBvc2l0aW9uOnJlbGF0aXZlOw0KICAgIGJhY2tncm91bmQtY29sb3I6IHVuc2V0Ow0KfQ0KYm9keVtiYWlkdV0gLnBhZ2Vmb290Lmdqew0KICAgIG1hcmdpbi10b3A6IDEwMHB4Ow0KfQ0KLndyYXBwZXJfbmV3IC5oZWFkX3dyYXBwZXIgI3Jlc3VsdF9sb2dvew0KICAgIG1hcmdpbi1sZWZ0OiAtMTUwcHg7DQogICAgcG9zaXRpb246IHJlbGF0aXZlOw0KfQ0KI3NfdGFiIGIsI3NfdGFiIGF7DQogICAgcG9zaXRpb246cmVsYXRpdmU7DQp9DQojd3JhcHBlciAgLmhlYWRfbnVtc19jb250X291dGVyew0KICAgIHBvc2l0aW9uOmFic29sdXRlOw0KICAgIGxlZnQ6IDIwJTsNCiAgICB3aWR0aDogNjAlOw0KfQ0KI3dyYXBwZXIgICNjb250ZW50X2xlZnQsI3dyYXBwZXIgI2NvbnRhaW5lci5zYW1fbmV3Z3JpZCAjcnMsICN3cmFwcGVyICNwYWdlew0KICAgIHRvcDogMzVweDsNCiAgICBwb3NpdGlvbjpyZWxhdGl2ZTsNCiAgICBwYWRkaW5nLWxlZnQ6IDBweDsNCiAgICB3aWR0aDogNDAlICFpbXBvcnRhbnQ7DQogICAgbWluLXdpZHRoOiA2NzBweDsNCiAgICBmbG9hdDp1bnNldDsNCiAgICBtYXJnaW4tbGVmdDogdW5zZXQ7DQogICAgbWFyZ2luOiAwIGF1dG87DQp9DQoNCiN3cmFwcGVyICNwYWdlew0KICAgIGJhY2tncm91bmQ6IHVuc2V0Ow0KfQ0KI3dyYXBwZXIgI3JzIHRoew0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCiN3cmFwcGVyICNyc3sNCiAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgbWFyZ2luOiAzMHB4IGF1dG8gLTIwcHggYXV0bzsNCn0NCiN3cmFwcGVyICAjY29udGVudF9sZWZ0IC5jLWNvbnRhaW5lcnsNCiAgICB3aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KICAgIG1pbi13aWR0aDo2NTBweDsNCn0NCkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkgew0KICAgICN3cmFwcGVyICAjY29udGVudF9sZWZ0LCAjd3JhcHBlciAgI3Jzew0KICAgICAgICBtaW4td2lkdGg6ODAwcHg7DQogICAgfQ0KfQ0KI3dyYXBwZXIgI2NvbnRhaW5lci5zYW1fbmV3Z3JpZCAjY29udGVudF9sZWZ0ew0KICAgIHBhZGRpbmctbGVmdDogMjBweDsNCiAgICBkaXNwbGF5OiBibG9jazsNCn0NCiN3cmFwcGVyICNjb250ZW50X3JpZ2h0ew0KICAgIGZsb2F0OiB1bnNldDsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQp9DQpib2R5LnNob3dSaWdodCAjd3JhcHBlciAjY29udGFpbmVyLnNhbV9uZXdncmlkICNjb250ZW50X2xlZnR7DQogICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKGNhbGMoNnZ3IC0gMjUxcHgpKTsNCn0NCmJvZHkuc2hvd1JpZ2h0ICN3cmFwcGVyICNjb250ZW50X3JpZ2h0ew0KICAgIHJpZ2h0OiBjYWxjKDM3LjV2dyAtIDQ3MHB4KTsNCn0NCkBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6IDEyODBweCl7DQogICAgYm9keS5zaG93UmlnaHQgI3dyYXBwZXIgI2NvbnRhaW5lci5zYW1fbmV3Z3JpZCAjY29udGVudF9sZWZ0ew0KICAgICAgICB0cmFuc2Zvcm06IHVuc2V0Ow0KICAgIH0NCiAgICBib2R5LnNob3dSaWdodCAjd3JhcHBlciAjY29udGVudF9yaWdodHsNCiAgICAgICAgZGlzcGxheTogbm9uZTsNCiAgICB9DQp9DQojd3JhcHBlciAjcGFnZSBhLCAjd3JhcHBlciAjcGFnZSBzdHJvbmd7DQogICAgbWFyZ2luLXJpZ2h0OiAyMnB4ICFpbXBvcnRhbnQ7DQp9DQojd3JhcHBlciAjcGFnZSAucGFnZS1pbm5lcnsNCiAgICBwYWRkaW5nLWxlZnQ6IDIycHg7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCn0NCi5zX3RhYl9pbm5lcnsNCiAgICBkaXNwbGF5OmJsb2NrICFpbXBvcnRhbnQ7DQp9DQojY29udGFpbmVyIC5oaW50X2NvbW1vbl9yZXN0b3B7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIGxlZnQ6IGNhbGMoNDV2dyAtIDUwMHB4KTsNCiAgICBtYXJnaW4tdG9wOiAyNXB4Ow0KfQ0KLkFDLnNwLXNlcGFyYXRvcnsNCiAgICB3aWR0aDogYXV0bzsNCn0NCi8qc2VhcmNoIGVuZ2luZSBqdW1wKi8NCiNzZWotY29udGFpbmVyew0KICAgIHBhZGRpbmctbGVmdDogMDsNCiAgICBtYXJnaW4tbGVmdDogMDsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQouc19mb3JtX3dyYXBwZXIgew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQp9DQojd3JhcHBlciAjc190YWJ7DQogICAgcGFkZGluZy1sZWZ0OiAwOw0KICAgIG1hcmdpbi1sZWZ0OiAwOw0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQp9DQojd3JhcHBlciAjY29udGFpbmVyIC5oZWFkX251bXNfY29udF9vdXRlciAuc2VhcmNoX3Rvb2xfY29udGVyLA0KI3dyYXBwZXIgI2NvbnRhaW5lciAuaGVhZF9udW1zX2NvbnRfb3V0ZXIgLm51bXMgew0KICAgIHdpZHRoOiA2OSU7DQogICAgbWFyZ2luLWxlZnQ6IDE2JTsNCn0NCmZvcm0uZm0gLnNfaXB0X3dyLmJnew0KICAgIG1pbi13aWR0aDogY2FsYygzNy41dncgLSAxNTBweCk7DQp9DQoNCi5yZXN1bHQtbW9sZWN1bGUubmV3LXBtZCB7DQogICAgbWFyZ2luOiAwIGF1dG87DQogICAgbWluLXdpZHRoOiA4MDBweDsNCiAgICB3aWR0aDogNDAlICFpbXBvcnRhbnQ7DQogICAgbWFyZ2luLXRvcDogNjBweDsNCiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7DQp9DQoNCi5uZXctcG1kICNyc19uZXcgew0KICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyMHB4KTsNCiAgICBwYWRkaW5nOiAxMHB4IDAgMTBweCAyMHB4Ow0KfQ0KDQoubmV3LXBtZCAjcnNfbmV3IHRhYmxlew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIG1hcmdpbi10b3A6IDEycHg7DQp9DQoNCkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE5MjFweCkgew0KICAgICNoZWFkIC5oZWFkX3dyYXBwZXJ7DQogICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlM2QoMTQwcHgsMCwxcHgpOw0KICAgIH0NCiAgICAud3JhcHBlcl9uZXcgI3NfdGFiLnNfdGFiIC5zX3RhYl9pbm5lciB7DQogICAgICAgIHdpZHRoOiA5MDBweDsNCiAgICAgICAgcGFkZGluZy1sZWZ0OiAyOTZweDsNCiAgICB9DQogICAgZm9ybS5mbSAuc19pcHRfd3IuYmd7DQogICAgICAgIG1pbi13aWR0aDogY2FsYygzNy41dncgLSAxNTBweCk7DQogICAgfQ0KICAgIC5oZWFkX3dyYXBwZXIgI3Ugew0KICAgICAgICByaWdodDogMjAwcHg7DQogICAgfQ0KfQ0KQG1lZGlhIHNjcmVlbiBhbmQgKG1pbi13aWR0aDogMTM2NnB4KSBhbmQgKG1heC13aWR0aDogMTkyMHB4KSB7DQogICAgLndyYXBwZXJfbmV3IC5oZWFkX3dyYXBwZXIgI3Jlc3VsdF9sb2dvew0KICAgICAgICBtYXJnaW4tbGVmdDogMHB4Ow0KICAgIH0NCn0="},{"meta":{"name":"baiduTwoPageStyle.css","url":"http://ibaidu.tujidu.com/newcss/baiduTwoPageStyle.css?t=24.26","ts":1635731540135,"mimetype":"text/css"},"source":"LyoqU3RvcmUgQmFpZHVUb3dQYWdlU3R5bGUqKi8NCiN3cmFwcGVyX3dyYXBwZXIgI2NvbnRhaW5lciB7DQogICAgd2lkdGg6IGF1dG87DQp9DQpmb3JtLmZtew0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB1bnNldDsNCn0NCiNzX3RhYiBiLCAjc190YWIgYSB7DQogICAgcG9zaXRpb246IHJlbGF0aXZlOw0KfQ0KI3dyYXBwZXIgI3NfdGFiew0KICAgIHBhZGRpbmctbGVmdDogMDsNCiAgICBtYXJnaW4tbGVmdDogMDsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KfQ0KI3dyYXBwZXIgLmhlYWRfbnVtc19jb250X291dGVyIC5zZWFyY2hfdG9vbF9jb250ZXIsDQojd3JhcHBlciAuaGVhZF9udW1zX2NvbnRfb3V0ZXIgLm51bXMgew0KICAgIHdpZHRoOiA4MCU7DQogICAgbWFyZ2luLWxlZnQ6IDEwJTsNCn0NCiN3cmFwcGVyICAuaGVhZF9udW1zX2NvbnRfb3V0ZXIsDQouaGludF9jb21tb25fcmVzdG9wLA0KI2hlYWRlcl90b3BfYmFyIHsNCiAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgbGVmdDogMTAlOw0KICAgIHdpZHRoOiA4MCU7DQp9DQojd3JhcHBlciAjaGVhZGVyX3RvcF9iYXJ7DQogICAgbWFyZ2luLWJvdHRvbTogMHB4Ow0KfQ0KYm9keSAjY29udGFpbmVyLnNhbV9uZXdncmlkICNjb250ZW50X2xlZnR7DQogICAgd2lkdGg6IDgwJTsNCn0NCiN3cmFwcGVyICNjb250ZW50X2xlZnR7DQogICAgZGlzcGxheTogaW5saW5lLWdyaWQ7DQogICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA1MCUgNTAlOw0KICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6ICJ4bWFpbiB4bWFpbiI7DQogICAgbWFyZ2luOiAwIGF1dG87DQogICAgcG9zaXRpb246IHJlbGF0aXZlOw0KICAgIHBhZGRpbmctbGVmdDogNSU7DQogICAgZmxvYXQ6IHVuc2V0Ow0KICAgIHdpZHRoOiA4MCU7DQogICAgbWFyZ2luLWxlZnQ6NyU7DQogICAgbWFyZ2luLWJvdHRvbTogMzBweDsNCn0NCmJvZHlbbmV3c10gI3dyYXBwZXIgI2NvbnRlbnRfbGVmdD5kaXY6bm90KFtjbGFzc10pOm5vdChbaWRdKXsNCiAgICBkaXNwbGF5OiBpbmxpbmUtZ3JpZDsNCiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDUwJSA1MCU7DQogICAgZ3JpZC10ZW1wbGF0ZS1hcmVhczogInhtYWluIHhtYWluIjsNCn0NCiN3cmFwcGVyICNjb250ZW50X3JpZ2h0ew0KICAgIGRpc3BsYXk6bm9uZSAhaW1wb3J0YW50Ow0KfQ0KI3dyYXBwZXJfd3JhcHBlciAjY29udGFpbmVyICNyc3sNCiAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgbWFyZ2luOiAwIGF1dG87DQp9DQojd3JhcHBlciAjcGFnZSB7DQogICAgbWluLXdpZHRoOiA3MTBweDsNCiAgICBoZWlnaHQ6IDQwcHg7DQogICAgbGluZS1oZWlnaHQ6IDQwcHg7DQogICAgcGFkZGluZzogNXB4IDEwcHg7DQogICAgbWFyZ2luOiAwIGF1dG87DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCn0NCiN3cmFwcGVyICNwYWdlIC5wYWdlLWlubmVyew0KICAgIHBhZGRpbmctbGVmdDogMDsNCn0NCiN3cmFwcGVyICAjY29udGVudF9sZWZ0IC5yZXN1bHQsDQojd3JhcHBlciAgI2NvbnRlbnRfbGVmdCAuYy1jb250YWluZXIgew0KICAgIHdpZHRoOiB1bnNldCAhaW1wb3J0YW50Ow0KICAgIG1heC13aWR0aDogMTAwJTsNCiAgICBtYXJnaW4tbGVmdDogNXB4Ow0KICAgIG1hcmdpbi1yaWdodDogMTVweDsNCn0NCg0KI3dyYXBwZXIgICNjb250ZW50X2xlZnQ+Kjpub3QoW2NsYXNzKj0ncmVzdWx0J10pOm5vdChbY2xhc3MqPSdjLWdyb3VwLXdyYXBwZXInXSl7DQoJZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7DQogICAgZ3JpZC1jb2x1bW4tZW5kOiB4bWFpbi1lbmQ7DQp9DQouYy1jb250YWluZXIgaDMgYXsNCiAgICB6LWluZGV4OjE7DQp9DQouQUMuc3Atc2VwYXJhdG9yew0KICAgIHdpZHRoOiBhdXRvOw0KfQ0KLypzZWFyY2ggZW5naW5lIGp1bXAqLw0KI3Nlai1jb250YWluZXJ7DQogICAgcGFkZGluZy1sZWZ0OiAwOw0KICAgIG1hcmdpbi1sZWZ0OiAwOw0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCi5zX2Zvcm1fd3JhcHBlciB7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgZGlzcGxheTogZmxleDsNCn0NCg0KLnJlc3VsdC1tb2xlY3VsZS5uZXctcG1kIHsNCiAgICBtYXJnaW46IDAgYXV0bzsNCiAgICBtaW4td2lkdGg6IDgwMHB4Ow0KICAgIHdpZHRoOiA0MCUgIWltcG9ydGFudDsNCiAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7DQp9DQoNCi5uZXctcG1kICNyc19uZXcgew0KICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlOw0KICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAyMHB4KTsNCiAgICBwYWRkaW5nOiAxMHB4IDAgMTBweCAyMHB4Ow0KfQ0KDQoubmV3LXBtZCAjcnNfbmV3IHRhYmxlew0KICAgIHdpZHRoOiAxMDAlOw0KICAgIG1hcmdpbi10b3A6IDEycHg7DQp9DQoNCiN3cmFwcGVyIC5oZWFkX251bXNfY29udF9vdXRlciAuc2VhcmNoX3Rvb2xfY29udGVyLA0KI3dyYXBwZXIgLmhlYWRfbnVtc19jb250X291dGVyIC5udW1zIHsNCiAgICB3aWR0aDogODAlOw0KfQ0KQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTUwMHB4KSB7DQogICAgZm9ybS5mbSAuc19pcHRfd3IuYmd7DQogICAgICAgIG1pbi13aWR0aDogNDUwcHgNCiAgICB9DQogICAgLndyYXBwZXJfbmV3IC5oZWFkX3dyYXBwZXIgI3Jlc3VsdF9sb2dvew0KICAgICAgICBtYXJnaW4tbGVmdDogLTE3MHB4Ow0KICAgIH0NCn0NCkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDE5MjFweCkgew0KICAgICNzX3RhYi5zX3RhYiAuc190YWJfaW5uZXIgew0KICAgICAgICB3aWR0aDogOTAwcHg7DQogICAgfQ0KICAgIGZvcm0uZm0gLnNfaXB0X3dyLmJnew0KICAgICAgICBtaW4td2lkdGg6IDkwMHB4DQogICAgfQ0KfQ=="},{"meta":{"name":"baiduLiteStyle.css","url":"http://ibaidu.tujidu.com/newcss/baiduLiteStyle.css?t=24.26","ts":1635731540136,"mimetype":"text/css"},"source":""},{"meta":{"name":"googleCommonStyle.css","url":"http://ibaidu.tujidu.com/newcss/googleCommonStyle.css?t=24.26","ts":1635731540137,"mimetype":"text/css"},"source":""},{"meta":{"name":"googleOnePageStyle.css","url":"http://ibaidu.tujidu.com/newcss/googleOnePageStyle.css?t=24.26","ts":1635731540137,"mimetype":"text/css"},"source":"LyoqU3RvcmUgR29vZ2xlVHdvUGFnZVN0eWxlKiovDQojcnNvIHsNCiAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgZmxvYXQ6IHVuc2V0Ow0KfQ0KI3JzbyAualVta0ZiOmhvdmVyIHsNCiAgICBtYXJnaW4tYm90dG9tOiAzMHB4Ow0KICAgIG1hcmdpbi1sZWZ0OiAyMHB4Ow0KfQ0KI3JzbyAuZ3sNCiAgICB3aWR0aDogdW5zZXQ7DQogICAgbWFyZ2luLWxlZnQ6IDIwcHg7DQogICAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgICBwYWRkaW5nOiAwcHggMjBweCAxNXB4Ow0KICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICBtYXJnaW4tYm90dG9tOiAzMHB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7DQogICAgdHJhbnNpdGlvbjogYWxsIDAuMjVzIGN1YmljLWJlemllciguMjMsMSwuMzIsMSkgMHM7DQp9DQouc2VhcmNoPiNpcmVzICNyc28+Lmd7DQogICAgbWF4LXdpZHRoOiB1bnNldDsNCn0NCiNyc28+LmcgfiBkaXY6bm90KC5nKXsNCiAgICBvdmVyZmxvdzogaGlkZGVuOw0KfQ0KI21haW4gI3JjbnR7DQogICAgbWF4LXdpZHRoOiB1bnNldDsNCn0NCmJvZHkgI2FwcGJhcixib2R5IC5yaHNjb2wsIGJvZHkgI3RvcF9uYXYsIGJvZHkgI2ZiYXJ7DQogICAgbWluLXdpZHRoOiB1bnNldDsNCn0NCiNyc28gZy1zY3JvbGxpbmctY2Fyb3VzZWx7DQogICAgbWFyZ2luOiB1bnNldDsNCiAgICBtYXJnaW4tbGVmdDogMjBweDsNCn0NCi5jb2x7DQogICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCn0NCi5jb2wgI2NlbnRlcl9jb2x7DQogICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCiAgICBtYXJnaW4tbGVmdDogdW5zZXQgIWltcG9ydGFudDsNCn0NCi5zcnAgLmJpZyAjdHNmew0KICAgIHdpZHRoOiA4MzNweDsNCn0NCi8qKnNlYXJjaCBib3ggYWxpZ24gY2VudGVyKiovDQouc3JwIGZvcm17DQogICAgbWFyZ2luOiAwIGF1dG87DQp9DQojdG9wX25hdnsNCiAgICBtaW4td2lkdGg6IHVuc2V0Ow0KfQ0KLyoqdmlkZW8gYm94IGFsaWduIGNlbnRlcioqLw0KZy1zZWN0aW9uLXdpdGgtaGVhZGVyew0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCiNoZHRiICNoZHRiLW1zYnsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICB3aWR0aDogMTAwJTsNCn0NCiNoZHRiICNoZHRiLW1zYi12aXN7DQogICAgbWFyZ2luLWxlZnQ6IC0xNjlweDsNCn0NCiNtYWluICNjbnQsICNjbnQgI2NlbnRlcl9jb2wsICNjbnQgI2Zvb3R7DQogICAgd2lkdGg6IGNhbGMoMzYuM3Z3ICsgNTI1cHgpOw0KICAgIG1hcmdpbjogMCBhdXRvOw0KfQ0KQG1lZGlhIHNjcmVlbiBhbmQgKG1heC13aWR0aDoxNDQwcHgpew0KICAgIC5STk5YZ2J7DQogICAgICAgIHdpZHRoOiA4MCUgIWltcG9ydGFudDsNCiAgICB9DQp9"},{"meta":{"name":"googleTwoPageStyle.css","url":"http://ibaidu.tujidu.com/newcss/googleTwoPageStyle.css?t=24.26","ts":1635731540137,"mimetype":"text/css"},"source":"LyoqU3RvcmUgR29vZ2xlVHdvUGFnZVN0eWxlKiovDQojcnNvIHsNCiAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgZmxvYXQ6IHVuc2V0Ow0KfQ0KI3JzbyAualVta0ZiOmhvdmVyIHsNCiAgICBtYXJnaW4tYm90dG9tOiAzMHB4Ow0KICAgIG1hcmdpbi1sZWZ0OiAyMHB4Ow0KfQ0KI3JzbyAuZywgLnZrX2N7DQogICAgd2lkdGg6IHVuc2V0Ow0KICAgIG1hcmdpbi1sZWZ0OiAyMHB4Ow0KICAgIG92ZXJmbG93OiBoaWRkZW47DQogICAgcGFkZGluZzogMTBweCAyMHB4IDE1cHg7DQogICAgbWFyZ2luLXRvcDogMHB4Ow0KICAgIG1hcmdpbi1ib3R0b206IDI1cHg7DQogICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7DQogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCiAgICB0cmFuc2l0aW9uOiBhbGwgMC4yNXMgY3ViaWMtYmV6aWVyKC4yMywxLC4zMiwxKSAwczsNCn0NCi5zZWFyY2g+I2lyZXMgI3JzbyAuZ3sNCiAgICBtYXgtd2lkdGg6IHVuc2V0Ow0KfQ0KI21haW4gI3JjbnQgI3Joc3sNCiAgICBkaXNwbGF5Om5vbmU7DQp9DQojbWFpbiAjcmNudHsNCiAgICBtYXgtd2lkdGg6IHVuc2V0Ow0KfQ0KI21haW4gI2NudCwgI2NudCAjY2VudGVyX2NvbCwgI2NudCAjZm9vdHsNCiAgICB3aWR0aDogY2FsYygzMi41dncgKyA4ODhweCk7DQogICAgbWFyZ2luOiAwIGF1dG87DQp9DQpib2R5ICNhcHBiYXIsYm9keSAucmhzY29sLCBib2R5ICN0b3BfbmF2LCBib2R5ICNmYmFyew0KICAgIG1pbi13aWR0aDogdW5zZXQ7DQp9DQojcnNvIC5DT0VvaWR7DQogICAgbWFyZ2luOiB1bnNldDsNCn0NCi5jb2x7DQogICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCn0NCi5jb2wgI2NlbnRlcl9jb2x7DQogICAgd2lkdGg6IDEwMCUgIWltcG9ydGFudDsNCiAgICBtYXJnaW4tbGVmdDogdW5zZXQgIWltcG9ydGFudDsNCn0NCi5zcmcsICNyc28sICNyc28+ZGl2ew0KCWRpc3BsYXk6IGdyaWQ7DQoJZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsbWlubWF4KDUwJSwxZnIpKTsNCiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiAieG1haW4geG1haW4iOw0KfQ0KLyojcnNvPmRpdjpub3QoLmcpLCAjcnNvIC5zcmd7Ki8NCi8qICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxOyovDQovKiAgICBncmlkLWNvbHVtbi1lbmQ6IHhtYWluLWVuZDsqLw0KLyp9Ki8NCi8qKnNlYXJjaCBib3ggYWxpZ24gY2VudGVyKiovDQouc3JwIGZvcm17DQogICAgbWFyZ2luOjAgYXV0bzsNCn0NCmctc2VjdGlvbi13aXRoLWhlYWRlcnsNCiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7DQp9DQojaGR0YiAjaGR0Yi1tc2J7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgd2lkdGg6IDEwMCU7DQp9DQojaGR0YiAjaGR0Yi1tc2Itdmlzew0KICAgIG1hcmdpbi1sZWZ0OiAtMTY5cHg7DQp9"},{"meta":{"name":"bingCommonStyle.css","url":"http://ibaidu.tujidu.com/newcss/bingCommonStyle.css?t=24.26","ts":1635731540138,"mimetype":"text/css"},"source":"LypTdG9yZSBCaW5nQ29tbW9uU3R5bGUqLw0KYm9keSB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2Y1ZjVmNTsNCn0NCiNiX2NvbnRlbnQgI2JfcmVzdWx0cz5saTpub3QoI21mYV9yb290KSB7DQogICAgd2lkdGg6IDY3MHB4Ow0KICAgIHBhZGRpbmc6IDEycHggMjBweCAhaW1wb3J0YW50Ow0KICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICBtYXJnaW4tYm90dG9tOiAyNXB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7DQogICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLDAsMCwwLjEpOw0KICAgIHRyYW5zaXRpb246IGFsbCAwLjI1cyBjdWJpYy1iZXppZXIoLjIzLDEsLjMyLDEpIDBzOw0KICAgIG92ZXJmbG93OiBoaWRkZW47DQp9DQojYl9jb250ZW50ICNiX3Jlc3VsdHMgYSwNCiNiX2NvbnRlbnQgI2JfcmVzdWx0cyBoMiBhIHsNCiAgICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICAgY29sb3I6ICMzNDc2ZDI7DQp9DQojYl9jb250ZW50ICNiX3Jlc3VsdHMgaDIgYSwgI2JfcmVzdWx0cyBoMiBzdHJvbmd7DQogICAgZm9udC13ZWlnaHQ6IGJvbGQ7DQogICAgZm9udC1zaXplOiBtZWRpdW07DQp9DQojYl9jb250ZW50ICNiX3Jlc3VsdHM+bGk6aG92ZXIgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4zKTsNCiAgICBiYWNrZ3JvdW5kOiAjRkNGQ0ZDICFpbXBvcnRhbnQ7DQogICAgYm94LXNoYWRvdzogMCAwIDFweCBncmV5Ow0KICAgIC13ZWJraXQtYm94LXNoYWRvdzogMCAwIDFweCBncmV5Ow0KICAgIC1tb3otYm94LXNoYWRvdzogMCAwIDFweCBncmF5Ow0KfQ0KI2JfY29udGVudCA+I2JfcmVzdWx0cyBsaTpub3QoI21mYV9yb290KSBoMiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjhmODsNCiAgICBtYXJnaW46IC0xMnB4IC0yMHB4IDEwcHggLTIwcHg7DQogICAgcGFkZGluZzogOHB4IDIwcHggNXB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDVweCA1cHggMHB4IDBweDsNCn0NCg0KYSwgYSBzdHJvbmcgew0KICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTsNCn0NCg0KI2JfY29udGVudCAjYl9yZXN1bHRzIGEgc3Ryb25nLA0KI2JfY29udGVudCAjYl9yZXN1bHRzIGgyIGEgc3Ryb25nIHsNCiAgICB0ZXh0LWRlY29yYXRpb246IG5vbmU7DQp9DQouYl9hbGdvOmZpcnN0LWNoaWxkOmhvdmVyIGgyIGF7DQogICAgdGV4dC1kZWNvcmF0aW9uOiBub25lICFpbXBvcnRhbnQ7DQp9DQojYl9jb250ZW50ICNiX3Jlc3VsdHMgYTpob3ZlcjphZnRlciwNCiNiX2NvbnRlbnQgI2JfcmVzdWx0cyBoMiBhOmhvdmVyOmFmdGVyIHsNCiAgICBsZWZ0OiAwOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIC13ZWJraXQtdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQogICAgLW1vei10cmFuc2l0aW9uOiB3aWR0aCAzNTBtczsNCiAgICB0cmFuc2l0aW9uOiB3aWR0aCAzNTBtczsNCn0NCiNiX2NvbnRlbnQgI2JfcmVzdWx0cyBhOmhvdmVyLA0KI2JfY29udGVudCAjYl9yZXN1bHRzIGgyIGE6aG92ZXJ7DQogICAgdGV4dC1kZWNvcmF0aW9uOiBub25lOw0KfQ0KI2JfY29udGVudCAjYl9yZXN1bHRzIGE6YWZ0ZXIsDQojYl9jb250ZW50ICNiX3Jlc3VsdHMgaDIgYTphZnRlciB7DQogICAgY29udGVudDogIiI7DQogICAgcG9zaXRpb246IGFic29sdXRlOw0KICAgIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjMzQ3NmQyOw0KICAgIGJvdHRvbTogLTJweDsNCiAgICBsZWZ0OiAxMDAlOw0KICAgIHdpZHRoOiAwOw0KICAgIC13ZWJraXQtdHJhbnNpdGlvbjogd2lkdGggMzUwbXMsIGxlZnQgMzUwbXM7DQogICAgLW1vei10cmFuc2l0aW9uOiB3aWR0aCAzNTBtcywgbGVmdCAzNTBtczsNCiAgICB0cmFuc2l0aW9uOiB3aWR0aCAzNTBtcywgbGVmdCAzNTBtczsNCn0NCiNiX2NvbnRlbnQgI2JfcmVzdWx0cyBoMiBhOnZpc2l0ZWQsDQojYl9jb250ZW50ICNiX3Jlc3VsdHMgaDIgYTp2aXNpdGVkIHN0cm9uZywNCiNiX2NvbnRlbnQgI2JfcmVzdWx0cyBoMiBoMiBhOnZpc2l0ZWQsDQojYl9jb250ZW50ICNiX3Jlc3VsdHMgaDIgaDIgYTp2aXNpdGVkIHN0cm9uZyB7DQogICAgY29sb3I6ICM2NjAwOTk7DQp9DQojYl9jb250ZW50ICNiX3Jlc3VsdHMgaDIgYTp2aXNpdGVkOmhvdmVyOmFmdGVyLA0KI2JfY29udGVudCAjYl9yZXN1bHRzIGgyIGgyIGE6dmlzaXRlZDpob3ZlcjphZnRlciB7DQogICAgbGVmdDogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICAtd2Via2l0LXRyYW5zaXRpb246IHdpZHRoIDM1MG1zOw0KICAgIC1tb3otdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQogICAgdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQp9DQojYl9jb250ZW50Pm9sI2JfY29udGV4dHsNCiAgICBkaXNwbGF5Om5vbmU7DQp9DQpib2R5ICNiX2hlYWRlcnsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjVmNWY1Ow0KfQ0KI2JfY29udGVudCAuYl91bmRlclNlYXJjaGJveHsNCiAgICBtYXJnaW4tdG9wOiAxMHB4Ow0KfQ0KI2JfaGVhZGVyIC5iX3Njb3BlYmFyew0KICAgIG1hcmdpbjogdW5zZXQ7DQp9DQovKnNlYXJjaCBlbmdpbmUganVtcCovDQoudHNmLXA+LmxvZ29jb250LCAjc2VqLWNvbnRhaW5lcnsNCiAgICBtYXJnaW4tcmlnaHQ6IDM1MHB4Ow0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCi50c2YtcD4uc2ZpYmJiY3sNCiAgICBtYXJnaW4tcmlnaHQ6IDM1MHB4Ow0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCn0NCi5iX3NlYXJjaGJveEZvcm0gLnNhX3Rtew0KICAgIHRleHQtYWxpZ246IGxlZnQ7IC8qIFNlYXJjaEJveCB0ZXh0IENlbnRlciAqLw0KfQ0KYm9keSAjYl9oZWFkZXIgI2VzdF9zd2l0Y2h7DQogICAgbWFyZ2luOiAwIGF1dG87DQogICAgcGFkZGluZy1yaWdodDogMTAlOyAvKipUT0RPKioqLw0KfQ0KYm9keSAjZXN0X2NuOjphZnRlciwgYm9keSAjZXN0X2VuOjphZnRlcnsNCiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSwxLjMpIHBlcnNwZWN0aXZlKC41ZW0pIHJvdGF0ZVgoMGRlZyk7DQogICAgLXdlYmtpdC10cmFuc2Zvcm06IHNjYWxlKDEuMSwxLjMpIHBlcnNwZWN0aXZlKC41ZW0pIHJvdGF0ZVgoMGRlZyk7DQp9DQpAbWVkaWEgKG1heC13aWR0aDogMTEwMHB4KXsNCiAgICBib2R5ICNiX2hlYWRlciAjZXN0X3N3aXRjaHsNCiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEuMnJlbSk7DQogICAgfQ0KfQ0KLyogU2VhcmNoSXRtZXMgQm90dG9tIHRvIFRvcCBhbmkgKi8NCiNiX2NvbnRlbnR7DQogICAgYW5pbWF0aW9uLW5hbWU6IGFuaV9ib3R0b21Ub3RvcDsNCiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuNnM7DQogICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTsNCn0NCg0KLyogU2VhcmNoQmFyIExlZnQgdG8gUmlnaHQgYW5pICovDQpib2R5ICNiX2hlYWRlciB7DQogICAgYW5pbWF0aW9uLW5hbWU6IGFuaV90b3BUb2J1dHRvbTsNCiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuNnM7DQogICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7DQp9DQpib2R5ew0KICAgIGFuaW1hdGlvbi1uYW1lOiBhbmlfaGlkZVRvU2hvdzsNCiAgICBhbmltYXRpb24tZHVyYXRpb246IDAuNnM7DQogICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7DQp9DQouQUMuc3Atc2VwYXJhdG9yew0KICAgIG1hcmdpbi10b3A6IC0xNXB4Ow0KfQ0KQGtleWZyYW1lcyBhbmlfbGVmdFRvcmlnaHQgew0KICAgIDAlIHsNCiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zMnB4KTsNCiAgICAgICAgb3BhY2l0eTogMDsNCiAgICB9DQogICAgMjAlIHsNCiAgICAgICAgb3BhY2l0eTogMDsNCiAgICB9DQogICAgMzAlIHsNCiAgICAgICAgb3BhY2l0eTogMC44Ow0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICB9DQp9DQovKiBhbmkgKi8NCkBrZXlmcmFtZXMgYW5pX2JvdHRvbVRvdG9wIHsNCiAgICAwJSB7DQogICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgzMnB4KTsNCiAgICAgICAgb3BhY2l0eTogMDsNCiAgICB9DQogICAgMjAlIHsNCiAgICAgICAgb3BhY2l0eTogMDsNCiAgICB9DQogICAgMzAlIHsNCiAgICAgICAgb3BhY2l0eTogMC44Ow0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICB9DQp9DQpALXdlYmtpdC1rZXlmcmFtZXMgYW5pX3RvcFRvYnV0dG9tIHsNCiAgICAwJSB7DQogICAgICAgIC13ZWJraXQtdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0zMnB4KTsNCiAgICAgICAgb3BhY2l0eTogMDsNCiAgICB9DQogICAgMjAlIHsNCiAgICAgICAgb3BhY2l0eTogMDsNCiAgICB9DQogICAgMzAlIHsNCiAgICAgICAgb3BhY2l0eTogMC44Ow0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICB9DQp9DQpALXdlYmtpdC1rZXlmcmFtZXMgYW5pX2hpZGVUb1Nob3cgew0KICAgIDAlIHsNCiAgICAgICAgZGlzcGxheTpub25lOw0KICAgICAgICBvcGFjaXR5OiAwOw0KICAgIH0NCiAgICAyMCUgew0KICAgICAgICBkaXNwbGF5Om5vbmU7DQogICAgICAgIG9wYWNpdHk6IDA7DQogICAgfQ0KICAgIDMwJSB7DQogICAgICAgIGRpc3BsYXk6bm9uZTsNCiAgICAgICAgb3BhY2l0eTogMC44Ow0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICB9DQp9DQo="},{"meta":{"name":"bingOnePageStyle.css","url":"http://ibaidu.tujidu.com/newcss/bingOnePageStyle.css?t=24.26","ts":1635731540138,"mimetype":"text/css"},"source":"LypTdG9yZSBCaW5nT25lUGFnZVN0eWxlKi8NCiNiX2NvbnRlbnQgYXNpZGV7DQogICAgZGlzcGxheTpub25lOw0KfQ0KI2JfY29udGVudCAjYl9yZXN1bHRzew0KICAgIHdpZHRoOiA3M3Z3Ow0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsNCiAgICBhbGlnbi1pdGVtczogY2VudGVyOw0KICAgIG1heC13aWR0aDogMTAwMHB4Ow0KfQ0KYm9keSAjYl9oZWFkZXJ7DQogICAgd2lkdGg6IDcydnc7DQogICAgdGV4dC1hbGlnbjogY2VudGVyOw0KICAgIG1hcmdpbjogMCBhdXRvOw0KfQ0KYm9keSAjYl9jb250ZW50ew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgbWFyZ2luLWxlZnQ6IHVuc2V0Ow0KICAgIHBhZGRpbmctbGVmdDogdW5zZXQ7DQp9DQojYl9jb250ZW50ICNiX3Jlc3VsdHM+bGk6bm90KCNtZmFfcm9vdCkgew0KICAgIHdpZHRoOjk4JTsNCn0NCg=="},{"meta":{"name":"bingTwoPageStyle.css","url":"http://ibaidu.tujidu.com/newcss/bingTwoPageStyle.css?t=24.26","ts":1635731540139,"mimetype":"text/css"},"source":"LypTdG9yZSBCaW5nVHdvUGFnZVN0eWxlKi8NCiNjb250YWluZXIgI2NvbnRlbnRfbGVmdCAuaGl0X3RvcF9uZXcsDQojYl9jb250ZW50IGFzaWRlLCAjYl9yZXN1bHRzICNtZmFfcm9vdHsNCiAgICBkaXNwbGF5Om5vbmU7DQp9DQojYl9jb250ZW50ICNiX3Jlc3VsdHN7DQogICAgd2lkdGg6IDczdnc7DQogICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoYXV0by1maXQsbWlubWF4KDUwJSwxZnIpKTsNCiAgICBncmlkLXRlbXBsYXRlLWFyZWFzOiAieG1haW4geG1haW4iOw0KICAgIGRpc3BsYXk6IGlubGluZS1ncmlkOw0KfQ0KI2JfY29udGVudCAjYl9yZXN1bHRzPmxpOm5vdCgjbWZhX3Jvb3QpIHsNCiAgICB3aWR0aDo5OCU7DQogICAgbWFyZ2luLWxlZnQ6IDElOw0KfQ0KI2JfcmVzdWx0cyAuYl9hbGdvIC5iX2RlZXAgdWx7DQogICAgd2lkdGg6IDUwJTsNCn0NCiNiX21zZywgI2JfcGFnew0KICAgIGdyaWQtY29sdW1uLWVuZDogeG1haW4tZW5kOw0KICAgIGdyaWQtY29sdW1uLXN0YXJ0OiAxOw0KICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7DQp9DQpib2R5ICNiX2NvbnRlbnR7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICBtYXJnaW4tbGVmdDogdW5zZXQ7DQogICAgcGFkZGluZy1sZWZ0OiB1bnNldDsNCn0NCmJvZHkgI2JfaGVhZGVyew0KICAgIHdpZHRoOiA3MnZ3Ow0KICAgIHRleHQtYWxpZ246IGNlbnRlcjsNCiAgICBtYXJnaW46IDAgYXV0bzsNCn0NCg=="},{"meta":{"name":"duckCommonStyle.css","url":"http://ibaidu.tujidu.com/newcss/duckCommonStyle.css?t=24.26","ts":1635731540139,"mimetype":"text/css"},"source":"LypTdG9yZTogRHVja0R1Y2tHb0NvbW1vblN0eWxlKi8NCmJvZHkgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7DQp9DQoucmVzdWx0X19pY29uIC5yZXN1bHRfX2ljb25fX2ltZywgLnJlc3VsdF9faWNvbiAucmVzdWx0X19pY29uIGltZ3sNCiAgICBkaXNwbGF5OiBub25lOw0KfQ0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgaDJ7DQogICAgZm9udC13ZWlnaHQ6IDYwMDsNCn0NCiNsaW5rc193cmFwcGVyIC5yZXN1bHRzLS1tYWluew0KICAgIG1heC13aWR0aDogNjcwcHg7DQp9DQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCB7DQogICAgd2lkdGg6IDY3MHB4Ow0KICAgIG92ZXJmbG93OiBoaWRkZW47DQogICAgbWFyZ2luLXRvcDogMHB4Ow0KICAgIG1hcmdpbi1ib3R0b206IDI1cHg7DQogICAgYm9yZGVyLXJhZGl1czogNXB4Ow0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7DQogICAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCiAgICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsMCwwLDAuMSk7DQogICAgdHJhbnNpdGlvbjogYWxsIDAuMjVzIGN1YmljLWJlemllciguMjMsMSwuMzIsMSkgMHM7DQp9DQouZGFyay1iZyAjbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMzMzOw0KfQ0KLmRhcmstYmcgI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgaDIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICMzNDU7DQp9DQouZGFyay1iZyAjbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCAucmVzdWx0X190aXRsZSBhIHsNCiAgICBjb2xvcjogI0NDQ0NDQzsNCn0NCi5kYXJrLWJnICNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIC5yZXN1bHRfX3RpdGxlIGE6dmlzaXRlZCB7DQogICAgY29sb3I6ICNiNzY2M2U7DQp9DQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCAucmVzdWx0X190aXRsZSBhIHsNCiAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOw0KICAgIG1heC13aWR0aDogNjQwcHg7DQogICAgY29sb3I6ICMzNDc2ZDI7DQogICAgZm9udC1zaXplOiBzbWFsbGVyOw0KfQ0KDQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCAucmVzdWx0X19ib2R5ew0KICAgIHBhZGRpbmc6IDEycHggMjBweCAhaW1wb3J0YW50Ow0KfQ0KDQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcDpob3ZlciB7DQogICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLDAsMCwwLjMpOw0KICAgIGJveC1zaGFkb3c6IDAgMCAxcHggZ3JleTsNCiAgICAtd2Via2l0LWJveC1zaGFkb3c6IDAgMCAxcHggZ3JleTsNCiAgICAtbW96LWJveC1zaGFkb3c6IDAgMCAxcHggZ3JheTsNCn0NCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZjhmOGY4Ow0KICAgIG1hcmdpbjogLTEycHggLTIwcHggMHB4IC0yMHB4Ow0KICAgIHBhZGRpbmc6IDhweCAyMHB4IDVweDsNCiAgICBib3JkZXItcmFkaXVzOiA1cHggNXB4IDBweCAwcHg7DQp9DQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCBoMiBhOmhvdmVyOmFmdGVyIHsNCiAgICBsZWZ0OiAwOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIC13ZWJraXQtdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQogICAgLW1vei10cmFuc2l0aW9uOiB3aWR0aCAzNTBtczsNCiAgICB0cmFuc2l0aW9uOiB3aWR0aCAzNTBtczsNCn0NCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyIGE6YWZ0ZXIgew0KICAgIGNvbnRlbnQ6ICIiOw0KICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsNCiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgIzM0NzZkMjsNCiAgICBib3R0b206IDFweDsNCiAgICBsZWZ0OiAxMDAlOw0KICAgIHdpZHRoOiAwOw0KICAgIC13ZWJraXQtdHJhbnNpdGlvbjogd2lkdGggMzUwbXMsIGxlZnQgMzUwbXM7DQogICAgLW1vei10cmFuc2l0aW9uOiB3aWR0aCAzNTBtcywgbGVmdCAzNTBtczsNCiAgICB0cmFuc2l0aW9uOiB3aWR0aCAzNTBtcywgbGVmdCAzNTBtczsNCn0NCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyIGE6dmlzaXRlZCwNCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyIGE6dmlzaXRlZCBzdHJvbmcgew0KICAgIGNvbG9yOiAjNjYwMDk5Ow0KfQ0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgaDIgYTp2aXNpdGVkOmhvdmVyOmFmdGVyLA0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgaDIgYTp2aXNpdGVkOmhvdmVyOmFmdGVyIHsNCiAgICBsZWZ0OiAwOw0KICAgIHdpZHRoOiAxMDAlOw0KICAgIC13ZWJraXQtdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQogICAgLW1vei10cmFuc2l0aW9uOiB3aWR0aCAzNTBtczsNCiAgICB0cmFuc2l0aW9uOiB3aWR0aCAzNTBtczsNCn0NCg0KLyogU2VhcmNoSXRtZXMgQm90dG9tIHRvIFRvcCBhbmkgKi8NCiNsaW5rc193cmFwcGVyICNsaW5rcyB7DQogICAgYW5pbWF0aW9uLW5hbWU6IGFuaV9ib3R0b21Ub3RvcDsNCiAgICBhbmltYXRpb24tZHVyYXRpb246IC4zczsNCiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlOw0KfQ0KDQovKiBTZWFyY2hCYXIgTGVmdCB0byBSaWdodCBhbmkgKi8NCiNoZWFkZXJfd3JhcHBlciAuaGVhZGVyX19zZWFyY2gtd3JhcCB7DQogICAgYW5pbWF0aW9uLW5hbWU6IGFuaV9sZWZ0VG9yaWdodDsNCiAgICBhbmltYXRpb24tZHVyYXRpb246IC4zczsNCiAgICBhbmltYXRpb24tdGltaW5nLWZ1bmN0aW9uOiBlYXNlLW91dDsNCn0NCkBrZXlmcmFtZXMgYW5pX2xlZnRUb3JpZ2h0IHsNCiAgICAwJSB7DQogICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgtMzJweCk7DQogICAgICAgIG9wYWNpdHk6IDA7DQogICAgfQ0KICAgIDIwJSB7DQogICAgICAgIG9wYWNpdHk6IDA7DQogICAgfQ0KICAgIDMwJSB7DQogICAgICAgIG9wYWNpdHk6IDAuODsNCiAgICB9DQogICAgMTAwJSB7DQogICAgICAgIG9wYWNpdHk6IDE7DQogICAgfQ0KfQ0KLyogYW5pICovDQpAa2V5ZnJhbWVzIGFuaV9ib3R0b21Ub3RvcCB7DQogICAgMCUgew0KICAgICAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoMzJweCk7DQogICAgICAgIG9wYWNpdHk6IDA7DQogICAgfQ0KICAgIDIwJSB7DQogICAgICAgIG9wYWNpdHk6IDA7DQogICAgfQ0KICAgIDMwJSB7DQogICAgICAgIG9wYWNpdHk6IDAuODsNCiAgICB9DQogICAgMTAwJSB7DQogICAgICAgIG9wYWNpdHk6IDE7DQogICAgfQ0KfQ0K"},{"meta":{"name":"duckOnePageStyle.css","url":"http://ibaidu.tujidu.com/newcss/duckOnePageStyle.css?t=24.26","ts":1635731540139,"mimetype":"text/css"},"source":"LypTdG9yZTogRHVja0R1Y2tHb09uZVBhZ2VTdHlsZSovDQouanMtc2lkZWJhci1hZHMsICNvcmdhbmljLW1vZHVsZSwgLnBpbm5lZC10by1ib3R0b217DQogICAgZGlzcGxheTogbm9uZTsNCn0NCi5qcy1yZXN1bHQtaGlkZGVuLWVsew0KICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsNCn0NCi5zaXRlLXdyYXBwZXIgI3dlYl9jb250ZW50X3dyYXBwZXIgLmN3IHsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIG1heC13aWR0aDogdW5zZXQ7DQogICAgbWFyZ2luLWxlZnQ6IC0xNTBweDsNCn0NCg0KI2hlYWRlcl93cmFwcGVyICNoZWFkZXIsDQojd2ViX2NvbnRlbnRfd3JhcHBlciAjbGlua3Nfd3JhcHBlciAuc2VhcmNoLWZpbHRlcnMtd3JhcCwNCiN3ZWJfY29udGVudF93cmFwcGVyICNsaW5rc193cmFwcGVyIC5yZXN1bHRzLS1tZXNzYWdlew0KICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOw0KICAgIGRpc3BsYXk6IGdyaWQ7DQp9DQojaGVhZGVyX3dyYXBwZXIgI2hlYWRlciB7DQogICAgbWF4LXdpZHRoOiB1bnNldDsNCn0NCg0KDQojaGVhZGVyX3dyYXBwZXIgI2hlYWRlciAuaGVhZGVyX19zZWFyY2gtd3JhcCB7DQogICAgd2lkdGg6IDUwMHB4Ow0KfQ0KI2xpbmtzX3dyYXBwZXJ7DQogICAgZGlzcGxheTogaW5saW5lLWZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQp9DQojbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tbWFpbnsNCiAgICBmbG9hdDogdW5zZXQ7DQp9DQojbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tc2lkZWJhcnsNCiAgICBtaW4td2lkdGg6IHVuc2V0Ow0KICAgIG1hcmdpbjogdW5zZXQ7DQp9DQouYm9keS0tc2VycCAuZm9vdGVyew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgcGFkZGluZy1sZWZ0OiB1bnNldDsNCn0NCg=="},{"meta":{"name":"duckTwoPageStyle.css","url":"http://ibaidu.tujidu.com/newcss/duckTwoPageStyle.css?t=24.26","ts":1635731540139,"mimetype":"text/css"},"source":"LypTdG9yZTogRHVja0R1Y2tHb1R3b1BhZ2VTdHlsZSovDQouanMtc2lkZWJhci1hZHMsDQojbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tc2lkZWJhciwNCiNvcmdhbmljLW1vZHVsZSwNCi5waW5uZWQtdG8tYm90dG9tew0KICAgIGRpc3BsYXk6IG5vbmU7DQp9DQouanMtcmVzdWx0LWhpZGRlbi1lbHsNCiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7DQp9DQouc2l0ZS13cmFwcGVyICN3ZWJfY29udGVudF93cmFwcGVyIC5jdyB7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBtYXgtd2lkdGg6IHVuc2V0Ow0KICAgIG1hcmdpbi1sZWZ0OiAtMTUwcHg7DQp9DQoNCiNoZWFkZXJfd3JhcHBlciAjaGVhZGVyLA0KI3dlYl9jb250ZW50X3dyYXBwZXIgI2xpbmtzX3dyYXBwZXIgLnNlYXJjaC1maWx0ZXJzLXdyYXAsDQojd2ViX2NvbnRlbnRfd3JhcHBlciAjbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tbWVzc2FnZXsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICBkaXNwbGF5OiBncmlkOw0KfQ0KI2hlYWRlcl93cmFwcGVyICNoZWFkZXIgew0KICAgIG1heC13aWR0aDogdW5zZXQ7DQp9DQoNCiNoZWFkZXJfd3JhcHBlciAjaGVhZGVyIC5oZWFkZXJfX3NlYXJjaC13cmFwIHsNCiAgICB3aWR0aDogNTAwcHg7DQp9DQojbGlua3Nfd3JhcHBlcnsNCiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCn0NCiNsaW5rc193cmFwcGVyIC5yZXN1bHRzLS1tYWluew0KICAgIGZsb2F0OiB1bnNldDsNCiAgICBtYXgtd2lkdGg6IHVuc2V0Ow0KfQ0KI2xpbmtzX3dyYXBwZXIgLnJlc3VsdHMtLXNpZGViYXJ7DQogICAgbWluLXdpZHRoOiB1bnNldDsNCiAgICBtYXJnaW46IHVuc2V0Ow0KfQ0KI2xpbmtzX3dyYXBwZXIgLnJlc3VsdHMtLW1haW4gI2xpbmtzew0KICAgIHdpZHRoOiA4MHZ3Ow0KICAgIC8qIFRoaXMgbWF5IGNhdXNlIFBhZ2UgZmFpbGVkICovDQogICAgZGlzcGxheTogaW5saW5lLWdyaWQ7DQogICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA1MCUgNTAlOw0KICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6ICJ4bWFpbiB4bWFpbiI7DQp9DQojbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tbWFpbiAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcHsNCiAgICB3aWR0aDogdW5zZXQ7DQogICAgbWFyZ2luLXJpZ2h0OiAxNXB4Ow0KfQ0KI2xpbmtzIC5yZXN1bHQtLW1vcmUsICNsaW5rcyAucmVzdWx0LS1zZXB7DQogICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7DQogICAgZ3JpZC1jb2x1bW4tZW5kOiB4bWFpbi1lbmQ7DQogICAgd2lkdGg6IHVuc2V0ICFpbXBvcnRhbnQ7DQogICAgcGFkZGluZzogMDsNCiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4Ow0KfQ0KI2xpbmtzIC5yZXN1bHQtLXNlcHsNCiAgICBtYXJnaW4tYm90dG9tOiAyZW07DQp9DQouYm9keS0tc2VycCAuZm9vdGVyew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgcGFkZGluZy1sZWZ0OiB1bnNldDsNCn0NCg=="},{"meta":{"name":"dogeCommonStyle.css","url":"http://ibaidu.tujidu.com/newcss/dogeCommonStyle.css?t=24.26","ts":1635731540139,"mimetype":"text/css"},"source":"LypTdG9yZTogRG9nZUNvbW1vblN0eWxlKi8NCmJvZHkgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmNWY1ZjU7DQp9DQoucmVzdWx0c19saW5rc19kZWVwIC5yZXN1bHRfX2ljb257DQogICAgZGlzcGxheTogbm9uZTsNCn0NCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyew0KICAgIGZvbnQtd2VpZ2h0OiA2MDA7DQp9DQojbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tbWFpbnsNCiAgICBtYXgtd2lkdGg6IDY3MHB4Ow0KfQ0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgew0KICAgIHdpZHRoOiA2NzBweDsNCiAgICBvdmVyZmxvdzogaGlkZGVuOw0KICAgIG1hcmdpbi10b3A6IDBweDsNCiAgICBtYXJnaW4tYm90dG9tOiAyNXB4Ow0KICAgIGJvcmRlci1yYWRpdXM6IDVweDsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICAgIGJveC1zaXppbmc6IGJvcmRlci1ib3g7DQogICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgwLDAsMCwwLjEpOw0KICAgIHRyYW5zaXRpb246IGFsbCAwLjI1cyBjdWJpYy1iZXppZXIoLjIzLDEsLjMyLDEpIDBzOw0KfQ0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgLnJlc3VsdF9fdGl0bGUgYSB7DQogICAgb3ZlcmZsb3c6IGhpZGRlbjsNCiAgICB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsNCiAgICBtYXgtd2lkdGg6IDY0MHB4Ow0KICAgIGNvbG9yOiAjMzQ3NmQyOw0KICAgIGZvbnQtc2l6ZTogc21hbGxlcjsNCn0NCg0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgLnJlc3VsdF9fYm9keXsNCiAgICBwYWRkaW5nOiAxMnB4IDIwcHggIWltcG9ydGFudDsNCn0NCg0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXA6aG92ZXIgew0KICAgIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4zKTsNCiAgICBib3gtc2hhZG93OiAwIDAgMXB4IGdyZXk7DQogICAgLXdlYmtpdC1ib3gtc2hhZG93OiAwIDAgMXB4IGdyZXk7DQogICAgLW1vei1ib3gtc2hhZG93OiAwIDAgMXB4IGdyYXk7DQp9DQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCBoMiB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2Y4ZjhmODsNCiAgICBtYXJnaW46IC0xMnB4IC0yMHB4IDBweCAtMjBweDsNCiAgICBwYWRkaW5nOiA4cHggMjBweCA1cHg7DQogICAgYm9yZGVyLXJhZGl1czogNXB4IDVweCAwcHggMHB4Ow0KfQ0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgaDIgYTpob3ZlcjphZnRlciB7DQogICAgbGVmdDogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICAtd2Via2l0LXRyYW5zaXRpb246IHdpZHRoIDM1MG1zOw0KICAgIC1tb3otdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQogICAgdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQp9DQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCBoMiBhOmFmdGVyIHsNCiAgICBjb250ZW50OiAiIjsNCiAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMzNDc2ZDI7DQogICAgYm90dG9tOiAxcHg7DQogICAgbGVmdDogMTAwJTsNCiAgICB3aWR0aDogMDsNCiAgICAtd2Via2l0LXRyYW5zaXRpb246IHdpZHRoIDM1MG1zLCBsZWZ0IDM1MG1zOw0KICAgIC1tb3otdHJhbnNpdGlvbjogd2lkdGggMzUwbXMsIGxlZnQgMzUwbXM7DQogICAgdHJhbnNpdGlvbjogd2lkdGggMzUwbXMsIGxlZnQgMzUwbXM7DQp9DQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCBoMiBhOnZpc2l0ZWQsDQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcCBoMiBhOnZpc2l0ZWQgc3Ryb25nIHsNCiAgICBjb2xvcjogIzY2MDA5OTsNCn0NCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyIGE6dmlzaXRlZDpob3ZlcjphZnRlciwNCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyIGE6dmlzaXRlZDpob3ZlcjphZnRlciB7DQogICAgbGVmdDogMDsNCiAgICB3aWR0aDogMTAwJTsNCiAgICAtd2Via2l0LXRyYW5zaXRpb246IHdpZHRoIDM1MG1zOw0KICAgIC1tb3otdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQogICAgdHJhbnNpdGlvbjogd2lkdGggMzUwbXM7DQp9DQoNCi8qIFNlYXJjaEl0bWVzIEJvdHRvbSB0byBUb3AgYW5pICovDQojbGlua3Nfd3JhcHBlciAjbGlua3Mgew0KICAgIGFuaW1hdGlvbi1uYW1lOiBhbmlfYm90dG9tVG90b3A7DQogICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAuM3M7DQogICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZTsNCn0NCg0KLyogU2VhcmNoQmFyIExlZnQgdG8gUmlnaHQgYW5pICovDQojaGVhZGVyX3dyYXBwZXIgLmhlYWRlcl9fc2VhcmNoLXdyYXAgew0KICAgIGFuaW1hdGlvbi1uYW1lOiBhbmlfbGVmdFRvcmlnaHQ7DQogICAgYW5pbWF0aW9uLWR1cmF0aW9uOiAuM3M7DQogICAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogZWFzZS1vdXQ7DQp9DQouQUMuc3Atc2VwYXJhdG9yew0KICAgIG1hcmdpbi10b3A6IC0xNXB4Ow0KfQ0KQGtleWZyYW1lcyBhbmlfbGVmdFRvcmlnaHQgew0KICAgIDAlIHsNCiAgICAgICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKC0zMnB4KTsNCiAgICAgICAgb3BhY2l0eTogMDsNCiAgICB9DQogICAgMjAlIHsNCiAgICAgICAgb3BhY2l0eTogMDsNCiAgICB9DQogICAgMzAlIHsNCiAgICAgICAgb3BhY2l0eTogMC44Ow0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICB9DQp9DQovKiBhbmkgKi8NCkBrZXlmcmFtZXMgYW5pX2JvdHRvbVRvdG9wIHsNCiAgICAwJSB7DQogICAgICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgzMnB4KTsNCiAgICAgICAgb3BhY2l0eTogMDsNCiAgICB9DQogICAgMjAlIHsNCiAgICAgICAgb3BhY2l0eTogMDsNCiAgICB9DQogICAgMzAlIHsNCiAgICAgICAgb3BhY2l0eTogMC44Ow0KICAgIH0NCiAgICAxMDAlIHsNCiAgICAgICAgb3BhY2l0eTogMTsNCiAgICB9DQp9DQo="},{"meta":{"name":"dogeOnePageStyle.css","url":"http://ibaidu.tujidu.com/newcss/dogeOnePageStyle.css?t=24.26","ts":1635731540140,"mimetype":"text/css"},"source":"LypTdG9yZTogRG9nZU9uZVBhZ2VTdHlsZSovDQouanMtc2lkZWJhci1hZHMsICNvcmdhbmljLW1vZHVsZSwgLnBpbm5lZC10by1ib3R0b217DQogICAgZGlzcGxheTogbm9uZTsNCn0NCi5qcy1yZXN1bHQtaGlkZGVuLWVsew0KICAgIGRpc3BsYXk6IG5vbmUgIWltcG9ydGFudDsNCn0NCi5zaXRlLXdyYXBwZXIgI3dlYl9jb250ZW50X3dyYXBwZXIgLmN3IHsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICBkaXNwbGF5OiBmbGV4Ow0KICAgIG1heC13aWR0aDogdW5zZXQ7DQp9DQoNCkBtZWRpYSBzY3JlZW4gYW5kIChtaW4td2lkdGg6IDEwMDBweCkgew0KICAgICNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIHsNCiAgICAgICAgd2lkdGg6IDEwMCU7DQogICAgfQ0KfQ0KDQojaGVhZGVyX3dyYXBwZXIgI2hlYWRlciwNCiN3ZWJfY29udGVudF93cmFwcGVyICNsaW5rc193cmFwcGVyIC5zZWFyY2gtZmlsdGVycy13cmFwLA0KI3dlYl9jb250ZW50X3dyYXBwZXIgI2xpbmtzX3dyYXBwZXIgLnJlc3VsdHMtLW1lc3NhZ2V7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgZGlzcGxheTogZ3JpZDsNCn0NCiNoZWFkZXJfd3JhcHBlciAjaGVhZGVyIHsNCiAgICBtYXgtd2lkdGg6IHVuc2V0Ow0KfQ0KDQojaGVhZGVyX3dyYXBwZXIgI2hlYWRlciAuaGVhZGVyX19zZWFyY2gtd3JhcCB7DQogICAgd2lkdGg6IDUwMHB4Ow0KfQ0KI2xpbmtzX3dyYXBwZXJ7DQogICAgZGlzcGxheTogaW5saW5lLWZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgcGFkZGluZy1sZWZ0OiAwOw0KfQ0KI2xpbmtzX3dyYXBwZXIgLnJlc3VsdHMtLW1haW57DQogICAgZmxvYXQ6IHVuc2V0Ow0KICAgIG1heC13aWR0aDogODYwcHg7DQp9DQojbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tc2lkZWJhcnsNCiAgICBtaW4td2lkdGg6IHVuc2V0Ow0KICAgIG1hcmdpbjogdW5zZXQ7DQp9DQouYm9keS0tc2VycCAuZm9vdGVyew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgcGFkZGluZy1sZWZ0OiB1bnNldDsNCn0NCg=="},{"meta":{"name":"dogeTwoPageStyle.css","url":"http://ibaidu.tujidu.com/newcss/dogeTwoPageStyle.css?t=24.26","ts":1635731540140,"mimetype":"text/css"},"source":"LypTdG9yZTogRG9nZVR3b1BhZ2VTdHlsZSovDQouanMtc2lkZWJhci1hZHMsDQojbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tc2lkZWJhciwNCiNvcmdhbmljLW1vZHVsZSwNCi5waW5uZWQtdG8tYm90dG9tew0KICAgIGRpc3BsYXk6IG5vbmU7DQp9DQouanMtcmVzdWx0LWhpZGRlbi1lbHsNCiAgICBkaXNwbGF5OiBub25lICFpbXBvcnRhbnQ7DQp9DQouc2l0ZS13cmFwcGVyICN3ZWJfY29udGVudF93cmFwcGVyIC5jdyB7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgZGlzcGxheTogZmxleDsNCiAgICBtYXgtd2lkdGg6IHVuc2V0Ow0KICAgIG1hcmdpbi1sZWZ0OiAtMTUwcHg7DQp9DQoNCiNoZWFkZXJfd3JhcHBlciAjaGVhZGVyLA0KI3dlYl9jb250ZW50X3dyYXBwZXIgI2xpbmtzX3dyYXBwZXIgLnNlYXJjaC1maWx0ZXJzLXdyYXAsDQojd2ViX2NvbnRlbnRfd3JhcHBlciAjbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tbWVzc2FnZXsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCiAgICBkaXNwbGF5OiBncmlkOw0KfQ0KI2hlYWRlcl93cmFwcGVyICNoZWFkZXIgew0KICAgIG1heC13aWR0aDogdW5zZXQ7DQp9DQoNCiNoZWFkZXJfd3JhcHBlciAjaGVhZGVyIC5oZWFkZXJfX3NlYXJjaC13cmFwIHsNCiAgICB3aWR0aDogNTAwcHg7DQp9DQojbGlua3Nfd3JhcHBlcnsNCiAgICBkaXNwbGF5OiBpbmxpbmUtZmxleDsNCiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsNCn0NCiNsaW5rc193cmFwcGVyIC5yZXN1bHRzLS1tYWluew0KICAgIGZsb2F0OiB1bnNldDsNCiAgICBtYXgtd2lkdGg6IHVuc2V0Ow0KfQ0KI2xpbmtzX3dyYXBwZXIgLnJlc3VsdHMtLXNpZGViYXJ7DQogICAgbWluLXdpZHRoOiB1bnNldDsNCiAgICBtYXJnaW46IHVuc2V0Ow0KfQ0KI2xpbmtzX3dyYXBwZXIgLnJlc3VsdHMtLW1haW4gI2xpbmtzew0KICAgIHdpZHRoOiA4MHZ3Ow0KICAgIC8qIFRoaXMgbWF5IGNhdXNlIFBhZ2UgZmFpbGVkICovDQogICAgZGlzcGxheTogaW5saW5lLWdyaWQ7DQogICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiA1MCUgNTAlOw0KICAgIGdyaWQtdGVtcGxhdGUtYXJlYXM6ICJ4bWFpbiB4bWFpbiI7DQp9DQojbGlua3Nfd3JhcHBlciAucmVzdWx0cy0tbWFpbiAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcHsNCiAgICB3aWR0aDogdW5zZXQ7DQogICAgbWFyZ2luLXJpZ2h0OiAxNXB4Ow0KfQ0KI2xpbmtzIC5yZXN1bHQtLW1vcmUsICNsaW5rcyAucmVzdWx0LS1zZXB7DQogICAgZ3JpZC1jb2x1bW4tc3RhcnQ6IDE7DQogICAgZ3JpZC1jb2x1bW4tZW5kOiB4bWFpbi1lbmQ7DQogICAgd2lkdGg6IHVuc2V0ICFpbXBvcnRhbnQ7DQogICAgcGFkZGluZzogMDsNCiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4Ow0KfQ0KI2xpbmtzIC5yZXN1bHQtLXNlcHsNCiAgICBtYXJnaW4tYm90dG9tOiAyZW07DQp9DQouYm9keS0tc2VycCAuZm9vdGVyew0KICAgIGRpc3BsYXk6IGZsZXg7DQogICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7DQogICAgcGFkZGluZy1sZWZ0OiB1bnNldDsNCn0NCg=="},{"meta":{"name":"HuYanStyle.css","url":"http://ibaidu.tujidu.com/newcss/HuYanStyle.css?t=24.26","ts":1635731540140,"mimetype":"text/css"},"source":"LyoqU3RvcmUgSHVZYW5TdHlsZSoqLw0KLyoqKioqQmFpZHUtSHVZYW5TdHlsZSoqKioqLw0KYm9keVtiYWlkdV0sDQojd3JhcHBlciAjaGVhZCwNCiN3cmFwcGVyICNzX3RhYiwNCmZvcm0uZm0gLnNfaXB0X3dyLmJnew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNGRkZGRkY7DQp9DQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQtb3AsDQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQsDQojd3JhcHBlciAjY29udGVudF9sZWZ0IGFydGljbGUsDQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5jLWNvbnRhaW5lciwNCiN3cmFwcGVyICNycywNCiN3cmFwcGVyICNjb250ZW50X3JpZ2h0ew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNBQUFBQUEgOw0KICAgIGJvcmRlcjogMXB4IGRvdWJsZSAjQTJEN0Q0IDsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQp9DQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQtb3A6aG92ZXIsDQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQ6aG92ZXIsDQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQtb3A6aG92ZXIgYXJ0aWNsZXsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0NDQ0NDICFpbXBvcnRhbnQ7DQp9DQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQgaDMsDQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5yZXN1bHQtb3AgaDMsDQojd3JhcHBlciAjY29udGVudF9sZWZ0IC5jLWNvbnRhaW5lciBoMywNCiN3cmFwcGVyICNycyAudHR7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0JCQkJCQiA7DQp9DQovKioqQmluZy1IdVlhblN0eWxlKioqKi8NCi5uYV9jbnQgLm53c19pdG0sDQoubndzX2l0bWIsDQojYl9jb250ZW50ICNiX3Jlc3VsdHM+bGk6bm90KCNtZmFfcm9vdCksDQpib2R5ICNiX2hlYWRlcnsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQUFBQUFBIDsNCiAgICBib3JkZXI6IDFweCBkb3VibGUgI0EyRDdENCA7DQogICAgYm9yZGVyLXJhZGl1czogMHB4Ow0KfQ0KI2JfY29udGVudCAjYl9yZXN1bHRzIGxpOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0NDQ0NDICFpbXBvcnRhbnQ7DQp9DQojYl9jb250ZW50ICNiX3Jlc3VsdHMgbGkgaDJ7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0JCQkJCQiA7DQp9DQovKioqR29vZ2xlLUh1WWFuU3R5bGUqKioqLw0KYm9keVtnb29nbGVdew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNmRGZEZkQ7DQp9DQojcnNvIC5nLCAuYmtXTWdkPi5nLA0KLmJrV01nZCBnLWlubmVyLWNhcmQsDQojcmhzY29sICNyaHMsDQojcmhzY29sICNyaHMgLmc+ZGl2LA0KLmMyeHpUYiAuZywNCi5ydVRjSWQgLmcsDQouZm0wNklmIC5nLA0KLmNVblFLZSAuZywNCi5IYW5RbWYgLmcsDQojcnNvIC5nLA0KI3JzbyAua3AtYmxrLA0KI3JzbyAuTUdxakssDQojcnNvPmRpdjpub3QoLmcpPip7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0FBQUFBQSA7DQogICAgYm9yZGVyOiAxcHggc29saWQgIzljZDJjZkFBOw0KICAgIGJvcmRlci1yYWRpdXM6IDBweDsNCn0NCiNyc28gLmc6aG92ZXIsDQouYmtXTWdkPi5nOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQ0NDQ0NDICFpbXBvcnRhbnQ7DQogICAgYm9yZGVyOiAxcHggZG91YmxlICM5Y2QyY2Y7DQp9DQouYmtXTWdkIC5nIGRpdi5yLA0KI3JzbyAuZyBoM3sNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQkJCQkJCIDsNCn0NCi8qKipTb2dvdS1IdVlhblN0eWxlKioqKi8NCmJvZHlbc29nb3VdLCAjcGFnZWJhcl9jb250YWluZXIgYXsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZkRmRGZEOw0KfQ0KI21haW4gLnJlc3VsdHM+ZGl2ew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNBQUFBQUEgOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkICM5Y2QyY2ZBQTsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQp9DQojbWFpbiAucmVzdWx0cz5kaXY6aG92ZXIgew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNDQ0NDQ0MgIWltcG9ydGFudDsNCiAgICBib3JkZXI6IDFweCBkb3VibGUgIzljZDJjZjsNCn0NCiNtYWluIC5yZXN1bHRzPmRpdiBoM3sNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjQkJCQkJCIDsNCn0NCi8qKipEdWNrX0RvZ2UtSHVZYW5TdHlsZSoqKiovDQpib2R5W2R1Y2tdLGJvZHlbZG9nZV17DQogICAgYmFja2dyb3VuZC1jb2xvcjogI2ZEZkRmRDsNCn0NCiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwew0KICAgIGJhY2tncm91bmQtY29sb3I6ICNBQUFBQUEgOw0KICAgIGJvcmRlcjogMXB4IHNvbGlkICM5Y2QyY2ZBQTsNCiAgICBib3JkZXItcmFkaXVzOiAwcHg7DQp9DQojbGlua3Nfd3JhcHBlciAjbGlua3MgLnJlc3VsdHNfbGlua3NfZGVlcDpob3ZlciB7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0NDQ0NDQyAhaW1wb3J0YW50Ow0KICAgIGJvcmRlcjogMXB4IGRvdWJsZSAjOWNkMmNmOw0KfQ0KI2xpbmtzX3dyYXBwZXIgI2xpbmtzIC5yZXN1bHRzX2xpbmtzX2RlZXAgaDJ7DQogICAgYmFja2dyb3VuZC1jb2xvcjogI0JCQkJCQiA7DQp9DQo="},{"meta":{"name":"SiteConfigRules.conf","url":"http://ibaidu.tujidu.com/newcss/SiteConfigRules.conf?t=24.26","ts":1635731540140,"mimetype":"text/plain"},"source":"b25saW5lREIgPSB7DQogICBiYWlkdTogew0KICAgICAgIFNpdGVUeXBlSUQ6IDEsDQogICAgICAgTWFpblR5cGU6ICIjY29udGVudF9sZWZ0IC5jLWNvbnRhaW5lciIsDQogICAgICAgU3R5cGVfTm9ybWFsOiAiaDMudD5hLCAuYy1jb250YWluZXIgYXJ0aWNsZSBhIiwNCiAgICAgICBGYXZpY29uVHlwZTogIi5jLXNob3d1cmwiLA0KICAgICAgIEZhdmljb25BZGRUbzogImgzIiwNCiAgICAgICBDb3VudGVyVHlwZTogIiNjb250ZW50X2xlZnQ+I2RvdWJsZT5kaXZbc3JjaWRdICpbY2xhc3N+PXRdLFtjbGFzc349b3BfYmVzdF9hbnN3ZXJfcXVlc3Rpb25dLCNjb250ZW50X2xlZnQ+ZGl2W3NyY2lkXSAqW2NsYXNzfj10XSxbY2xhc3N+PW9wX2Jlc3RfYW5zd2VyX3F1ZXN0aW9uXSIsDQogICAgICAgQmxvY2tUeXBlOiAiaDMgYSIsDQogICAgICAgcGFnZXI6ew0KICAgICAgICAgICBuZXh0TGluazogJy8vZGl2W0BpZD0icGFnZSJdLy9hW2NvbnRhaW5zKHRleHQoKSwiw6TCuMKLw6TCuMKAw6nCocK1IildW0BocmVmXScsDQogICAgICAgICAgIHBhZ2VFbGVtZW50OiAiY3NzO2RpdiNjb250ZW50X2xlZnQgPiAqIiwNCiAgICAgICAgICAgSFRfaW5zZXJ0OiBbICJjc3M7ZGl2I2NvbnRlbnRfbGVmdCIsIDIgXSwNCiAgICAgICAgICAgcmVwbGFjZUU6ICJjc3M7I3BhZ2UiLA0KICAgICAgICAgICBzdHlsaXNoOiAiLmF1dG9wYWdlcml6ZV9wYWdlX2luZm8sIGRpdi5zcC1zZXBhcmF0b3Ige21hcmdpbi1ib3R0b206IDEwcHggIWltcG9ydGFudDt9LmMtaW1nLWJvcmRlcntkaXNwbGF5Om5vbmV9IiwNCiAgICAgICB9DQogICB9LA0KICAgc29nb3U6IHsNCiAgICAgICBTaXRlVHlwZUlEOiAyLA0KICAgICAgIE1haW5UeXBlOiAiI21haW4gLnJlc3VsdHM+ZGl2IiwNCiAgICAgICBTdHlwZV9Ob3JtYWw6ICJoMy5wdD5hLCBoMy52clRpdGxlPmEiLA0KICAgICAgIEZhdmljb25UeXBlOiAiY2l0ZVtpZCo9J2NhY2hlcmVzdWx0X2luZm9fJ10iLA0KICAgICAgIEZhdmljb25BZGRUbzogImgzIiwNCiAgICAgICBDb3VudGVyVHlwZTogIi5yZXN1bHRzPmRpdiIsDQogICAgICAgQmxvY2tUeXBlOiAiaDMgYSIsDQogICAgICAgcGFnZXI6ew0KICAgICAgICAgICBuZXh0TGluazogIi8vZGl2W0BpZD1cInBhZ2ViYXJfY29udGFpbmVyXCJdLy9hW0BpZD1cInNvZ291X25leHRcIl0iLA0KICAgICAgICAgICBwYWdlRWxlbWVudDogIi8vZGl2W0BjbGFzcz0ncmVzdWx0cyddL2RpdiIsDQogICAgICAgICAgIEhUX2luc2VydDogWyIvL2RpdltAY2xhc3M9J3Jlc3VsdHMnXSIsIDJdLA0KICAgICAgICAgICByZXBsYWNlRTogImlkKCdwYWdlYmFyX2NvbnRhaW5lcicpIg0KICAgICAgIH0NCiAgIH0sDQogICBoYW9zb3U6IHsNCiAgICAgICBTaXRlVHlwZUlEOiAzLA0KICAgICAgIE1haW5UeXBlOiAiLnJlcy1saXN0IiwNCiAgICAgICBTdHlwZV9Ob3JtYWw6ICIucmVzLWxpc3QgaDM+YSIsDQogICAgICAgRmF2aWNvblR5cGU6ICJjaXRlIiwNCiAgICAgICBGYXZpY29uQWRkVG86ICJoMyIsDQogICAgICAgQ291bnRlclR5cGU6ICIucmVzdWx0cz5kaXYiLA0KICAgICAgIEJsb2NrVHlwZTogImgzIGEiLA0KICAgICAgIHBhZ2VyOnsNCiAgICAgICAgICAgbmV4dExpbms6ICIvL2RpdltAaWQ9J3BhZ2UnXS8vYVt0ZXh0KCk9J8OkwrjCi8OkwrjCgMOpwqHCtT4nXSB8IGlkKCdzbmV4dCcpIiwNCiAgICAgICAgICAgcGFnZUVsZW1lbnQ6ICIvL2RpdltAaWQ9J2NvbnRhaW5lciddL2RpdiIsDQogICAgICAgICAgIEhUX2luc2VydDogWyIvL2RpdltAaWQ9J2NvbnRhaW5lciddIiwgMl0sDQogICAgICAgICAgIHJlcGxhY2VFOiAiaWQoJ3BhZ2UnKSINCiAgICAgICB9DQogICB9LA0KICAgZ29vZ2xlOiB7DQogICAgICAgU2l0ZVR5cGVJRDogNCwNCiAgICAgICBNYWluVHlwZTogIiNyc28gLmciLA0KICAgICAgIEZhdmljb25UeXBlOiAiLmlVaDMwIiwNCiAgICAgICBGYXZpY29uQWRkVG86ICJoMyIsDQogICAgICAgQ291bnRlclR5cGU6ICIjcnNvIC5nIGgzLC5feUU+ZGl2W2NsYXNzfj1fa2tdIGgzIiwNCiAgICAgICBCbG9ja1R5cGU6ICIucmM+ZGl2PmEsICNycywgI3JzbyAuZyBhIiwNCiAgICAgICBwYWdlcjp7DQogICAgICAgICAgIG5leHRMaW5rOiAnaWQoInBubmV4dCIpIHwgaWQoIm5hdmJhciBuYXZjbnQgbmF2IikvL3RkW3NwYW5dL2ZvbGxvd2luZy1zaWJsaW5nOjp0ZFsxXS9hIHwgaWQoIm5uIikvcGFyZW50OjphJywNCiAgICAgICAgICAgcGFnZUVsZW1lbnQ6ICcvL2RpdltAaWQ9InJlcyJdJywNCiAgICAgICAgICAgSFRfaW5zZXJ0OiBbICJjc3M7I3JlcyIsIDIgXSwNCiAgICAgICAgICAgcmVwbGFjZUU6ICcvL2RpdltAaWQ9Im5hdmNudCJdIHwgLy9kaXZbQGlkPSJyY250Il0vL2RpdltAcm9sZT0ibmF2aWdhdGlvbiJdJw0KICAgICAgIH0NCiAgIH0sDQogICBiaW5nOiB7DQogICAgICAgU2l0ZVR5cGVJRDogNSwNCiAgICAgICBNYWluVHlwZTogIiNiX3Jlc3VsdHM+bGkiLA0KICAgICAgIEZhdmljb25UeXBlOiAiLmJfYXR0cmlidXRpb24+Y2l0ZSIsDQogICAgICAgRmF2aWNvbkFkZFRvOiAiaDIiLA0KICAgICAgIENvdW50ZXJUeXBlOiAiI2JfcmVzdWx0cz5saVtjbGFzc349Yl9hbnNdPmgyLCNiX3Jlc3VsdHM+bGlbY2xhc3N+PWJfYWxnb10+aDIsI2JfcmVzdWx0cz5saVtjbGFzc349Yl9hbGdvXT5oMiIsDQogICAgICAgQmxvY2tUeXBlOiAiaDIgYSIsDQogICAgICAgcGFnZXI6ew0KICAgICAgICAgICBuZXh0TGluazogIi8vYVtjb250YWlucyhAY2xhc3MsXCJzYl9wYWdOXCIpXSIsDQogICAgICAgICAgIHBhZ2VFbGVtZW50OiAiaWQoXCJiX3Jlc3VsdHNcIikvbGlbbm90KGNvbnRhaW5zKEBjbGFzcyxcImJfcGFnXCIpIG9yIGNvbnRhaW5zKEBjbGFzcyxcImJfYW5zIGJfdG9wXCIpKV0iLA0KICAgICAgICAgICBIVF9pbnNlcnQ6IFsiaWQoXCJiX3Jlc3VsdHNcIikvbGlbQGNsYXNzPVwiYl9wYWdcIl0iLCAxXSwNCiAgICAgICAgICAgcmVwbGFjZUU6ICJpZChcImJfcmVzdWx0c1wiKS8vbmF2W0Byb2xlPVwibmF2aWdhdGlvblwiXSIsDQogICAgICAgfQ0KICAgfSwNCiAgIGR1Y2s6IHsNCiAgICAgICBTaXRlVHlwZUlEOiAxMCwNCiAgICAgICBNYWluVHlwZTogIiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIiwNCiAgICAgICBGYXZpY29uVHlwZTogIi5yZXN1bHRzX2xpbmtzX2RlZXAgLnJlc3VsdF9fdXJsX19kb21haW4iLA0KICAgICAgIEZhdmljb25BZGRUbzogImgyIiwNCiAgICAgICBDb3VudGVyVHlwZTogIiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyIiwNCiAgICAgICBCbG9ja1R5cGU6ICJoMiBhIiwNCiAgICAgICBwYWdlcjp7DQogICAgICAgICAgIG5leHRMaW5rOiAiLy9hW2NvbnRhaW5zKEBjbGFzcyxcInNiX3BhZ05cIildIiwNCiAgICAgICAgICAgcGFnZUVsZW1lbnQ6ICJpZChcImJfcmVzdWx0c1wiKS9saVtub3QoY29udGFpbnMoQGNsYXNzLFwiYl9wYWdcIikgb3IgY29udGFpbnMoQGNsYXNzLFwiYl9hbnMgYl90b3BcIikpXSIsDQogICAgICAgICAgIEhUX2luc2VydDogWyJpZChcImJfcmVzdWx0c1wiKS9saVtAY2xhc3M9XCJiX3BhZ1wiXSIsIDFdLA0KICAgICAgICAgICByZXBsYWNlRTogImlkKFwiYl9yZXN1bHRzXCIpLy9uYXZbQHJvbGU9XCJuYXZpZ2F0aW9uXCJdIiwNCiAgICAgICB9DQogICB9LA0KICAgZG9nZTogew0KICAgICAgU2l0ZVR5cGVJRDogMTEsDQogICAgICBNYWluVHlwZTogIiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIiwNCiAgICAgIEZhdmljb25UeXBlOiAiLnJlc3VsdHNfbGlua3NfZGVlcCAucmVzdWx0X191cmxfX2RvbWFpbiIsDQogICAgICBGYXZpY29uQWRkVG86ICJoMiIsDQogICAgICBDb3VudGVyVHlwZTogIiNsaW5rc193cmFwcGVyICNsaW5rcyAucmVzdWx0c19saW5rc19kZWVwIGgyIiwNCiAgICAgIEJsb2NrVHlwZTogImgyIGEiLA0KICAgICAgcGFnZXI6ew0KICAgICAgICAgIG5leHRMaW5rOiAiLy9hW2NvbnRhaW5zKEBjbGFzcywgJ3Jlc3VsdC0tbW9yZScpXSIsDQogICAgICAgICAgcGFnZUVsZW1lbnQ6ICJpZCgnbGlua3Nfd3JhcHBlcicpLy9kaXZbY29udGFpbnMoQGNsYXNzLCAncmVzdWx0c19saW5rc19kZWVwJyldIiwNCiAgICAgICAgICBIVF9pbnNlcnQ6IFsiaWQoJ2xpbmtzX3dyYXBwZXInKS8vZGl2W0BpZD0nbGlua3MnXS9kaXZbY29udGFpbnMoQGNsYXNzLCAncmVzdWx0LS1tb3JlJyldIiwgMV0sDQogICAgICAgICAgcmVwbGFjZUU6ICJpZCgnbGlua3Nfd3JhcHBlcicpLy9kaXZbY29udGFpbnMoQGNsYXNzLCAncmVzdWx0LS1tb3JlJyldL2FbY29udGFpbnModGV4dCgpLCAnw6TCuMKLw6TCuMKAw6nCocK1JyldW0BocmVmXSIsDQogICAgICB9DQogICB9LA0KICAgbUJhaWR1OnsNCiAgICAgICBTaXRlVHlwZUlEOiA2LA0KICAgICAgIE1haW5UeXBlOiAiI2JfcmVzdWx0cz5saSIsDQogICAgICAgRmF2aWNvblR5cGU6ICIuYl9hdHRyaWJ1dGlvbj5jaXRlIiwNCiAgICAgICBGYXZpY29uQWRkVG86ICJoMiIsDQogICAgICAgQ291bnRlclR5cGU6ICIjYl9yZXN1bHRzPmxpW2NsYXNzfj1iX2Fuc10+aDIsI2JfcmVzdWx0cz5saVtjbGFzc349Yl9hbGdvXT5oMiwjYl9yZXN1bHRzPmxpW2NsYXNzfj1iX2FsZ29dPmgyIiwNCiAgICAgICBCbG9ja1R5cGU6ICJoMiBhIiwNCiAgIH0sDQogICB6aGlodTogew0KICAgICAgIFNpdGVUeXBlSUQ6IDcsDQogICB9LA0KICAgYmFpZHVfeHVlc2h1OnsNCiAgICAgICBTaXRlVHlwZUlEOiA4LA0KICAgICAgIE1haW5UeXBlOiAiI2NvbnRlbnRfbGVmdCAucmVzdWx0IiwNCiAgICAgICBTdHlwZV9Ob3JtYWw6ICJoMy50PmEsICNyZXN1bHRzIC5jLWNvbnRhaW5lcj4uYy1ibG9ja2EiLA0KICAgICAgIEZhdmljb25UeXBlOiAiLnJlc3VsdC1vcCwgLmMtc2hvd3VybCIsDQogICAgICAgRmF2aWNvbkFkZFRvOiAiaDMiLA0KICAgICAgIENvdW50ZXJUeXBlOiAiI2NvbnRlbnRfbGVmdD4jZG91YmxlPmRpdltzcmNpZF0gKltjbGFzc349dF0sW2NsYXNzfj1vcF9iZXN0X2Fuc3dlcl9xdWVzdGlvbl0sI2NvbnRlbnRfbGVmdD5kaXZbc3JjaWRdICpbY2xhc3N+PXRdLFtjbGFzc349b3BfYmVzdF9hbnN3ZXJfcXVlc3Rpb25dIiwNCiAgICAgICBCbG9ja1R5cGU6ICJoMyBhIiwNCiAgIH0sDQogICBvdGhlcjogew0KICAgICAgIFNpdGVUeXBlSUQ6IDksDQogICB9DQp9DQo="}],"requires":[{"meta":{"name":"vue.min.js","url":"https://cdn.staticfile.org/vue/2.6.11/vue.min.js","ts":1635731540143,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"vue.min.js","url":"https://cdn.jsdelivr.net/npm/vue@2.6.12/dist/vue.min.js","ts":1635731540145,"mimetype":"text/javascript"},"source":""}]},{"name":"百度云去广告，快捷键倍速，免VIP解锁倍速、画质！全网独家！","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_prototypes":false,"noframes":null,"run_at":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["*://pan.baidu.com/disk/*","*://pan.baidu.com/mbox/*","*://pan.baidu.com/play/*","*://yun.baidu.com/disk/*","*://yun.baidu.com/mbox/*","*://yun.baidu.com/play/*","*://pan.baidu.com/s/*","*://yun.baidu.com/s/*","*://pan.baidu.com/share/*","*://yun.baidu.com/share/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-idle","orig_noframes":null,"orig_connects":[]}},"storage":{"ts":1635731699954,"data":{"BaiduYunBeautify":"s{\"SetKey\":true,\"sharePwd\":\"\",\"isFristAutoEnterKey\":true,\"isOldSDK\":false}"}},"enabled":true,"position":2,"file_url":"https://greasyfork.org/scripts/422814-%E7%99%BE%E5%BA%A6%E4%BA%91%E5%8E%BB%E5%B9%BF%E5%91%8A-%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%80%8D%E9%80%9F-%E5%85%8Dvip%E8%A7%A3%E9%94%81%E5%80%8D%E9%80%9F-%E7%94%BB%E8%B4%A8-%E5%85%A8%E7%BD%91%E7%8B%AC%E5%AE%B6/code/%E7%99%BE%E5%BA%A6%E4%BA%91%E5%8E%BB%E5%B9%BF%E5%91%8A%EF%BC%8C%E5%BF%AB%E6%8D%B7%E9%94%AE%E5%80%8D%E9%80%9F%EF%BC%8C%E5%85%8DVIP%E8%A7%A3%E9%94%81%E5%80%8D%E9%80%9F%E3%80%81%E7%94%BB%E8%B4%A8%EF%BC%81%E5%85%A8%E7%BD%91%E7%8B%AC%E5%AE%B6%EF%BC%81.user.js","uuid":"2bd1d360-7f75-4435-89da-8d0b9f960e32","source":"","requires":[{"meta":{"name":"clipboard.min.js","url":"https://cdn.bootcdn.net/ajax/libs/clipboard.js/2.0.6/clipboard.min.js","ts":1635731649322,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"jquery.slim.min.js","url":"https://cdn.bootcdn.net/ajax/libs/jquery/3.6.0/jquery.slim.min.js","ts":1635731649320,"mimetype":"text/javascript"},"source":""}]},{"name":"网盘助手","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_prototypes":false,"noframes":null,"run_at":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["*://pan.baidu.com/*","*://yun.baidu.com/*","*://*.weiyun.com/*","*://*.lanzous.com/*","*://*.lanzoux.com/*","*://cloud.189.cn/*","*://*.newday.me/*","*://*.likestyle.cn/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":[],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-start","orig_noframes":null,"orig_connects":["newday.me","likestyle.cn"]}},"storage":{"ts":1635731699851,"data":{"$config":"o{\"uid\":\"i4mq7oyqu8re2i4zjtznaabn6kae7ov4\"}","$storage":"o{\"version_date\":\"20211101\",\"version_payload\":{\"version\":\"0.4.7\"},\"version_latest\":\"0.4.7\"}"}},"enabled":true,"position":3,"file_url":"https://greasyfork.org/scripts/378301-%E7%BD%91%E7%9B%98%E5%8A%A9%E6%89%8B/code/%E7%BD%91%E7%9B%98%E5%8A%A9%E6%89%8B.user.js","uuid":"7364da70-ae5f-4f0b-bff6-d6f66bfad7ad","source":"","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.staticfile.org/jquery/3.5.0/jquery.min.js","ts":1635731697600,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"purify.min.js","url":"https://cdn.staticfile.org/dompurify/2.0.10/purify.min.js","ts":1635731697515,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"snap.svg-min.js","url":"https://cdn.staticfile.org/snap.svg/0.5.1/snap.svg-min.js","ts":1635731697627,"mimetype":"text/javascript"},"source":""}]},{"name":"(最新完美版)百度网盘下载助手","options":{"check_for_updates":true,"comment":null,"compatopts_for_requires":true,"compat_wrappedjsobject":false,"compat_metadata":false,"compat_foreach":false,"compat_prototypes":false,"noframes":null,"run_at":null,"override":{"use_includes":[],"orig_includes":[],"merge_includes":true,"use_matches":[],"orig_matches":["*://item.taobao.com/*","*://yun.baidu.com/share/*","*://*detail.tmall.com/*","*://pan.baidu.com/share/*","*://*detail.tmall.hk/*","*://*.taobao.com/*","*://yun.baidu.com/s/*","*://*.tmall.com/*","*://pan.baidu.com/s/*","*://*.tmall.hk/*","*://yun.baidu.com/disk/home*","*://*.liangxinyao.com/*","*://pan.baidu.com/disk/home*","*://*.taobao.com/*","*://*.tmall.com/*","*://*.tmall.hk/*","*://*.jd.com/*","*://*.jd.hk/*","*://*.yiyaojd.com/*","*://*.liangxinyao.com/*"],"merge_matches":true,"use_excludes":[],"orig_excludes":["*://login.taobao.com/*","*://pages.tmall.com/*","*://uland.taobao.com"],"merge_excludes":true,"use_connects":[],"merge_connects":true,"use_blockers":[],"orig_run_at":"document-body","orig_noframes":null,"orig_connects":["azkou.cn","idey.cn","baidu.com","baiduyun.wiki","*","baidupcs.com"]}},"storage":{"ts":1635731963288,"data":{"setting_rpc_domain":"shttp://localhost","setting_rpc_port":"s16800","setting_rpc_token":"s","setting_rpc_dir":"sD:","setting_theme_color":"s#09AAFF","setting_init_code":"s","scode":"s"}},"enabled":true,"position":4,"file_url":"https://greasyfork.org/scripts/425895-%E6%9C%80%E6%96%B0%E5%AE%8C%E7%BE%8E%E7%89%88-%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B/code/(%E6%9C%80%E6%96%B0%E5%AE%8C%E7%BE%8E%E7%89%88)%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B.user.js","uuid":"6ce0c5cb-33f0-4a7b-9abf-ddd281536aec","source":"Ly8gPT1Vc2VyU2NyaXB0PT0KLy8gQG5hbWUgICAgICAgICAgICAgICjmnIDmlrDlroznvo7niYgp55m+5bqm572R55uY5LiL6L295Yqp5omLCi8vIEBuYW1lc3BhY2UgICAgICAgICBqaC5pZGV5LmNuCi8vIEB2ZXJzaW9uICAgICAgICAgICA1LjguNQovLyBAYXV0aG9yICAgICAgICAgICAg5YWN6LS5546L5a2QCi8vIEBkZXNjcmlwdGlvbiAgICAgICDjgJDmnIDmlrDlroznvo7niYjjgJHlhY3otLnojrflj5bnvZHnm5jkuIvovb3lnLDlnYDvvIzlpJrlubPlj7DvvIzlj6/kvb/nlKhJRE3vvIxYZG93buetieWkmue6v+eoi+WKoOmAn+W3peWFt+WKoOmAn+S4i+i9ve+8jOaUr+aMgVJQQ+WNj+iurui/nOeoi+S4i+i9vSzml6DpnIDlhbPms6jlhazkvJflj7cs5peg6ZyA6L2s5a2Y6Ieq5bex572R55uYLOebtOaOpeS6q+WPl+mrmOmAn+S4i+i9veOAggovLyBAbWF0Y2ggICAgICAqOi8vaXRlbS50YW9iYW8uY29tLyoKLy8gQG1hdGNoICAgICAgICAgICAgICo6Ly95dW4uYmFpZHUuY29tL3NoYXJlLyoKLy8gQG1hdGNoICAgICAgKjovLypkZXRhaWwudG1hbGwuY29tLyoKLy8gQG1hdGNoICAgICAgICAgICAgICo6Ly9wYW4uYmFpZHUuY29tL3NoYXJlLyoKLy8gQG1hdGNoICAgICAgKjovLypkZXRhaWwudG1hbGwuaGsvKgovLyBAbWF0Y2ggICAgICAgICo6Ly8qLnRhb2Jhby5jb20vKgovLyBAbWF0Y2ggICAgICAgICAgICAgKjovL3l1bi5iYWlkdS5jb20vcy8qCi8vIEBtYXRjaCAgICAgICAgKjovLyoudG1hbGwuY29tLyoKLy8gQG1hdGNoICAgICAgICAgICAgICo6Ly9wYW4uYmFpZHUuY29tL3MvKgovLyBAbWF0Y2ggICAgICAgICo6Ly8qLnRtYWxsLmhrLyoKLy8gQG1hdGNoICAgICAgICAgICAgICo6Ly95dW4uYmFpZHUuY29tL2Rpc2svaG9tZSoKLy8gQG1hdGNoICAgICAgKjovLyoubGlhbmd4aW55YW8uY29tLyoKLy8gQG1hdGNoICAgICAgICAgICAgICo6Ly9wYW4uYmFpZHUuY29tL2Rpc2svaG9tZSoKLy8gQG1hdGNoICAgICAgICAqOi8vKi50YW9iYW8uY29tLyoKLy8gQG1hdGNoICAgICAgICAqOi8vKi50bWFsbC5jb20vKgovLyBAbWF0Y2ggICAgICAgICo6Ly8qLnRtYWxsLmhrLyoKLy8gQG1hdGNoICAgICAgICAqOi8vKi5qZC5jb20vKgovLyBAbWF0Y2ggICAgICAgICo6Ly8qLmpkLmhrLyoKLy8gQG1hdGNoICAgICo6Ly8qLnlpeWFvamQuY29tLyoKLy8gQGhvbWVwYWdlICAgICAgICAgIGh0dHBzOi8vd3d3LmJhaWR1eXVuLndpa2kKLy8gQG1hdGNoICAgICAgICAqOi8vKi5saWFuZ3hpbnlhby5jb20vKgovLyBAZXhjbHVkZSAgICAgICAqOi8vbG9naW4udGFvYmFvLmNvbS8qCi8vIEBleGNsdWRlICAgICAgICo6Ly9wYWdlcy50bWFsbC5jb20vKgovLyBAZXhjbHVkZSAgICAgICAqOi8vdWxhbmQudGFvYmFvLmNvbQovLyBAcmVxdWlyZSAgICAgIGh0dHBzOi8vY2RuLnN0YXRpY2ZpbGUub3JnL2pxdWVyeS8xLjEyLjQvanF1ZXJ5Lm1pbi5qcwovLyBAcmVxdWlyZSAJaHR0cHM6Ly9jZG4uc3RhdGljZmlsZS5vcmcvZWNoYXJ0cy80LjMuMC9lY2hhcnRzLm1pbi5qcwovLyBAcmVxdWlyZSAgICAgIGh0dHBzOi8vY2RuLmJvb3Rjc3MuY29tL2pxdWVyeS5xcmNvZGUvMS4wL2pxdWVyeS5xcmNvZGUubWluLmpzCi8vIEByZXF1aXJlICAgICAgICAgICBodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvbnBtL3N3ZWV0YWxlcnQyQDEwLjE1LjUvZGlzdC9zd2VldGFsZXJ0Mi5hbGwubWluLmpzCi8vIEBjb25uZWN0ICAgICAJICBhemtvdS5jbgovLyBAY29ubmVjdCAgICAgCSAgaWRleS5jbgovLyBAY29ubmVjdCAgICAgICAgICAgYmFpZHUuY29tCi8vIEBjb25uZWN0ICAgICAgICAgICBiYWlkdXl1bi53aWtpCi8vIEBjb25uZWN0ICAgICAgICAgICAqCi8vIEBydW4tYXQgICAgICAgICAgICBkb2N1bWVudC1ib2R5Ci8vIEBjb25uZWN0ICAgICAgICAgICBiYWlkdXBjcy5jb20KLy8gQGdyYW50ICAgICAgICAgICAgIHVuc2FmZVdpbmRvdwovLyBAZ3JhbnQgICAgICAgICAgICAgR01feG1saHR0cFJlcXVlc3QKLy8gQGdyYW50ICAgICAgICAgICAgIEdNX3NldENsaXBib2FyZAovLyBAZ3JhbnQgICAgICAgICAgICAgR01fc2V0VmFsdWUKLy8gQGdyYW50ICAgICAgICAgICAgIEdNX2dldFZhbHVlCi8vIEBncmFudCAgICAgICAgICAgICBHTV9vcGVuSW5UYWIKLy8gQGdyYW50ICAgICAgICAgICAgIEdNX2luZm8KLy8gQGdyYW50ICAgICAgICAgICAgIEdNX3JlZ2lzdGVyTWVudUNvbW1hbmQKLy8gQGdyYW50ICAgICAgICAgICAgIEdNX2Nvb2tpZQovLyBAbGljZW5zZSAgICAgICAgICAgQUdQTAovLyBAb3JpZ2luYWwtc2NyaXB0IGh0dHBzOi8vZ3JlYXN5Zm9yay5vcmcvemgtQ04vc2NyaXB0cy80Mjc2MjgKLy8gQG9yaWdpbmFsLWF1dGhvciDlhY3otLnnjovlrZAKLy8gQG9yaWdpbmFsLWxpY2Vuc2UgTUlUCi8vIEBvcmlnaW5hbC1jaGFuZ2VzIOWinuWKoOS6huaWsOeahOe9keebmOaOpeWPo+WcsOWdgCzlr7nohJrmnKzmt7vliqDkuobkvJjmg6DlirXmn6Xor6Llip/og70sCi8vIEBhbnRpZmVhdHVyZSByZWZlcnJhbC1saW5rIOWGhemDqOmakOiXj+S8mOaDoOWNtwovLyA9PS9Vc2VyU2NyaXB0PT0KCihmdW5jdGlvbigpIHsKCQkndXNlIHN0cmljdCc7CgoJCWNvbnN0IHN0eWxlID0gYAoJCQkJLmd3ZF90YW9iYW8gLmd3ZC1taW5pYmFyLWJnLCAuZ3dkX3RtYWxsIC5nd2QtbWluaWJhci1iZyB7CgkJCQkgICAgZGlzcGxheTogYmxvY2s7CgkJCQl9CgoJCQkJLmlkZXktbWluaWJhcl9iZ3sKCQkJCSAgICBwb3NpdGlvbjogcmVsYXRpdmU7CgkJCQkgICAgbWluLWhlaWdodDogNDBweDsKCQkJCSAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CgkJCQl9CgkJCQkjaWRleV9taW5pYmFyewoJCQkJICAgIHdpZHRoOiA1NjBweDsKCQkJCSAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwoJCQkJICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKCQkJCSAgICBib3JkZXI6IDFweCBzb2xpZCAjZThlOGU4OwoJCQkJICAgIGRpc3BsYXk6IGJsb2NrOwoJCQkJICAgIGxpbmUtaGVpZ2h0OiAzNnB4OwoJCQkJICAgIGZvbnQtZmFtaWx5OiAnTWljcm9zb2Z0IFlhSGVpJyxBcmlhbCxTaW1TdW4haW1wb3J0YW50OwoJCQkJICAgIGhlaWdodDogMzZweDsKCQkJCSAgICBmbG9hdDogbGVmdDsKCQkJCX0KCQkJCSNpZGV5X21pbmliYXIgLmlkZXlfd2Vic2l0ZSB7CgkJCQkgICAgd2lkdGg6IDQ4cHg7CgkJCQkgICAgZmxvYXQ6IGxlZnQ7CgkJCQkgICAgaGVpZ2h0OiAzNnB4OwoJCQkJfQoJCQkJI2lkZXlfbWluaWJhciAubWluaWJhci10YWIgewoJCQkJICAgIGZsb2F0OiBsZWZ0OwoJCQkJICAgIGhlaWdodDogMzZweDsKCQkJCSAgICBib3JkZXItbGVmdDogMXB4IHNvbGlkICNlZGYxZjIhaW1wb3J0YW50OwoJCQkJICAgIHBhZGRpbmc6IDA7CgkJCQkgICAgbWFyZ2luOiAwOwoJCQkJICAgIHRleHQtYWxpZ246IGNlbnRlcjsKCQkJCX0KCgkJCQkjaWRleV9taW5pYmFyIC5pZGV5X3dlYnNpdGUgZW0gewoJCQkJICAgIGJhY2tncm91bmQtcG9zaXRpb246IC0xMHB4IC0yOHB4OwoJCQkJICAgIGhlaWdodDogMzZweDsKCQkJCSAgICB3aWR0aDogMjVweDsKCQkJCSAgICBmbG9hdDogbGVmdDsKCQkJCSAgICBtYXJnaW4tbGVmdDogMTJweDsKCQkJCX0KCgkJCQkuc2V0dGluZy1iZyB7CgkJCQkgICAgYmFja2dyb3VuZDogdXJsKGh0dHBzOi8vY2RuLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMveGJ0L25ld193aXNobGlzdF9wZzVfMi5wbmcpIG5vLXJlcGVhdDsKCQkJCX0KCgkJCQkjaWRleV9taW5pYmFyIC5taW5pYmFyLXRhYiB7CgkJCQkgICAgZmxvYXQ6IGxlZnQ7CgkJCQkgICAgaGVpZ2h0OiAzNnB4OwoJCQkJICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgI2VkZjFmMiFpbXBvcnRhbnQ7CgkJCQkgICAgcGFkZGluZzogMDsKCQkJCSAgICBtYXJnaW46IDA7CgkJCQkgICAgd2lkdGg6IDEzNHB4OwoJCQkJfQoJCQkJI2lkZXlfcHJpY2VfaGlzdG9yeSBzcGFuIHsKCQkJCSAgICBmbG9hdDogbGVmdDsKCQkJCSAgICB3aWR0aDogMTAwJTsKCQkJCSAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CgkJCQkgICAgbGluZS1oZWlnaHQ6IDM2cHg7CgkJCQkgICAgY29sb3I6ICM2NjY7CgkJCQkgICAgZm9udC1zaXplOiAxNHB4OwoJCQkJfQoKCQkJCSNtaW5pX3ByaWNlX2hpc3RvcnkgLnRyZW5kLWVycm9yLWluZm8tbWluaSB7CgkJCQkgICAgcG9zaXRpb246IGFic29sdXRlOwoJCQkJICAgIHRvcDogMzdweDsKCQkJCSAgICBsZWZ0OiAwcHg7CgkJCQkgICAgd2lkdGg6IDEwMCU7CgkJCQkgICAgYmFja2dyb3VuZDogI2ZmZjsKCQkJCSAgICB6LWluZGV4OiA5OTk5OTk5OTsKCQkJCSAgICBoZWlnaHQ6IDI2OHB4OwoJCQkJICAgIGJveC1zaGFkb3c6IDBweCA1cHggMTVweCAwIHJnYigyMyAyNSAyNyAvIDE1JSk7CgkJCQkgICAgYm9yZGVyLXJhZGl1czogMCAwIDRweCA0cHg7CgkJCQkgICAgd2lkdGg6NTU5cHg7CgkJCQkgICAgYm9yZGVyOiAxcHggc29saWQgI2RkZDsKCQkJCSAgICBib3JkZXItdG9wOiBub25lOwoJCQkJCWRpc3BsYXk6bm9uZTsKCgkJCQl9CgkJCQkubWluaWJhci1idG4tYm94IHsKCQkJCSAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CgkJCQkgICAgbWFyZ2luOiAwIGF1dG87CgkJCQkgICAgZmxvYXQ6IG5vbmU7CgkJCQl9CgkJCQkjbWluaV9wcmljZV9oaXN0b3J5IC5lcnJvci1wIHsKCQkJCSAgICAgIHdpZHRoOiA5NXB4OwoJCQkJICAgICAgbWFyZ2luOiAxMTBweCBhdXRvOwoJCQkJICAgICAgaGVpZ2h0OiAyMHB4OwoJCQkJICAgICAgbGluZS1oZWlnaHQ6IDIwcHg7CgkJCQkgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CgkJCQkgICAgICBjb2xvcjogIzAwMCFpbXBvcnRhbnQ7CgkJCQkgICAgICBib3JkZXI6IDFweCBzb2xpZCAjMzMzOwoJCQkJICAgICAgYm9yZGVyLXJhZGl1czogNXB4OwoJCQkJICAgICAgZGlzcGxheTogYmxvY2s7CgkJCQkgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmUhaW1wb3J0YW50OwoJCQkJICAgIH0KCQkJCSAjbWluaV9wcmljZV9oaXN0b3J5OmhvdmVyIC50cmVuZC1lcnJvci1pbmZvLW1pbmkgewoJCQkJICAgICAgZGlzcGxheTogYmxvY2s7CgkJCQkgICAgfQoKCQkJCS5jb2xsZWN0X21haWxvdXRfaWNvbiB7CgkJCQkgICAgYmFja2dyb3VuZC1wb3NpdGlvbjogLTI0N3B4IC0xMzRweDsKCQkJCSAgICB3aWR0aDogMThweDsKCQkJCX0KCgkJCQkjaWRleV9taW5pX2NvbXBhcmVfZGV0YWlsIGxpICosIC5taW5pLWNvbXBhcmUtaWNvbiwgLm1pbmliYXItYnRuLWJveCAqIHsKCQkJCSAgICBmbG9hdDogbGVmdDsKCQkJCX0KCQkJCS5wYW5lbC13cmFwewoJCQkJCXdpZHRoOiAxMDAlOwoJCQkJCWhlaWdodDogMTAwJTsKCQkJCX0KCQkJCS5jb2xsZWN0X21haWxvdXRfaWNvbiwgLm1pbmktY29tcGFyZS1pY29uIHsKCQkJCSAgICBoZWlnaHQ6IDE4cHg7CgkJCQkgICAgbWFyZ2luLXJpZ2h0OiA4cHg7CgkJCQkgICAgbWFyZ2luLXRvcDogOXB4OwoJCQkJfQoJCQkJLmFsbC1wcm9kdWN0cyB1bCBsaSB7CgkJCQkgICAgZmxvYXQ6IGxlZnQ7CgkJCQkgICAgd2lkdGg6IDEzOHB4OwoJCQkJICAgIGhlaWdodDogMjYycHg7CgkJCQkgICAgb3ZlcmZsb3c6IGhpZGRlbjsKCQkJCSAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CgkJCQl9CgkJCQkuYWxsLXByb2R1Y3RzIHVsIGxpIC5zbWFsbC1pbWcgewoJCQkJICAgIHRleHQtYWxpZ246IGNlbnRlcjsKCQkJCSAgICBkaXNwbGF5OiB0YWJsZS1jZWxsOwoJCQkJICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CgkJCQkgICAgbGluZS1oZWlnaHQ6IDkwcHg7CgkJCQkgICAgd2lkdGg6IDEwMCU7CgkJCQkgICAgaGVpZ2h0OiAxMDBweDsKCQkJCSAgICBwb3NpdGlvbjogcmVsYXRpdmU7CgkJCQkgICAgZmxvYXQ6IGxlZnQ7CgkJCQkgICAgbWFyZ2luLXRvcDogMjNweDsKCQkJCX0KCQkJCS5hbGwtcHJvZHVjdHMgdWwgbGkgYSBpbWcgewoJCQkJICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7CgkJCQkgICAgZGlzcGxheTogaW5saW5lLWJsb2NrOwoJCQkJICAgIHdpZHRoOiBhdXRvOwoJCQkJICAgIGhlaWdodDogYXV0bzsKCQkJCSAgICBtYXgtaGVpZ2h0OiAxMDBweDsKCQkJCSAgICBtYXgtd2lkdGg6IDEwMHB4OwoJCQkJICAgIGZsb2F0OiBub25lOwoJCQkJfQoJCQkJLmFsbC1wcm9kdWN0cyB1bCBsaSBhLmIyYy1vdGhlci1pbmZvIHsKCQkJCSAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CgkJCQkgICAgZmxvYXQ6IGxlZnQ7CgkJCQkgICAgaGVpZ2h0OiAxNnB4OwoJCQkJICAgIGxpbmUtaGVpZ2h0OiAxNnB4OwoJCQkJICAgIG1hcmdpbi10b3A6IDEzcHg7CgkJCQl9CgoJCQkJLmIyYy1vdGhlci1pbmZvIC5nd2QtcHJpY2UgewoJCQkJICAgIGhlaWdodDogMTdweDsKCQkJCSAgICBsaW5lLWhlaWdodDogMTdweDsKCQkJCSAgICBmb250LXNpemU6IDE2cHg7CgkJCQkgICAgY29sb3I6ICNFNDM5M0M7CgkJCQkgICAgZm9udC13ZWlnaHQ6IDcwMDsKCQkJCQl3aWR0aDogMTAwJTsKCQkJCQlkaXNwbGF5OiBibG9jazsKCQkJCX0KCQkJCS5iMmMtb3RoZXItaW5mbyAuYjJjLXRsZSB7CgkJCQkgICAgaGVpZ2h0OiAzOHB4OwoJCQkJICAgIGxpbmUtaGVpZ2h0OiAxOXB4OwoJCQkJICAgIG1hcmdpbi10b3A6IDhweDsKCQkJCSAgICBmb250LXNpemU6IDEycHg7CgkJCQkgICAgd2lkdGg6IDEzOHB4OwoJCQkJICAgIG1hcmdpbi1sZWZ0OiAyOXB4OwoJCQkJfQoJCQkJIC5iamdleHQtbWluaS10cmVuZCBzcGFuIHsKCQkJCSAgICAgIGZsb2F0OiBsZWZ0OwoJCQkJICAgICAgLyp3aWR0aDogMTAwJTsqLwoJCQkJICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwoJCQkJICAgICAgbGluZS1oZWlnaHQ6IDM2cHg7CgkJCQkgICAgICBjb2xvcjogIzY2NjsKCQkJCSAgICAgIGZvbnQtc2l6ZTogMTRweDsKCQkJCSAgICB9CgkJCQkgICAgLmJqZ2V4dC1taW5pLXRyZW5kIC50cmVuZC1lcnJvci1pbmZvLW1pbmkgewoJCQkJICAgICAgcG9zaXRpb246IGFic29sdXRlOwoJCQkJICAgICAgdG9wOiAzN3B4OwoJCQkJICAgICAgbGVmdDogMHB4OwoJCQkJICAgICAgd2lkdGg6IDEwMCU7CgkJCQkgICAgICBiYWNrZ3JvdW5kOiAjZmZmOwoJCQkJICAgICAgei1pbmRleDogOTk5OTk5OTk7CgkJCQkgICAgICBoZWlnaHQ6IDI2OHB4OwoJCQkJICAgICAgZGlzcGxheTogbm9uZTsKCQkJCSAgICAgIGJveC1zaGFkb3c6IDBweCA1cHggMTVweCAwIHJnYmEoMjMsMjUsMjcsMC4xNSk7CgkJCQkgICAgICBib3JkZXItcmFkaXVzOiAwIDAgNHB4IDRweDsKCQkJCSAgICAgIHdpZHRoOiA0NjBweDsKCQkJCSAgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CgkJCQkgICAgICBib3JkZXItdG9wOiBub25lOwoJCQkJICAgIH0KCQkJCSAgICAuYmpnZXh0LW1pbmktdHJlbmQgLmVycm9yLXAgewoJCQkJICAgICAgd2lkdGg6IDEwMCU7CgkJCQkgICAgICBmbG9hdDogbGVmdDsKCQkJCSAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKCQkJCSAgICAgIG1hcmdpbi10b3A6IDQ1cHg7CgkJCQkgICAgICBmb250LXNpemU6IDE0cHg7CgkJCQkgICAgICBjb2xvcjogIzY2NjsKCQkJCSAgICB9CgkJCQkgICAgLmJqZ2V4dC1taW5pLXRyZW5kIC5lcnJvci1zcCB7CgkJCQkgICAgICB3aWR0aDogOTVweDsKCQkJCSAgICAgIG1hcmdpbjogMTEwcHggYXV0bzsKCQkJCSAgICAgIGhlaWdodDogMjBweDsKCQkJCSAgICAgIGxpbmUtaGVpZ2h0OiAyMHB4OwoJCQkJICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwoJCQkJICAgICAgY29sb3I6ICMwMDAhaW1wb3J0YW50OwoJCQkJICAgICAgYm9yZGVyOiAxcHggc29saWQgIzMzMzsKCQkJCSAgICAgIGJvcmRlci1yYWRpdXM6IDVweDsKCQkJCSAgICAgIGRpc3BsYXk6IGJsb2NrOwoJCQkJICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lIWltcG9ydGFudDsKCQkJCSAgICB9CgkJCQkgICAgLmJqZ2V4dC1taW5pLXRyZW5kOmhvdmVyIC50cmVuZC1lcnJvci1pbmZvLW1pbmkgewoJCQkJICAgICAgZGlzcGxheTogYmxvY2s7CgkJCQkgICAgfQoKCgkJCQkgICAgI2NvdXBvbl9ib3guY291cG9uLWJveDEgewoJCQkJICAgICAgd2lkdGg6IDU2MHB4OwoJCQkJICAgICAgaGVpZ2h0OiAxMjVweDsKCQkJCSAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7CgkJCQkgICAgICBib3JkZXI6IDFweCBzb2xpZCAjZThlOGU4OwoJCQkJICAgICAgYm9yZGVyLXRvcDogbm9uZTsKCQkJCSAgICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsKCQkJCSAgICAgIG1hcmdpbjogMHB4OwoJCQkJICAgICAgcGFkZGluZzogMHB4OwoJCQkJICAgICAgZmxvYXQ6IGxlZnQ7CgkJCQkgICAgICBkaXNwbGF5OiBibG9jazsKCQkJCSAgICB9CgkJCQkgICAgI2NvdXBvbl9ib3g6YWZ0ZXIgewoJCQkJICAgICAgZGlzcGxheTogYmxvY2s7CgkJCQkgICAgICBjb250ZW50OiAiIjsKCQkJCSAgICAgIGNsZWFyOiBib3RoOwoJCQkJICAgIH0KCQkJCSAgICAuaWRleV90bWFsbCAjaWRleV9taW5pYmFyIHsKCQkJCSAgICAgIGZsb2F0OiBub25lOwoJCQkJICAgIH0KCgoJCQkJICAgIC5taW5pY291cG9uX2RldGFpbCB7CgkJCQkgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7CgkJCQkgICAgICB0b3A6IDM1cHg7CgkJCQkgICAgICByaWdodDogLTFweDsKCQkJCSAgICAgIGhlaWdodDogMTUwcHg7CgkJCQkgICAgICB3aWR0aDogMTMycHg7CgkJCQkgICAgICBkaXNwbGF5OiBub25lOwoJCQkJICAgICAgei1pbmRleDogOTk5OTk5OTk5OTk7CgkJCQkgICAgICBiYWNrZ3JvdW5kOiAjRkZGN0Y4OwoJCQkJICAgICAgYm9yZGVyOiAxcHggc29saWQgI0Y5NTc3NDsKCQkJCSAgICB9CgkJCQkgICAgI2NvdXBvbl9ib3g6aG92ZXIgLm1pbmljb3Vwb25fZGV0YWlsIHsKCQkJCSAgICAgIGRpc3BsYXk6IGJsb2NrOwoJCQkJICAgIH0KCQkJCSAgICAubWluaWNvdXBvbl9kZXRhaWwgaW1nIHsKCQkJCSAgICAgIHdpZHRoOiAxMTRweDsKCQkJCSAgICAgIGhlaWdodDogMTE0cHg7CgkJCQkgICAgICBmbG9hdDogbGVmdDsKCQkJCSAgICAgIG1hcmdpbi1sZWZ0OiA5cHg7CgkJCQkgICAgICBtYXJnaW4tdG9wOiA5cHg7CgkJCQkgICAgfQoJCQkJICAgIC5taW5pY291cG9uX2RldGFpbCBzcGFuIHsKCQkJCSAgICAgIGZvbnQtc2l6ZTogMTRweDsKCQkJCSAgICAgIGNvbG9yOiAjRjk1NTcyOwoJCQkJICAgICAgbGV0dGVyLXNwYWNpbmc6IDA7CgkJCQkgICAgICBmb250LXdlaWdodDogYm9sZDsKCQkJCSAgICAgIGZsb2F0OiBsZWZ0OwoJCQkJICAgICAgaGVpZ2h0OiAxMnB4OwoJCQkJICAgICAgbGluZS1oZWlnaHQ6IDE0cHg7CgkJCQkgICAgICB3aWR0aDogMTAwJTsKCQkJCSAgICAgIG1hcmdpbi10b3A6IDZweDsKCQkJCSAgICAgIHRleHQtYWxpZ246IGNlbnRlcjsKCQkJCSAgICB9CgkJCQkgICAgLmNvdXBvbi1ib3gxICogewoJCQkJICAgICAgZm9udC1mYW1pbHk6ICdNaWNyb3NvZnQgWWFIZWknLEFyaWFsLFNpbVN1bjsKCQkJCSAgICB9CgkJCQkgICAgLmNvdXBvbi1pY29uIHsKCQkJCSAgICAgIGZsb2F0OiBsZWZ0OwoJCQkJICAgICAgd2lkdGg6IDIwcHg7CgkJCQkgICAgICBoZWlnaHQ6IDIwcHg7CgkJCQkgICAgICBiYWNrZ3JvdW5kOiB1cmwoJ2h0dHBzOi8vY2RuLmd3ZGFuZy5jb20vaW1hZ2VzL2V4dGVuc2lvbnMvbmV3YmFyL2NvdXBvbl9pY29uLnBuZycpIDBweCAwcHggbm8tcmVwZWF0OwoJCQkJICAgICAgbWFyZ2luOiA1MHB4IDhweCA5cHggMTJweDsKCQkJCSAgICB9CgkJCQkgICAgI2NvdXBvbl9ib3ggLmNvdXBvbi10bGUgewoJCQkJICAgICAgY29sb3I6ICNGRjNCNUM7CgkJCQkgICAgICBmb250LXNpemU6IDI0cHg7CgkJCQkgICAgICBtYXJnaW4tcmlnaHQ6IDExcHg7CgkJCQkgICAgICBmbG9hdDogbGVmdDsKCQkJCSAgICAgIGhlaWdodDogMTE0cHg7CgkJCQkgICAgICBvdmVyZmxvdzogaGlkZGVuOwoJCQkJICAgICAgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7CgkJCQkgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwOwoJCQkJICAgICAgd2lkdGg6IDM3NXB4OwoJCQkJICAgICAgbGluZS1oZWlnaHQ6IDExNHB4OwoJCQkJICAgICAgdGV4dC1kZWNvcmF0aW9uOiBub25lIWltcG9ydGFudDsKCQkJCSAgICB9CgkJCQkgICAgI2NvdXBvbl9ib3ggLmNvdXBvbi1yb3d7CgkJCQkgICAgICAgICBjb2xvcjogI0ZGM0I1QzsKCQkJCSAgICAgIGZvbnQtc2l6ZTogMTJweDsKCQkJCSAgICAgIG1hcmdpbi1yaWdodDogMTFweDsKCQkJCSAgICAgIGZsb2F0OiBsZWZ0OwoJCQkJICAgICAgaGVpZ2h0OiA2MHB4OwoJCQkJICAgICAgb3ZlcmZsb3c6IGhpZGRlbjsKCQkJCSAgICAgIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzOwoJCQkJICAgICAgd2hpdGUtc3BhY2U6IG5vd3JhcDsKCQkJCSAgICAgIHdpZHRoOiAxMDAlOwoJCQkJICAgICAgbGluZS1oZWlnaHQ6IDYwcHg7CgkJCQkgICAgICB0ZXh0LWRlY29yYXRpb246IG5vbmUhaW1wb3J0YW50OwoJCQkJICAgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CgkJCQkgICAgfQoJCQkJICAgICNjb3Vwb25fYm94IC5jb3Vwb24tdGxlICogewoJCQkJICAgICAgY29sb3I6ICNmMTU2NzI7CgkJCQkgICAgfQoJCQkJICAgICNjb3Vwb25fYm94IC5jb3Vwb24tdGxlIHNwYW4gewoJCQkJICAgICAgbWFyZ2luLXJpZ2h0OiA1cHg7CgkJCQkgICAgICBmb250LXdlaWdodDogYm9sZDsKCQkJCSAgICAgIGZvbnQtc2l6ZTogMTRweDsKCQkJCSAgICB9CgkJCQkgICAgLmNvdXBvbl9naWYgewoJCQkJICAgICAgYmFja2dyb3VuZDogdXJsKCdodHRwczovL2Nkbi5nd2RhbmcuY29tL2ltYWdlcy9leHRlbnNpb25zL25ld2Jhci90dXJuLmdpZicpIDBweCAwcHggbm8tcmVwZWF0OwoJCQkJICAgICAgZmxvYXQ6IHJpZ2h0OwoJCQkJICAgICAgaGVpZ2h0OiAyMHB4OwoJCQkJICAgICAgd2lkdGg6IDU2cHg7CgkJCQkgICAgICBtYXJnaW4tdG9wOiA0OXB4OwoJCQkJICAgIH0KCQkJCSAgICAuY2xpY2syZ2V0IHsKCQkJCSAgICAgIGJhY2tncm91bmQ6IHVybCgnaHR0cHM6Ly9jZG4uZ3dkYW5nLmNvbS9pbWFnZXMvZXh0ZW5zaW9ucy9uZXdiYXIvY291cG9uXzAxLnBuZycpIDBweCAwcHggbm8tcmVwZWF0OwoJCQkJICAgICAgZmxvYXQ6IGxlZnQ7CgkJCQkgICAgICBoZWlnaHQ6IDMwcHg7CgkJCQkgICAgICB3aWR0aDogOTZweDsKCQkJCSAgICAgIG1hcmdpbi10b3A6IDQzcHg7CgkJCQkgICAgfQoJCQkJICAgIC5jbGljazJnZXQgc3BhbiB7CgkJCQkgICAgICBoZWlnaHQ6IDI0cHg7CgkJCQkgICAgICBmbG9hdDogbGVmdDsKCQkJCSAgICAgIG1hcmdpbi1sZWZ0OiAxcHg7CgkJCQkgICAgfQoJCQkJICAgIC5jMmctc3AxIHsKCQkJCSAgICAgIHdpZHRoOiA1MHB4OwoJCQkJICAgICAgY29sb3I6ICNGRjNCNUM7CgkJCQkgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CgkJCQkgICAgICBmb250LXNpemU6IDE0cHg7CgkJCQkgICAgICBsaW5lLWhlaWdodDogMjRweCFpbXBvcnRhbnQ7CgkJCQkgICAgfQoJCQkJICAgIC5jMmctc3AyIHsKCQkJCSAgICAgIHdpZHRoOiA0NHB4OwoJCQkJICAgICAgbGluZS1oZWlnaHQ6IDI0cHghaW1wb3J0YW50OwoJCQkJICAgICAgY29sb3I6ICNmZmYhaW1wb3J0YW50OwoJCQkJICAgICAgdGV4dC1hbGlnbjogY2VudGVyOwoJCQkJICAgIH0KCQkJCSAgICBkaXYjaWRleV93aXNobGlzdF9kaXYuaWRleV93aXNobGlzdF9kaXYgewoJCQkJICAgICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDBweDsKCQkJCSAgICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDBweDsKCQkJCSAgICB9CgkJCQkgICAgI3FyY29kZXsKCQkJCSAgICAgICAgIGZsb2F0OiBsZWZ0OwoJCQkJICAgICAgICB3aWR0aDogMTI1cHg7CgkJCQkgICAgICAgIG1hcmdpbi10b3A6M3B4OwoJCQkJICAgIH0KCgoJCQkJICAgIC5lbG1fYm94ewoJCQkJICAgICAgICBoZWlnaHQ6IDM3cHg7CgkJCQkgICAgIGJvcmRlcjogMXB4IHNvbGlkICNkZGQ7CgkJCQkgICAgIHdpZHRoOiA0NjBweDsKCQkJCSAgICAgbGluZS1oZWlnaHQ6IDM3cHg7CgkJCQkgICAgIG1hcmdpbi1ib3R0b206IDNweDsKCQkJCSAgICAgICAgIGJhY2tncm91bmQtY29sb3I6ICNmZjAwMzY7CgkJCQkgICAgICAgICAgICAgZm9udC1zaXplOiAxNXB4OwoJCQkJICAgIH0KCQkJCSAgICAuZWxtX2JveCBzcGFuewoJCQkJICAgICAgICAgICAgd2lkdGg6IDM0MnB4OwoJCQkJICAgIHRleHQtYWxpZ246IGNlbnRlcjsKCQkJCSAgICBkaXNwbGF5OiBibG9jazsKCQkJCSAgICBmbG9hdDogbGVmdDsKCQkJCSAgICBjb2xvcjogcmVkOwoJCQkJICAgIGNvbG9yOiB3aGl0ZTsKCQkJCSAgICB9YAoJCXZhciBwYWdlVHlwZSA9ICcnLAoJCQlzZWxlY3RGaWxlID0gW10sCgkJCXBhcmFtcyA9IHt9LAoJCQltb2RlID0gJycsCgkJCXdpZHRoID0gODAwLAoJCQlwYW4gPSB7fSwKCQkJY29sb3IgPSAnJywKCQkJZG9jID0gJChkb2N1bWVudCksCgkJCXByb2dyZXNzID0ge30sCgkJCXJlcXVlc3QgPSB7fSwKCQkJaW5zID0ge30sCgkJCWlkbSA9IHt9LAoJCQlzdGFydCA9ICcnLAoJCQllbmQgPSAnJzsKCQl2YXIgc3R5bGVzID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc3R5bGUnKQoJCXN0eWxlcy50eXBlID0gJ3RleHQvY3NzJwoJCXN0eWxlcy5pbm5lckhUTUwgPSBzdHlsZTsKCQlkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnaGVhZCcpLml0ZW0oMCkuYXBwZW5kQ2hpbGQoc3R5bGVzKQoKCQljb25zdCBzY3JpcHRJbmZvID0gR01faW5mby5zY3JpcHQ7CgkJdmFyIHNlbGVjdG9yTGlzdCA9IFtdOwoJCWNvbnN0IHZlcnNpb24gPSBzY3JpcHRJbmZvLnZlcnNpb247CgkJY29uc3QgYXV0aG9yID0gc2NyaXB0SW5mby5hdXRob3I7CgkJY29uc3QgbmFtZSA9IHNjcmlwdEluZm8ubmFtZTsKCQl2YXIgb2JqID0ge307CgpvYmouaW5pdFN0eWxlID0gZnVuY3Rpb24oKSB7CgkJdmFyIHN0eWxlcyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJykKCQlzdHlsZXMudHlwZSA9ICd0ZXh0L2NzcycKCQlzdHlsZXMuaW5uZXJIVE1MID0gc3R5bGU7CgkJZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2hlYWQnKS5pdGVtKDApLmFwcGVuZENoaWxkKHN0eWxlcykKCX0KCQlvYmoub25jbGlja3M9ZnVuY3Rpb24obGluaykgewoJCQlpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3JlZGlyZWN0X2Zvcm0nKSkgewoJCQkJdmFyIGZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncmVkaXJlY3RfZm9ybScpOwoJCQkJZm9ybS5hY3Rpb24gPSAnaHR0cHM6Ly9qZC5pZGV5LmNuL3JlZC5odG1sP3VybD0nICsgZW5jb2RlVVJJQ29tcG9uZW50KGxpbmspOwoJCQl9IGVsc2UgewoJCQkJdmFyIGZvcm0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdmb3JtJyk7CgkJCQkJZm9ybS5hY3Rpb24gPSAnaHR0cHM6Ly9qZC5pZGV5LmNuL3JlZC5odG1sP3VybD0nICsgZW5jb2RlVVJJQ29tcG9uZW50KGxpbmspOwoJCQkJZm9ybS50YXJnZXQgPSAnX2JsYW5rJzsKCgkJCQlmb3JtLm1ldGhvZCA9ICdQT1NUJzsKCQkJCWZvcm0uc2V0QXR0cmlidXRlKCJpZCIsICdyZWRpcmVjdF9mb3JtJyk7CgkJCQlkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGZvcm0pOwoKCQkJfQoJCQlmb3JtLnN1Ym1pdCgpOwoJCQlmb3JtLmFjdGlvbiA9ICIiOwoJCQlmb3JtLnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoZm9ybSk7CgoKCQl9CgoJCWZ1bmN0aW9uIHRyaW0oc3RyKXsKCQkgICAgcmV0dXJuIHN0ci5yZXBsYWNlKC8oXlxzKil8KFxzKiQpL2csICIiKTsKCQl9CgkJdmFyIGluZGV4X251bSA9IDA7CgkJdmFyIGl0ZW0gPSBbXTsKCQl2YXIgdXJscyA9IFtdOwogIG9iai5HZXRRdWVyeVN0cmluZz1mdW5jdGlvbihuYW1lKXsKICAgICAgICAgICAgdmFyIHJlZz1ldmFsKCIvIituYW1lKyIvZyIpOwogICAgICAgICAgICB2YXIgciA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guc3Vic3RyKDEpOwogICAgICAgICAgICB2YXIgZmxhZz1yZWcudGVzdChyKTsKICAgICAgICAgICAgaWYoZmxhZyl7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfWVsc2V7CiAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgIH0KICAgICAgICB9OwoJCW9iai5nZXRfdXJsPWZ1bmN0aW9uKCkgewoJCQlpdGVtW2luZGV4X251bV0gPSBbXTsKCQkJdXJsc1tpbmRleF9udW1dID0gW107CgkJCSQoIiNKX2dvb2RzTGlzdCBsaSIpLmVhY2goZnVuY3Rpb24oaW5kZXgpIHsKCQkJCWlmICgkKHRoaXMpLmF0dHIoJ2RhdGEtdHlwZScpICE9ICd5ZXMnKSB7CgkJCQkJdmFyIHNrdWlkID0gJCh0aGlzKS5hdHRyKCdkYXRhLXNrdScpOwoJCQkJCXZhciBpdGVtdXJsID0gJy8vaXRlbS5qZC5jb20vJytza3VpZCsnLmh0bWwnOwoJCQkJaWYgKHNrdWlkICE9IHVuZGVmaW5lZCkgewoJCQkJCQlpZiAodXJsc1tpbmRleF9udW1dLmxlbmd0aCA8IDQpIHsKCQkJCQkJCWl0ZW1baW5kZXhfbnVtXS5wdXNoKCQodGhpcykpOwoJCQkJCQkJdXJsc1tpbmRleF9udW1dLnB1c2goaXRlbXVybCk7CgkJCQkJCQkkKHRoaXMpLmF0dHIoJ2RhdGEtdHlwZScsICd5ZXMnKTsKCQkJCQkJfQoKCgkJCQkJfQoJCQkJfQoKCQkJfSkKCgkJCSQoIiNwbGlzdCBsaSIpLmVhY2goZnVuY3Rpb24oaW5kZXgpIHsKCQkJCWlmICgkKHRoaXMpLmF0dHIoJ2RhdGEtdHlwZScpICE9ICd5ZXMnKSB7CgkJCQkJdmFyIHNrdWlkID0gJCh0aGlzKS5maW5kKCcuai1za3UtaXRlbScpLmF0dHIoJ2RhdGEtc2t1Jyk7CgkJCQkJdmFyIGl0ZW11cmwgPSAnLy9pdGVtLmpkLmNvbS8nK3NrdWlkKycuaHRtbCc7CgkJCQkJaWYgKHNrdWlkICE9IHVuZGVmaW5lZCkgewoJCQkJCQlpZiAodXJsc1tpbmRleF9udW1dLmxlbmd0aCA8IDQpIHsKCQkJCQkJCWl0ZW1baW5kZXhfbnVtXS5wdXNoKCQodGhpcykpOwoJCQkJCQkJdXJsc1tpbmRleF9udW1dLnB1c2goaXRlbXVybCk7CgkJCQkJCQkkKHRoaXMpLmF0dHIoJ2RhdGEtdHlwZScsICd5ZXMnKTsKCQkJCQkJfQoKCgkJCQkJfQoJCQkJfQoKCQkJfSkKCgkJCSQoIi5tLWFzaWRlIC5hc2lkZS1iYXIgbGkiKS5lYWNoKGZ1bmN0aW9uKGluZGV4KSB7CgkJCQlpZiAoJCh0aGlzKS5hdHRyKCdkYXRhLXR5cGUnKSAhPSAneWVzJykgewoJCQkJCXZhciBpdGVtdXJsID0gJCh0aGlzKS5maW5kKCJhIikuYXR0cignaHJlZicpOwoJCQkJCWlmIChpdGVtdXJsICE9ICcnKSB7CgkJCQkJICAgIGlmKGl0ZW11cmwuaW5kZXhPZigiLy9jY2MteC5qZC5jb20iKSAhPS0xKXsKCQkJCQkJICAgIHZhciBza3VfYz0kKHRoaXMpLmF0dHIoJ3NrdV9jJyk7CgkJCQkJCSAgICBpZihza3VfYyA9PXVuZGVmaW5lZCl7CgkJCQkJCSAgICAgICAgdmFyIGFycj1bXTsKCQkJCQkgICAgICAgICAgICB2YXIgc3RyPSQodGhpcykuYXR0cignb25jbGljaycpOwoJCQkJCSAgICAgICAgICAgIGFycj1zdHIuc3BsaXQoIiwiKTsKCQkJCQkgICAgICAgICAgICBza3VfYz10cmltKGFycls2XS5yZXBsYWNlKC9cIi9nLCIiKSk7CgkJCQkJICAgICAgICAgICAgIGl0ZW11cmw9Jy8vaXRlbS5qZC5jb20vJytza3VfYysnLmh0bWwnOwoJCQkJCQkgICAgfQoKCQkJCQkgICAgfQoJCQkJCSAgICBpZiAodXJsc1tpbmRleF9udW1dLmxlbmd0aCA8IDQpIHsKCQkJCQkJCWl0ZW1baW5kZXhfbnVtXS5wdXNoKCQodGhpcykpOwoJCQkJCQkJdXJsc1tpbmRleF9udW1dLnB1c2goaXRlbXVybCk7CgkJCQkJCQkkKHRoaXMpLmF0dHIoJ2RhdGEtdHlwZScsICd5ZXMnKTsKCQkJCQkJfQoKCgoJCQkJCX0KCQkJCX0KCgkJCX0pCgkJCSQoIi5nb29kcy1jaG9zZW4tbGlzdCBsaSIpLmVhY2goZnVuY3Rpb24oaW5kZXgpIHsKCQkJCWlmICgkKHRoaXMpLmF0dHIoJ2RhdGEtdHlwZScpICE9ICd5ZXMnKSB7CgkJCQkJdmFyIGl0ZW11cmwgPSAkKHRoaXMpLmZpbmQoImEiKS5hdHRyKCdocmVmJyk7CgkJCQkJaWYgKGl0ZW11cmwgIT0gJycpIHsKCQkJCQkgICAgaWYoaXRlbXVybC5pbmRleE9mKCIvL2NjYy14LmpkLmNvbSIpICE9LTEpewoJCQkJCSAgICAgICAgdmFyIGFycj1bXTsKCQkJCQkgICAgICAgIHZhciBzdHI9JCh0aGlzKS5hdHRyKCdvbmNsaWNrJyk7CgkJCQkJICAgICAgICBhcnI9c3RyLnNwbGl0KCIsIik7CgkJCQkJICAgICAgIHZhciBza3VfYz10cmltKGFycls2XS5yZXBsYWNlKC9cIi9nLCIiKSk7CgkJCQkJICAgICAgICBpdGVtdXJsPScvL2l0ZW0uamQuY29tLycrc2t1X2MrJy5odG1sJzsKCgkJCQkJICAgIH0KCQkJCQkgICAJaWYgKHVybHNbaW5kZXhfbnVtXS5sZW5ndGggPCA0KSB7CgkJCQkJCQlpdGVtW2luZGV4X251bV0ucHVzaCgkKHRoaXMpKTsKCQkJCQkJCXVybHNbaW5kZXhfbnVtXS5wdXNoKGl0ZW11cmwpOwoJCQkJCQkJJCh0aGlzKS5hdHRyKCdkYXRhLXR5cGUnLCAneWVzJyk7CgkJCQkJCX0KCgkJCQkJfQoKCgoKCQkJCX0KCgkJCX0pCgoJCQkkKCIubWF5LWxpa2UtbGlzdCBsaSIpLmVhY2goZnVuY3Rpb24oaW5kZXgpIHsKCQkJCWlmICgkKHRoaXMpLmF0dHIoJ2RhdGEtdHlwZScpICE9ICd5ZXMnKSB7CgkJCQkJdmFyIGl0ZW11cmwgPSAkKHRoaXMpLmZpbmQoImEiKS5hdHRyKCdocmVmJyk7CgkJCQkJaWYgKGl0ZW11cmwgIT0gJycpIHsKCQkJCQkgICAgaWYoaXRlbXVybC5pbmRleE9mKCIvL2NjYy14LmpkLmNvbSIpICE9LTEpewoJCQkJCSAgICAgICAgdmFyIGFycj1bXTsKCQkJCQkgICAgICAgIHZhciBzdHI9JCh0aGlzKS5hdHRyKCdvbmNsaWNrJyk7CgkJCQkJICAgICAgICBhcnI9c3RyLnNwbGl0KCIsIik7CgkJCQkJICAgICAgdmFyICBza3VfYz10cmltKGFycls2XS5yZXBsYWNlKC9cIi9nLCIiKSk7CgkJCQkJICAgICAgIGl0ZW11cmw9Jy8vaXRlbS5qZC5jb20vJytza3VfYysnLmh0bWwnOwoJCQkJCSAgICB9CgkJCQkJCWlmICh1cmxzW2luZGV4X251bV0ubGVuZ3RoIDwgNCkgewoJCQkJCQkJaXRlbVtpbmRleF9udW1dLnB1c2goJCh0aGlzKSk7CgkJCQkJCQl1cmxzW2luZGV4X251bV0ucHVzaChpdGVtdXJsKTsKCQkJCQkJCSQodGhpcykuYXR0cignZGF0YS10eXBlJywgJ3llcycpOwoJCQkJCQl9CgoKCQkJCQl9CgkJCQl9CgoJCQl9KQoKCgoJCQlpZiAodXJscy5sZW5ndGggPiAwICYmIHVybHNbaW5kZXhfbnVtXS5sZW5ndGggPiAwICYmIGl0ZW1baW5kZXhfbnVtXS5sZW5ndGggPiAwKSB7CgoKCQkJCXZhciB1ID0gdXJsc1tpbmRleF9udW1dLmpvaW4oJywnKTsKCQkJCSQuZ2V0SlNPTignaHR0cHM6Ly9zaG9wLmF6a291LmNuL2pkLnBocCcsIHsKCQkJCWFjdDonaXRlbWxpbmsnLAoJCQkJCWl0ZW11cmw6IHUsCgkJCQkJbnVtOiBpbmRleF9udW0KCQkJCX0sIGZ1bmN0aW9uKHJlcykgewoJCQkJCWlmIChyZXMudHlwZSA9PSAnc3VjY2VzcycpIHsKCQkJCQkJZm9yICh2YXIgaSA9IDA7IGkgPCByZXMuZGF0YS5sZW5ndGg7IGkrKykgewoJCQkJCQkJaXRlbVtyZXMubnVtXVtpXS5maW5kKCJhIikuYXR0cignZGF0YS1yZWYnLCByZXMuZGF0YVtpXS5sb25nVXJsKTsKCQkJCQkJCWl0ZW1bcmVzLm51bV1baV0uZmluZCgiYSIpLmF0dHIoJ3RhcmdldCcsICcnKTsKCQkJCQkJCWl0ZW1bcmVzLm51bV1baV0uZmluZCgiYSIpLnVuYmluZCgiY2xpY2siKTsKCQkJCQkJCWl0ZW1bcmVzLm51bV1baV0uZmluZCgiYSIpLmJpbmQoImNsaWNrIixmdW5jdGlvbihlKXsKCQkJCQkJCSAgICBpZiAoJCh0aGlzKS5hdHRyKCdkYXRhLXJlZicpKSB7CgkJICAgICAgICAgICAgCQkJCSBlLnByZXZlbnREZWZhdWx0KCk7CgkJICAgICAgICAgICAgCQkJCSBvYmoub25jbGlja3MoJCh0aGlzKS5hdHRyKCdkYXRhLXJlZicpKTsKCgkJICAgICAgICAgICAgCQkJfQoJCQkJCQkJfSkKCgkJCQkJCX0KCgkJCQkJfQoJCQkJfSkKCgoJCQl9CgkJCWluZGV4X251bSArPSAxOwoJCX0KCgoKCQlvYmouZ2V0X21pYW9zaGE9ZnVuY3Rpb24oKSB7CgkJCWl0ZW1baW5kZXhfbnVtXSA9IFtdOwoJCQl1cmxzW2luZGV4X251bV0gPSBbXTsKCQkJJCgiLnNlY2tpbGxfbW9kX2dvb2RzbGlzdCBsaSIpLmVhY2goZnVuY3Rpb24oaW5kZXgpIHsKCgkJCQlpZiAoJCh0aGlzKS5hdHRyKCdkYXRhLXR5cGUnKSAhPSAneWVzJykgewoKCQkJCQl2YXIgaXRlbXVybCA9ICQodGhpcykuZmluZCgiYSIpLmF0dHIoJ2hyZWYnKTsKCQkJCQl2YXIgc2t1aWQgPSAkKHRoaXMpLmF0dHIoJ2RhdGEtc2t1Jyk7CgkJCQkJdmFyIHRoYXQgPSAkKHRoaXMpOwoJCQkJCWlmIChpdGVtdXJsICE9ICcnKSB7CgkJCQkJCWlmICh1cmxzW2luZGV4X251bV0ubGVuZ3RoIDwgNCkgewoKCQkJCQkJCWl0ZW1baW5kZXhfbnVtXS5wdXNoKCQodGhpcykpOwoJCQkJCQkJdXJsc1tpbmRleF9udW1dLnB1c2goaXRlbXVybCk7CgkJCQkJCQkkKHRoaXMpLmF0dHIoJ2RhdGEtdHlwZScsICd5ZXMnKTsKCQkJCQkJfQoKCgkJCQkJfQoJCQkJfQoKCQkJfSkKCgoKCQkJaWYgKHVybHMubGVuZ3RoID4gMCAmJiB1cmxzW2luZGV4X251bV0ubGVuZ3RoID4gMCAmJiBpdGVtW2luZGV4X251bV0ubGVuZ3RoID4gMCkgewoKCgkJCQl2YXIgdSA9IHVybHNbaW5kZXhfbnVtXS5qb2luKCcsJyk7CgkJCQkkLmdldEpTT04oJ2h0dHBzOi8vc2hvcC5hemtvdS5jbi9qZC5waHAnLCB7CgkJCQlhY3Q6J2l0ZW1saW5rJywKCQkJCQlpdGVtdXJsOiB1LAoJCQkJCW51bTogaW5kZXhfbnVtCgkJCQl9LCBmdW5jdGlvbihyZXMpIHsKCQkJCQlpZiAocmVzLnR5cGUgPT0gJ3N1Y2Nlc3MnKSB7CgkJCQkJCWZvciAodmFyIGkgPSAwOyBpIDwgcmVzLmRhdGEubGVuZ3RoOyBpKyspIHsKCQkJCQkJCWl0ZW1bcmVzLm51bV1baV0uZmluZCgiYSIpLmF0dHIoJ2RhdGEtcmVmJywgcmVzLmRhdGFbaV0ubG9uZ1VybCk7CgkJCQkJCQlpdGVtW3Jlcy5udW1dW2ldLmZpbmQoImEiKS5hdHRyKCdocmVmJywgImphdmFzY3JpcHQ6dm9pZCgwKTsiKTsKCQkJCQkJCWl0ZW1bcmVzLm51bV1baV0uZmluZCgiYSIpLmF0dHIoJ3RhcmdldCcsICcnKTsKCQkJCQkJLy8JaXRlbVtyZXMubnVtXVtpXS5maW5kKCJhIikudW5iaW5kKCJjbGljayIpOwoKCQkJCQkJaXRlbVtyZXMubnVtXVtpXS5maW5kKCJhIikuY2xpY2soZnVuY3Rpb24oZSl7CgkJCQkJCQkgICBlLnByZXZlbnREZWZhdWx0KCk7CgkJICAgICAgICAgICAgCQkJCSBvYmoub25jbGlja3MoJCh0aGlzKS5hdHRyKCdkYXRhLXJlZicpKTsKCQkJCQkJCX0pCgoJCQkJCQl9CgoJCQkJCX0KCQkJCX0pCgoKCQkJfQoJCQlpbmRleF9udW0gKz0gMTsKCQl9CgogY29uc3QgaGVhZGVyR2V0ID0gYXN5bmMgKHVybCwgaGVhZGVycywgdHlwZSwgZXh0cmEpID0+IHsKIAlyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4gewogCQlsZXQgcmVxID0gR01feG1saHR0cFJlcXVlc3QoewogCQkJbWV0aG9kOiAiR0VUIiwKIAkJCXVybCwKIAkJCWhlYWRlcnMsCiAJCQlyZXNwb25zZVR5cGU6IHR5cGUgfHwgJ2pzb24nLAogCQkJb25sb2FkOiAocmVzKSA9PiB7CiAJCQkJY29uc29sZS5sb2cocmVzLCdoZycpOwogCQkJCWlmIChyZXMuc3RhdHVzID09PSAyMDQpIHsKIAkJCQkJcmVxLmFib3J0KCk7CiAJCQkJCWlkbVtleHRyYS5pbmRleF0gPSB0cnVlOwogCQkJCX0KIAkJCQlpZiAodHlwZSA9PT0gJ2Jsb2InKSB7CiAJCQkJCWJhaWR1VG9vbHMub3BlbklkbShyZXMucmVzcG9uc2UsIGV4dHJhCiAJCQkJCQkuZmlsZW5hbWUpOwogCQkJCQljb25zb2xlLmxvZygn6LCD55SoJyk7CiAJCQkJCXJlc29sdmUocmVzKTsKIAkJCQl9IGVsc2UgewogCQkJCQlyZXNvbHZlKHJlcy5yZXNwb25zZSB8fCByZXMucmVzcG9uc2VUZXh0KTsKIAkJCQl9CiAJCQl9LAogCQkJb25wcm9ncmVzczogKHJlcykgPT4gewogCQkJCWlmIChleHRyYSAmJiBleHRyYS5maWxlbmFtZSAmJiBleHRyYS5pbmRleCkgewogCQkJCQlyZXMudG90YWwgPiAwID8gcHJvZ3Jlc3NbZXh0cmEuaW5kZXhdID0gKHJlcy5sb2FkZWQgKiAxMDAgLwogCQkJCQkJcmVzLnRvdGFsKS50b0ZpeGVkKDIpIDogcHJvZ3Jlc3NbZXh0cmEuaW5kZXhdID0gMC4wMDsKIAkJCQl9CiAJCQl9LAogCQkJb25sb2Fkc3RhcnQoKSB7CiAJCQkJZXh0cmEgJiYgZXh0cmEuZmlsZW5hbWUgJiYgZXh0cmEuaW5kZXggJiYgKHJlcXVlc3RbZXh0cmEuaW5kZXhdID0KIAkJCQkJcmVxKTsKIAkJCX0sCiAJCQlvbmVycm9yOiAoZXJyKSA9PiB7CiAJCQkJcmVqZWN0KGVycik7CiAJCQl9LAogCQl9KTsKCiAJfSk7CiB9OwogY29uc3QgaEdldD1mdW5jdGlvbih1cmwpewogCWxldCByZXM9bnVsbDsKIAkkLmFqYXhTZXR0aW5ncy5hc3luYz1mYWxzZTsKIAkkLmdldEpTT04odXJsLGZ1bmN0aW9uKHJlc3VsdCl7CiAJICAgICByZXM9cmVzdWx0OwogCX0pOwogCSQuYWpheFNldHRpbmdzLmFzeW5jPXRydWU7CiAJcmV0dXJuIHJlczsKIH0KCgkJY29uc3QgY3VzdG9tQ2xhc3MgPSB7CgkJCWNvbnRhaW5lcjogJ3BsLWNvbnRhaW5lcicsCgkJCXBvcHVwOiAncGwtcG9wdXAnLAoJCQloZWFkZXI6ICdwbC1oZWFkZXInLAoJCQl0aXRsZTogJ3BsLXRpdGxlJywKCQkJY2xvc2VCdXR0b246ICdwbC1jbG9zZScsCgkJCWljb246ICdwbC1pY29uJywKCQkJaW1hZ2U6ICdwbC1pbWFnZScsCgkJCWNvbnRlbnQ6ICdwbC1jb250ZW50JywKCQkJaHRtbENvbnRhaW5lcjogJ3BsLWh0bWwnLAoJCQlpbnB1dDogJ3BsLWlucHV0JywKCQkJaW5wdXRMYWJlbDogJ3BsLWlucHV0TGFiZWwnLAoJCQl2YWxpZGF0aW9uTWVzc2FnZTogJ3BsLXZhbGlkYXRpb24nLAoJCQlhY3Rpb25zOiAncGwtYWN0aW9ucycsCgkJCWNvbmZpcm1CdXR0b246ICdwbC1jb25maXJtJywKCQkJZGVueUJ1dHRvbjogJ3BsLWRlbnknLAoJCQljYW5jZWxCdXR0b246ICdwbC1jYW5jZWwnLAoJCQlsb2FkZXI6ICdwbC1sb2FkZXInLAoJCQlmb290ZXI6ICdwbC1mb290ZXInCgkJfTsKCgkJbGV0IHRvYXN0ID0gU3dhbC5taXhpbih7CgkJCXRvYXN0OiB0cnVlLAoJCQlwb3NpdGlvbjogJ3RvcCcsCgkJCXNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKCQkJdGltZXI6IDMwMDAsCgkJCXRpbWVyUHJvZ3Jlc3NCYXI6IGZhbHNlLAoJCQlkaWRPcGVuOiAodG9hc3QpID0+IHsKCQkJCXRvYXN0LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCBTd2FsLnN0b3BUaW1lcik7CgkJCQl0b2FzdC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgU3dhbC5yZXN1bWVUaW1lcik7CgkJCX0KCQl9KTsKCgkJZnVuY3Rpb24gcmVtb3ZlRXZlbnQodGhhdCwgaHJlZikgewoJCQl0aGF0LmZpbmQoImEiKS5hdHRyKCd0YXJnZXQnLCAnJyk7CgkJCXRoYXQuZmluZCgiYSIpLnVuYmluZCgiY2xpY2siKTsKCQkJdGhhdC5maW5kKCJhIikuYmluZCgiY2xpY2siLCBmdW5jdGlvbihlKSB7CgkJCQllLnByZXZlbnREZWZhdWx0KCk7CgkJCQlpZiAoaHJlZiAhPSB1bmRlZmluZWQpIHsKCQkJCQlvbmNsaWNrcyhocmVmKTsKCQkJCX0gZWxzZSB7CgkJCQkJb25jbGlja3MoJCh0aGlzKS5hdHRyKCdocmVmJykpOwoJCQkJfQoKCQkJfSkKCQl9CgkJbGV0IHV0aWwgPSB7CgkJCWNsb2coYykgewoJCQkJY29uc29sZS5ncm91cChgWyR7bmFtZX1dYCk7CgkJCQljb25zb2xlLmxvZyhjKTsKCQkJCWNvbnNvbGUuZ3JvdXBFbmQoKTsKCQkJfSwKCQkJZ2V0Q29va2llKG5hbWUpIHsKCQkJCWxldCBhcnIgPSBkb2N1bWVudC5jb29raWUucmVwbGFjZSgvXHMvZywgIiIpLnNwbGl0KCc7Jyk7CgkJCQlmb3IgKGxldCBpID0gMCwgbCA9IGFyci5sZW5ndGg7IGkgPCBsOyBpKyspIHsKCQkJCQlsZXQgdGVtcEFyciA9IGFycltpXS5zcGxpdCgnPScpOwoJCQkJCWlmICh0ZW1wQXJyWzBdID09IG5hbWUpIHsKCQkJCQkJcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudCh0ZW1wQXJyWzFdKTsKCQkJCQl9CgkJCQl9CgkJCQlyZXR1cm4gJyc7CgkJCX0sCgkJCWdldFZhbHVlKG5hbWUpIHsKCQkJCXJldHVybiBHTV9nZXRWYWx1ZShuYW1lKTsKCQkJfSwKCQkJc2V0VmFsdWUobmFtZSwgdmFsdWUpIHsKCQkJCUdNX3NldFZhbHVlKG5hbWUsIHZhbHVlKTsKCQkJfSwKCQkJZ2V0U3RvcmFnZShrZXkpIHsKCQkJCXJldHVybiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpOwoJCQl9LAoJCQlzZXRTdG9yYWdlKGtleSwgdmFsdWUpIHsKCQkJCXJldHVybiBsb2NhbFN0b3JhZ2Uuc2V0SXRlbShrZXksIHZhbHVlKTsKCQkJfSwKCQkJc2V0Q2xpcGJvYXJkKHRleHQpIHsKCQkJCUdNX3NldENsaXBib2FyZCh0ZXh0LCAndGV4dCcpOwoJCQl9LAoJCQllbmNvZGUoc3RyKSB7CgkJCQlyZXR1cm4gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoc3RyKSkpOwoJCQl9LAoJCQlkZWNvZGUoc3RyKSB7CgkJCQlyZXR1cm4gZGVjb2RlVVJJQ29tcG9uZW50KGVzY2FwZShhdG9iKHN0cikpKTsKCQkJfSwKCQkJc2V0QkRVU1MoKSB7CgkJCQl0cnkgewoJCQkJCUdNX2Nvb2tpZSAmJiBHTV9jb29raWUoJ2xpc3QnLCB7CgkJCQkJCW5hbWU6ICdCRFVTUycKCQkJCQl9LCAoY29va2llcywgZXJyb3IpID0+IHsKCQkJCQkJaWYgKCFlcnJvcikgewoJCQkJCQkJdGhpcy5zZXRTdG9yYWdlKCJiYWlkdXl1blBsdWdpbl9CRFVTUyIsIEpTT04uc3RyaW5naWZ5KHsKCQkJCQkJCQlCRFVTUzogY29va2llc1swXS52YWx1ZQoJCQkJCQkJfSkpOwoJCQkJCQl9CgkJCQkJfSk7CgkJCQl9IGNhdGNoIChlKSB7CgoJCQkJfQoJCQl9LAoJCQlnZXRCRFVTUygpIHsKCQkJCWxldCBiYWlkdXl1blBsdWdpbl9CRFVTUyA9IHRoaXMuZ2V0U3RvcmFnZSgnYmFpZHV5dW5QbHVnaW5fQkRVU1MnKSA/IHRoaXMuZ2V0U3RvcmFnZSgKCQkJCQknYmFpZHV5dW5QbHVnaW5fQkRVU1MnKSA6ICd7ImJhaWR1eXVuUGx1Z2luX0JEVVNTIjoiIn0nOwoJCQkJbGV0IEJEVVNTID0gSlNPTi5wYXJzZShiYWlkdXl1blBsdWdpbl9CRFVTUykuQkRVU1MgfHwgJyc7CgkJCQlyZXR1cm4gQkRVU1M7CgkJCX0sCgkJCWdldEV4dGVuc2lvbihuYW1lKSB7CgkJCQlsZXQgcmVnID0gLyg/IVwuKVx3KyQvOwoJCQkJaWYgKHJlZy50ZXN0KG5hbWUpKSB7CgkJCQkJbGV0IG1hdGNoID0gbmFtZS5tYXRjaChyZWcpOwoJCQkJCXJldHVybiBtYXRjaFswXS50b1VwcGVyQ2FzZSgpOwoJCQkJfQoJCQkJcmV0dXJuICcnOwoJCQl9LAoJCQljb252ZXJ0VG9BcmlhKGxpbmssIGZpbGVuYW1lLCB1YSkgewoJCQkJbGV0IEJEVVNTID0gdGhpcy5nZXRCRFVTUygpOwoJCQkJZmlsZW5hbWUgPSBmaWxlbmFtZS5yZXBsYWNlKCcgJywgJ18nKTsKCQkJCWlmIChCRFVTUykgewoJCQkJCXJldHVybiBlbmNvZGVVUklDb21wb25lbnQoCgkJCQkJCWBhcmlhMmMgIiR7bGlua30iIC0tb3V0ICIke2ZpbGVuYW1lfSIgLS1oZWFkZXIgIlVzZXItQWdlbnQ6ICR7dWF9IiAtLWhlYWRlciAiQ29va2llOiBCRFVTUz0ke0JEVVNTfSJgCgkJCQkJCSk7CgkJCQl9IGVsc2UgewoJCQkJCXJldHVybiB7CgkJCQkJCWxpbms6IHBhbi5hc3Npc3RhbnQsCgkJCQkJCXRleHQ6IHBhbi5pbml0WzVdCgkJCQkJfTsKCQkJCX0KCQkJfSwKCQkJYmxvYkRvd25sb2FkKGJsb2IsIGZpbGVuYW1lKSB7CgkJCQlpZiAoYmxvYiBpbnN0YW5jZW9mIEJsb2IpIHsKCQkJCQljb25zdCB1cmwgPSBVUkwuY3JlYXRlT2JqZWN0VVJMKGJsb2IpOwoJCQkJCWNvbnN0IGEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhJyk7CgkJCQkJYS5ocmVmID0gdXJsOwoJCQkJCWEuZG93bmxvYWQgPSBmaWxlbmFtZTsKCQkJCQlhLmNsaWNrKCk7CgkJCQkJVVJMLnJldm9rZU9iamVjdFVSTCh1cmwpOwoJCQkJfQoJCQl9LAoJCQlzZXRJbnQobmFtZSwgdGltZSkgewoJCQkJdGltZSA9IHRpbWUgfHwgMTAwOwoJCQkJbGV0IGkgPSAwOwoJCQkJaWYgKCQobmFtZSkubGVuZ3RoKSByZXR1cm4KCQkJCWxldCBpbnMgPSBzZXRJbnRlcnZhbCgoKSA9PiB7CgkJCQkJaSsrOwoJCQkJCWlmICgkKG5hbWUpLmxlbmd0aCkgewoJCQkJCQljbGVhckludGVydmFsKGlucyk7CgkJCQkJCSQobmFtZSkucmVtb3ZlKCk7CgkJCQkJfQoJCQkJCWlmIChpID4gNjApIGNsZWFySW50ZXJ2YWwoaW5zKTsKCQkJCX0sIHRpbWUpOwoJCQl9LAoJCQlzbGVlcCh0aW1lKSB7CgkJCQlyZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHNldFRpbWVvdXQocmVzb2x2ZSwgdGltZSkpOwoJCQl9LAoJCQltZXNzYWdlOiB7CgkJCQlzdWNjZXNzKHRleHQpIHsKCQkJCQl0b2FzdC5maXJlKHsKCQkJCQkJdGl0bGU6IHRleHQsCgkJCQkJCWljb246ICdzdWNjZXNzJwoJCQkJCX0pOwoJCQkJfSwKCQkJCWVycm9yKHRleHQpIHsKCQkJCQl0b2FzdC5maXJlKHsKCQkJCQkJdGl0bGU6IHRleHQsCgkJCQkJCWljb246ICdlcnJvcicKCQkJCQl9KTsKCQkJCX0sCgkJCQl3YXJuaW5nKHRleHQpIHsKCQkJCQl0b2FzdC5maXJlKHsKCQkJCQkJdGl0bGU6IHRleHQsCgkJCQkJCWljb246ICd3YXJuaW5nJwoJCQkJCX0pOwoJCQkJfSwKCQkJCWluZm8odGV4dCkgewoJCQkJCXRvYXN0LmZpcmUoewoJCQkJCQl0aXRsZTogdGV4dCwKCQkJCQkJaWNvbjogJ2luZm8nCgkJCQkJfSk7CgkJCQl9LAoJCQkJcXVlc3Rpb24odGV4dCkgewoJCQkJCXRvYXN0LmZpcmUoewoJCQkJCQl0aXRsZTogdGV4dCwKCQkJCQkJaWNvbjogJ3F1ZXN0aW9uJwoJCQkJCX0pOwoJCQkJfQoJCQl9LAoJCQlwb3N0KHVybCwgZGF0YSwgaGVhZGVycywgdHlwZSkgewoJCQkJcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHsKCQkJCQlsZXQgcmVxdWVzdE9iaiA9IEdNX3htbGh0dHBSZXF1ZXN0KHsKCQkJCQkJbWV0aG9kOiAiUE9TVCIsCgkJCQkJCXVybCwKCQkJCQkJaGVhZGVycywKCQkJCQkJZGF0YSwKCQkJCQkJcmVzcG9uc2VUeXBlOiB0eXBlIHx8ICdqc29uJywKCQkJCQkJb25sb2FkOiAocmVzKSA9PiB7CgkJCQkJCQl0eXBlID09PSAnYmxvYicgPyByZXNvbHZlKHJlcykgOiByZXNvbHZlKHJlcy5yZXNwb25zZSB8fCByZXMKCQkJCQkJCQkucmVzcG9uc2VUZXh0KTsKCQkJCQkJfSwKCQkJCQkJb25lcnJvcjogKGVycikgPT4gewoJCQkJCQkJcmVqZWN0KGVycik7CgkJCQkJCX0sCgkJCQkJfSk7CgkJCQl9KTsKCQkJfSwKCQkJZ2V0KHVybCwgaGVhZGVycywgdHlwZSwgZXh0cmEpIHsKCQkJCXJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSwgcmVqZWN0KSA9PiB7CgkJCQkJbGV0IHJlcXVlc3RPYmogPSBHTV94bWxodHRwUmVxdWVzdCh7CgkJCQkJCW1ldGhvZDogIkdFVCIsCgkJCQkJCXVybCwKCQkJCQkJaGVhZGVycywKCQkJCQkJcmVzcG9uc2VUeXBlOiB0eXBlIHx8ICdqc29uJywKCQkJCQkJb25sb2FkOiAocmVzKSA9PiB7CgkJCQkJCQlpZiAocmVzLnN0YXR1cyA9PT0gMjA0KSB7CgkJCQkJCQkJcmVxdWVzdE9iai5hYm9ydCgpOwoJCQkJCQkJCWlkbVtleHRyYS5pbmRleF0gPSB0cnVlOwoJCQkJCQkJfQoJCQkJCQkJaWYgKHR5cGUgPT09ICdibG9iJykgewoJCQkJCQkJCXJlcy5zdGF0dXMgPT09IDIwMCAmJiB1dGlsLmJsb2JEb3dubG9hZChyZXMucmVzcG9uc2UsIGV4dHJhCgkJCQkJCQkJCS5maWxlbmFtZSk7CgkJCQkJCQkJcmVzb2x2ZShyZXMpOwoJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQlyZXNvbHZlKHJlcy5yZXNwb25zZSB8fCByZXMucmVzcG9uc2VUZXh0KTsKCQkJCQkJCX0KCQkJCQkJfSwKCQkJCQkJb25wcm9ncmVzczogKHJlcykgPT4gewoJCQkJCQkJaWYgKGV4dHJhICYmIGV4dHJhLmZpbGVuYW1lICYmIGV4dHJhLmluZGV4KSB7CgkJCQkJCQkJcmVzLnRvdGFsID4gMCA/IHByb2dyZXNzW2V4dHJhLmluZGV4XSA9IChyZXMubG9hZGVkICogMTAwIC8KCQkJCQkJCQkJcmVzLnRvdGFsKS50b0ZpeGVkKDIpIDogcHJvZ3Jlc3NbZXh0cmEuaW5kZXhdID0gMC4wMDsKCQkJCQkJCX0KCQkJCQkJfSwKCQkJCQkJb25sb2Fkc3RhcnQoKSB7CgkJCQkJCQlleHRyYSAmJiBleHRyYS5maWxlbmFtZSAmJiBleHRyYS5pbmRleCAmJiAocmVxdWVzdFtleHRyYS5pbmRleF0gPQoJCQkJCQkJCXJlcXVlc3RPYmopOwoJCQkJCQl9LAoJCQkJCQlvbmVycm9yOiAoZXJyKSA9PiB7CgkJCQkJCQlyZWplY3QoZXJyKTsKCQkJCQkJfSwKCQkJCQl9KTsKCQkJCX0pOwoJCQl9LAoJCQlhZGRTdHlsZShpZCwgdGFnLCBjc3MpIHsKCQkJCXRhZyA9IHRhZyB8fCAnc3R5bGUnOwoJCQkJbGV0IGRvYyA9IGRvY3VtZW50LAoJCQkJCXN0eWxlRG9tID0gZG9jLmdldEVsZW1lbnRCeUlkKGlkKTsKCQkJCWlmIChzdHlsZURvbSkgcmV0dXJuOwoJCQkJbGV0IHN0eWxlID0gZG9jLmNyZWF0ZUVsZW1lbnQodGFnKTsKCQkJCXN0eWxlLnJlbCA9ICdzdHlsZXNoZWV0JzsKCQkJCXN0eWxlLmlkID0gaWQ7CgkJCQl0YWcgPT09ICdzdHlsZScgPyBzdHlsZS5pbm5lckhUTUwgPSBjc3MgOiBzdHlsZS5ocmVmID0gY3NzOwoJCQkJZG9jLmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF0uYXBwZW5kQ2hpbGQoc3R5bGUpOwoJCQl9CgkJfTsKCQlvYmouaW5pdFNlYXJjaEh0bWwgPSBmdW5jdGlvbihzZWxlY3Rvckxpc3QpIHsKCQkJc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7CgkJCQlzZWxlY3Rvckxpc3QuZm9yRWFjaChmdW5jdGlvbihzZWxlY3RvcikgewoJCQkJCW9iai5pbml0U2VhcmNoSXRlbVNlbGVjdG9yKHNlbGVjdG9yKTsKCQkJCX0pOwoJCQl9LCAzMDAwKTsKCQl9OwoKCQlvYmouaW5pdFNlYXJjaEV2ZW50ID0gZnVuY3Rpb24oKSB7CgkJCSQoZG9jdW1lbnQpLm9uKCJjbGljayIsICIudGItY29vbC1ib3gtYXJlYSIsIGZ1bmN0aW9uKCkgewoJCQkJdmFyICR0aGlzID0gJCh0aGlzKTsKCQkJCWlmICgkdGhpcy5oYXNDbGFzcygidGItY29vbC1ib3gtd2FpdCIpKSB7CgkJCQkJb2JqLmJhc2ljUXVlcnlJdGVtKHRoaXMpOwoJCQkJfSBlbHNlIGlmICgkdGhpcy5oYXNDbGFzcygidGItY29vbC1ib3gtaW5mby10cmFuc2x1Y2VudCIpKSB7CgkJCQkJJHRoaXMucmVtb3ZlQ2xhc3MoInRiLWNvb2wtYm94LWluZm8tdHJhbnNsdWNlbnQiKTsKCQkJCX0gZWxzZSB7CgkJCQkJJHRoaXMuYWRkQ2xhc3MoInRiLWNvb2wtYm94LWluZm8tdHJhbnNsdWNlbnQiKTsKCQkJCX0KCQkJfSk7CgkJfTsKCgkJb2JqLmJhc2ljUXVlcnkgPSBmdW5jdGlvbigpIHsKCQkJc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7CgkJCQkkKCIudGItY29vbC1ib3gtd2FpdCIpLmVhY2goZnVuY3Rpb24oKSB7CgkJCQkJb2JqLmJhc2ljUXVlcnlJdGVtKHRoaXMpOwoJCQkJfSk7CgkJCX0sIDMwMDApOwoJCX07CgoJCW9iai5pbml0U2VhcmNoSXRlbVNlbGVjdG9yID0gZnVuY3Rpb24oc2VsZWN0b3IpIHsKCQkJJChzZWxlY3RvcikuZWFjaChmdW5jdGlvbigpIHsKCQkJCW9iai5pbml0U2VhcmNoSXRlbSh0aGlzKTsKCQkJfSk7CgkJfTsKCgkJb2JqLmluaXRTZWFyY2hJdGVtID0gZnVuY3Rpb24oc2VsZWN0b3IpIHsKCQkJdmFyICR0aGlzID0gJChzZWxlY3Rvcik7CgkJCWlmICgkdGhpcy5oYXNDbGFzcygidGItY29vbC1ib3gtYWxyZWFkeSIpKSB7CgkJCQlyZXR1cm47CgkJCX0gZWxzZSB7CgkJCQkkdGhpcy5hZGRDbGFzcygidGItY29vbC1ib3gtYWxyZWFkeSIpCgkJCX0KCgkJCXZhciBuaWQgPSAkdGhpcy5hdHRyKCJkYXRhLWlkIik7CgkJCWlmICghb2JqLmlzVmFpbGlkSXRlbUlkKG5pZCkpIHsKCQkJCW5pZCA9ICR0aGlzLmF0dHIoImRhdGEtaXRlbWlkIik7CgkJCX0KCgkJCWlmICghb2JqLmlzVmFpbGlkSXRlbUlkKG5pZCkpIHsKCQkJCWlmICgkdGhpcy5hdHRyKCJocmVmIikpIHsKCQkJCQluaWQgPSBsb2NhdGlvbi5wcm90b2NvbCArICR0aGlzLmF0dHIoImhyZWYiKTsKCQkJCX0gZWxzZSB7CgkJCQkJdmFyICRhID0gJHRoaXMuZmluZCgiYSIpOwoJCQkJCWlmICghJGEubGVuZ3RoKSB7CgkJCQkJCXJldHVybjsKCQkJCQl9CgoJCQkJCW5pZCA9ICRhLmF0dHIoImRhdGEtbmlkIik7CgkJCQkJaWYgKCFvYmouaXNWYWlsaWRJdGVtSWQobmlkKSkgewoJCQkJCQlpZiAoJGEuaGFzQ2xhc3MoImpfUmVjZWl2ZUNvdXBvbiIpICYmICRhLmxlbmd0aCA+IDEpIHsKCQkJCQkJCW5pZCA9IGxvY2F0aW9uLnByb3RvY29sICsgJCgkYVsxXSkuYXR0cigiaHJlZiIpOwoJCQkJCQl9IGVsc2UgewoJCQkJCQkJbmlkID0gbG9jYXRpb24ucHJvdG9jb2wgKyAkYS5hdHRyKCJocmVmIik7CgkJCQkJCX0KCQkJCQl9CgkJCQl9CgkJCX0KCgkJCWlmIChvYmouaXNWYWxpZE5pZChuaWQpKSB7CgkJCQlvYmouYmFzaWNRdWVyeUl0ZW0oJHRoaXMsIG5pZCk7CgkJCX0KCQl9OwoKCgoJCW9iai5iYXNpY1F1ZXJ5SXRlbSA9IGZ1bmN0aW9uKHNlbGVjdG9yLCBuaWQpIHsKCQkJdmFyICR0aGlzID0gJChzZWxlY3Rvcik7CgkJCSQuZ2V0KCdodHRwczovL3RiLmlkZXkuY24vdGFvYmFvLnBocD9hY3Q9aXRlbWxpbmsmaXRlbWlkPScgKyBuaWQsIGZ1bmN0aW9uKGRhdGEpIHsKCQkJCWlmIChkYXRhLnR5cGUgPT0gJ3N1Y2Nlc3MnKSB7CgkJCQkJb2JqLmNoYW5nZVVybCgkdGhpcywgZGF0YS5kYXRhKTsKCQkJCX0gZWxzZSB7CgoJCQkJfQoJCQl9LCAnanNvbicpCgkJfTsKCgkJb2JqLmNoYW5nZVVybCA9IGZ1bmN0aW9uKHNlbGVjdG9yLCBkYXRhKSB7CgkJCXZhciAkdGhpcyA9ICQoc2VsZWN0b3IpOwoJCQl2YXIgYSA9ICR0aGlzLmZpbmQoImEiKTsKCQkJJHRoaXMuZmluZCgiYSIpLmF0dHIoJ2hyZWYnLCBkYXRhLml0ZW1VcmwpOwoJCQkkdGhpcy5maW5kKCJhIikuYXR0cignZGF0YS1ocmVmJywgZGF0YS5pdGVtVXJsKTsKCQkJJHRoaXMuZmluZCgiYSIpLmNsaWNrKGZ1bmN0aW9uKGUpewoJCQkJCQkJICAgZS5wcmV2ZW50RGVmYXVsdCgpOwoJCSAgICAgICAgICAgIAkJCQkgb2JqLm9uY2xpY2tzKCQodGhpcykuYXR0cignZGF0YS1ocmVmJykpOwoJCQkJCQkJfSkKCQl9CgoKCQlvYmouaXNEZXRhaWxQYWdlVGFvQmFvID0gZnVuY3Rpb24odXJsKSB7CgkJCWlmICh1cmwuaW5kZXhPZigiLy9pdGVtLnRhb2Jhby5jb20vaXRlbS5odG0iKSA+IDAgfHwgdXJsLmluZGV4T2YoIi8vZGV0YWlsLnRtYWxsLmNvbS9pdGVtLmh0bSIpID4gMCB8fAoJCQkJdXJsLmluZGV4T2YoIi8vY2hhb3NoaS5kZXRhaWwudG1hbGwuY29tL2l0ZW0uaHRtIikgPiAwIHx8IHVybC5pbmRleE9mKAoJCQkJCSIvL2RldGFpbC50bWFsbC5oay9oay9pdGVtLmh0bSIpID4gMCkgewoJCQkJcmV0dXJuIHRydWU7CgkJCX0gZWxzZSB7CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0KCQl9OwoKCQlvYmouaXNWYWlsaWRJdGVtSWQgPSBmdW5jdGlvbihpdGVtSWQpIHsKCQkJaWYgKCFpdGVtSWQpIHsKCQkJCXJldHVybiBmYWxzZTsKCQkJfQoKCQkJdmFyIGl0ZW1JZEludCA9IHBhcnNlSW50KGl0ZW1JZCk7CgkJCWlmIChpdGVtSWRJbnQgPT0gaXRlbUlkICYmIGl0ZW1JZCA+IDEwMDAwKSB7CgkJCQlyZXR1cm4gdHJ1ZTsKCQkJfSBlbHNlIHsKCQkJCXJldHVybiBmYWxzZTsKCQkJfQoJCX07CgoJCW9iai5pc1ZhbGlkTmlkID0gZnVuY3Rpb24obmlkKSB7CgkJCWlmICghbmlkKSB7CgkJCQlyZXR1cm4gZmFsc2U7CgkJCX0gZWxzZSBpZiAobmlkLmluZGV4T2YoJ2h0dHAnKSA+PSAwKSB7CgkJCQlpZiAob2JqLmlzRGV0YWlsUGFnZVRhb0JhbyhuaWQpIHx8IG5pZC5pbmRleE9mKCIvL2RldGFpbC5qdS50YW9iYW8uY29tL2hvbWUuaHRtIikgPiAwKSB7CgkJCQkJcmV0dXJuIHRydWU7CgkJCQl9IGVsc2UgewoJCQkJCXJldHVybiBmYWxzZTsKCQkJCX0KCQkJfSBlbHNlIHsKCQkJCXJldHVybiB0cnVlOwoJCQl9CgkJfTsKCgkJb2JqLmdldF9wYWdlX3VybF9pZCA9IGZ1bmN0aW9uKHBhZ2V0eXBlLCB1cmwsIHR5cGUpIHsKCQkJdmFyIHJldHVybl9kYXRhID0gJyc7CgkJCWlmIChwYWdldHlwZSA9PSAndGFvYmFvX2l0ZW0nKSB7CgkJCQl2YXIgcGFyYW1zID0gbG9jYXRpb24uc2VhcmNoLnNwbGl0KCI/IilbMV0uc3BsaXQoIiYiKTsKCQkJCWZvciAodmFyIGluZGV4IGluIHBhcmFtcykgewoJCQkJCWlmIChwYXJhbXNbaW5kZXhdLnNwbGl0KCI9IilbMF0gPT0gImlkIikgewoJCQkJCQl2YXIgcHJvZHVjdElkID0gcGFyYW1zW2luZGV4XS5zcGxpdCgiPSIpWzFdOwoJCQkJCX0KCQkJCX0KCQkJCXJldHVybl9kYXRhID0gcHJvZHVjdElkOwoJCQl9CgkJCXJldHVybiByZXR1cm5fZGF0YTsKCQl9CgkJb2JqLmdldF90eXBlX3VybCA9IGZ1bmN0aW9uKHVybCkgewoJCQlpZiAoCgkJCQl1cmwuaW5kZXhPZigiLy9pdGVtLnRhb2Jhby5jb20vaXRlbS5odG0iKSA+IDAgfHwKCQkJCXVybC5pbmRleE9mKCIvL2RldGFpbC50bWFsbC5jb20vaXRlbS5odG0iKSA+IDAgfHwKCQkJCXVybC5pbmRleE9mKCIvL2NoYW9zaGkuZGV0YWlsLnRtYWxsLmNvbS9pdGVtLmh0bSIpID4gMCB8fAoJCQkJdXJsLmluZGV4T2YoIi8vZGV0YWlsLnRtYWxsLmhrL2hrL2l0ZW0uaHRtIikgPiAwIHx8CgkJCQl1cmwuaW5kZXhPZigiLy93b3JsZC50bWFsbC5jb20iKSA+IDAgfHwKCQkJCXVybC5pbmRleE9mKCIvL2RldGFpbC5saWFuZ3hpbnlhby5jb20vaXRlbS5odG0iKSA+IDAgfHwKCQkJCXVybC5pbmRleE9mKCIvL2RldGFpbC50bWFsbC5oay9pdGVtLmh0bSIpID4gMAoJCQkpIHsKCQkJCXJldHVybiAndGFvYmFvX2l0ZW0nOwoJCQl9IGVsc2UgaWYgKAoJCQkJdXJsLmluZGV4T2YoIi8vbWFpeWFvLmxpYW5neGlueWFvLmNvbS9zaG9wL3ZpZXdfc2hvcC5odG0iKSA+IDAgfHwKCQkJCXVybC5pbmRleE9mKCIvL2xpc3QudG1hbGwuY29tL3NlYXJjaF9wcm9kdWN0Lmh0bSIpID4gMCB8fAoJCQkJdXJsLmluZGV4T2YoIi8vcy50YW9iYW8uY29tL3NlYXJjaCIpID4gMCB8fAoJCQkJdXJsLmluZGV4T2YoIi8vbGlzdC50bWFsbC5oay9zZWFyY2hfcHJvZHVjdC5odG0iKSA+IDAKCQkJKSB7CgkJCQlyZXR1cm4gJ3Rhb2Jhb19saXN0JzsKCQkJfSBlbHNlIGlmICgKCQkJCXVybC5pbmRleE9mKCIvL3NlYXJjaC5qZC5jb20vU2VhcmNoIikgPiAwIHx8CgkJCQl1cmwuaW5kZXhPZigiLy9zZWFyY2guamQuY29tL3NlYXJjaCIpID4gMCB8fAoJCQkJdXJsLmluZGV4T2YoIi8vc2VhcmNoLmpkLmhrL3NlYXJjaCIpID4gMCB8fAoJCQkJdXJsLmluZGV4T2YoIi8vc2VhcmNoLmpkLmhrL1NlYXJjaCIpID4gMCB8fAoJCQkJdXJsLmluZGV4T2YoIi8vd3d3LmpkLmNvbS94aW5rdWFuIikgPiAwIHx8CgkJCQl1cmwuaW5kZXhPZigiLy9saXN0LmpkLmNvbS9saXN0Lmh0bWwiKSA+IDAgfHwKCQkJCXVybC5pbmRleE9mKCIvL3NlYXJjaC5qZC5oay9TZWFyY2giKSA+IDAgfHwKCQkJCXVybC5pbmRleE9mKCIvL2NvbGwuamQuY29tIikgPiAwCgkJCSkgewoJCQkJcmV0dXJuICdqZF9saXN0JzsKCQkJfSBlbHNlIGlmICgKCQkJCXVybC5pbmRleE9mKCIvL2l0ZW0uamQuaGsiKSA+IDAgfHwKCQkJCXVybC5pbmRleE9mKCIvL3BjaXRlbS5qZC5oayIpID4gMCB8fAoJCQkJdXJsLmluZGV4T2YoIi8vaS1pdGVtLmpkLmNvbSIpID4gMCB8fAoJCQkJdXJsLmluZGV4T2YoIi8vaXRlbS5qZC5jb20iKSA+IDAgfHwKCQkJCXVybC5pbmRleE9mKCIvL25wY2l0ZW0uamQuaGsiKSA+IDAgfHwKICAgICAgICAgICAgICAgIHVybC5pbmRleE9mKCIvL2l0ZW0ueWl5YW9qZC5jb20iKSA+IDAKCQkJKSB7CgkJCQlyZXR1cm4gJ2pkX2l0ZW0nOwoJCQl9IGVsc2UgaWYgKAoJCQkJdXJsLmluZGV4T2YoIi8vbWlhb3NoYS5qZC5jb20iKSA+IDAKCQkJKSB7CgkJCQlyZXR1cm4gJ2pkX21pYW9zaGEnOwoJCQl9ZWxzZSBpZiAoCgkJCXVybC5pbmRleE9mKCIvL3d3dy5qZC5jb20iKSA+IDAgfHwKICAgICAgICAgICAgdXJsLmluZGV4T2YoIi8vamQuY29tIikgPiAwCgkJKSB7CgkJCXJldHVybiAnamRfaW5kZXgnOwoJCX0KCgkJfQoKCQl2YXIgcGFnZXVybCA9IGxvY2F0aW9uLmhyZWY7CgkJdmFyIHBhZ2V0eXBlID0gb2JqLmdldF90eXBlX3VybChwYWdldXJsKTsKCQlsZXQgbWFpbiA9IHsKCQkJaW5pdFZhbHVlKCkgewoJCQkJbGV0IHZhbHVlID0gW3sKCQkJCQluYW1lOiAnc2V0dGluZ19ycGNfZG9tYWluJywKCQkJCQl2YWx1ZTogJ2h0dHA6Ly9sb2NhbGhvc3QnCgkJCQl9LCB7CgkJCQkJbmFtZTogJ3NldHRpbmdfcnBjX3BvcnQnLAoJCQkJCXZhbHVlOiAnMTY4MDAnCgkJCQl9LCB7CgkJCQkJbmFtZTogJ3NldHRpbmdfcnBjX3Rva2VuJywKCQkJCQl2YWx1ZTogJycKCQkJCX0sIHsKCQkJCQluYW1lOiAnc2V0dGluZ19ycGNfZGlyJywKCQkJCQl2YWx1ZTogJ0Q6JwoJCQkJfSwgewoJCQkJCW5hbWU6ICdzZXR0aW5nX3RoZW1lX2NvbG9yJywKCQkJCQl2YWx1ZTogJyMwOUFBRkYnCgkJCQl9LCB7CgkJCQkJbmFtZTogJ3NldHRpbmdfaW5pdF9jb2RlJywKCQkJCQl2YWx1ZTogJycKCQkJCX0sIHsKCQkJCQluYW1lOiAnc2NvZGUnLAoJCQkJCXZhbHVlOiAnJwoJCQkJfV07CgoJCQkJdmFsdWUuZm9yRWFjaCgodikgPT4gewoJCQkJCXV0aWwuZ2V0VmFsdWUodi5uYW1lKSA9PT0gdW5kZWZpbmVkICYmIHV0aWwuc2V0VmFsdWUodi5uYW1lLCB2LnZhbHVlKTsKCQkJCX0pOwoJCQl9LAoKCQkJYWRkU3R5bGUoKSB7CgkJCQljb2xvciA9IHV0aWwuZ2V0VmFsdWUoJ3NldHRpbmdfdGhlbWVfY29sb3InKTsKCQkJCXV0aWwuc2V0SW50KCcjcGFubGlua2VyLWJ1dHRvbicpOwoJCQkJbGV0IGNzcyA9IGAKCSAgICAgICAgLnBsLXBvcHVwIHsgZm9udC1zaXplOiAxMnB4ICFpbXBvcnRhbnQ7IH0KCSAgICAgICAgLnBsLXBvcHVwIGEgeyBjb2xvcjogJHtjb2xvcn0gIWltcG9ydGFudDsgfQoJICAgICAgICAucGwtaGVhZGVyIHsgcGFkZGluZzogMCFpbXBvcnRhbnQ7YWxpZ24taXRlbXM6IGZsZXgtc3RhcnQhaW1wb3J0YW50OyBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2VlZSFpbXBvcnRhbnQ7IG1hcmdpbjogMCAwIDEwcHghaW1wb3J0YW50OyBwYWRkaW5nOiAwIDAgNXB4IWltcG9ydGFudDt9CgkgICAgICAgIC5wbC10aXRsZSB7IGZvbnQtc2l6ZTogMTZweCFpbXBvcnRhbnQ7IGxpbmUtaGVpZ2h0OiAxIWltcG9ydGFudDt3aGl0ZS1zcGFjZTogbm93cmFwIWltcG9ydGFudDsgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXMhaW1wb3J0YW50O30KCSAgICAgICAgLnBsLWNvbnRlbnQgeyBwYWRkaW5nOiAwICFpbXBvcnRhbnQ7IGZvbnQtc2l6ZTogMTJweCFpbXBvcnRhbnQ7fQoJICAgICAgICAucGwtbWFpbiB7IG1heC1oZWlnaHQ6IDQwMHB4O292ZXJmbG93LXk6c2Nyb2xsfQoJICAgICAgICAucGwtZm9vdGVyIHtmb250LXNpemU6IDEycHghaW1wb3J0YW50O2p1c3RpZnktY29udGVudDogZmxleC1zdGFydCFpbXBvcnRhbnQ7IG1hcmdpbjogMTBweCAwIDAhaW1wb3J0YW50OyBwYWRkaW5nOiA1cHggMCAwIWltcG9ydGFudDsgY29sb3I6ICNmNTZjNmMhaW1wb3J0YW50fQoJICAgICAgICAucGwtaXRlbSB7IGRpc3BsYXk6IGZsZXg7IGFsaWduLWl0ZW1zOiBjZW50ZXI7IGxpbmUtaGVpZ2h0OiAyMnB4OyB9CgkgICAgICAgIC5wbC1pdGVtLXRpdGxlIHsgZmxleDogMCAwIDE1MHB4OyB0ZXh0LWFsaWduOiBsZWZ0O21hcmdpbi1yaWdodDogMTBweDsgb3ZlcmZsb3c6IGhpZGRlbjsgd2hpdGUtc3BhY2U6IG5vd3JhcDsgdGV4dC1vdmVyZmxvdzogZWxsaXBzaXM7IGN1cnNvcjpkZWZhdWx0fQoJICAgICAgICAucGwtaXRlbS1saW5rIHsgZmxleDogMTsgb3ZlcmZsb3c6IGhpZGRlbjt0ZXh0LWFsaWduOiBsZWZ0OyB3aGl0ZS1zcGFjZTogbm93cmFwOyB0ZXh0LW92ZXJmbG93OiBlbGxpcHNpczsgfQoJICAgICAgICAucGwtaXRlbS10aXAgeyBkaXNwbGF5OiBmbGV4OyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47ZmxleDogMX0KCSAgICAgICAgLnBsLWJhY2sgeyB3aWR0aDogNzBweDsgYmFja2dyb3VuZDogI2RkZDsgYm9yZGVyLXJhZGl1czogM3B4O2N1cnNvcjpwb2ludGVyO21hcmdpbjoxcHggMCB9CgkgICAgICAgIC5wbC1leHQgeyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IHdpZHRoOiA0NHB4OyBiYWNrZ3JvdW5kOiAjOTk5OyBjb2xvcjogI2ZmZjsgaGVpZ2h0OiAxNnB4OyBsaW5lLWhlaWdodDogMTZweDsgZm9udC1zaXplOiAxMnB4OyBib3JkZXItcmFkaXVzOiAzcHg7fQoJICAgICAgICAucGwtcmV0cnkge3BhZGRpbmc6IDNweCAxMHB4OyBiYWNrZ3JvdW5kOiAjY2MzMjM1OyBjb2xvcjogI2ZmZjsgYm9yZGVyLXJhZGl1czogM3B4OyBjdXJzb3I6IHBvaW50ZXI7fQoJICAgICAgICAucGwtYnJvd3NlcmRvd25sb2FkIHtwYWRkaW5nOiAzcHggMTBweDsgYmFja2dyb3VuZDogJHtjb2xvcn07IGNvbG9yOiAjZmZmOyBib3JkZXItcmFkaXVzOiAzcHg7IGN1cnNvcjogcG9pbnRlcjt9CgkgICAgICAgIC5wbC1pdGVtLXByb2dyZXNzIHsgZGlzcGxheTpmbGV4O2ZsZXg6IDE7YWxpZ24taXRlbXM6Y2VudGVyfQoJICAgICAgICAucGwtcHJvZ3Jlc3MgeyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7dmVydGljYWwtYWxpZ246IG1pZGRsZTt3aWR0aDogMTAwJTsgYm94LXNpemluZzogYm9yZGVyLWJveDtsaW5lLWhlaWdodDogMTtwb3NpdGlvbjogcmVsYXRpdmU7aGVpZ2h0OjE1cHg7IGZsZXg6IDF9CgkgICAgICAgIC5wbC1wcm9ncmVzcy1vdXRlciB7IGhlaWdodDogMTVweDtib3JkZXItcmFkaXVzOiAxMDBweDtiYWNrZ3JvdW5kLWNvbG9yOiAjZWJlZWY1O292ZXJmbG93OiBoaWRkZW47cG9zaXRpb246IHJlbGF0aXZlO3ZlcnRpY2FsLWFsaWduOiBtaWRkbGU7fQoJICAgICAgICAucGwtcHJvZ3Jlc3MtaW5uZXJ7IHBvc2l0aW9uOiBhYnNvbHV0ZTtsZWZ0OiAwO3RvcDogMDtiYWNrZ3JvdW5kLWNvbG9yOiAjNDA5ZWZmO3RleHQtYWxpZ246IHJpZ2h0O2JvcmRlci1yYWRpdXM6IDEwMHB4O2xpbmUtaGVpZ2h0OiAxO3doaXRlLXNwYWNlOiBub3dyYXA7dHJhbnNpdGlvbjogd2lkdGggLjZzIGVhc2U7fQoJICAgICAgICAucGwtcHJvZ3Jlc3MtaW5uZXItdGV4dCB7IGRpc3BsYXk6IGlubGluZS1ibG9jazt2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO2NvbG9yOiAjZDFkMWQxO2ZvbnQtc2l6ZTogMTJweDttYXJnaW46IDAgNXB4O2hlaWdodDogMTVweH0KCSAgICAgICAgLnBsLXByb2dyZXNzLXRpcHsgZmxleDoxO3RleHQtYWxpZ246cmlnaHR9CgkgICAgICAgIC5wbC1wcm9ncmVzcy1ob3d7IGZsZXg6IDAgMCA5MHB4OyBiYWNrZ3JvdW5kOiAjZGRkOyBib3JkZXItcmFkaXVzOiAzcHg7IG1hcmdpbi1sZWZ0OiAxMHB4OyBjdXJzb3I6IHBvaW50ZXI7IHRleHQtYWxpZ246IGNlbnRlcjt9CgkgICAgICAgIC5wbC1wcm9ncmVzcy1zdG9weyBmbGV4OiAwIDAgNTBweDsgcGFkZGluZzogMCAxMHB4OyBiYWNrZ3JvdW5kOiAjY2MzMjM1OyBjb2xvcjogI2ZmZjsgYm9yZGVyLXJhZGl1czogM3B4OyBjdXJzb3I6IHBvaW50ZXI7bWFyZ2luLWxlZnQ6MTBweDtoZWlnaHQ6MjBweH0KCSAgICAgICAgLnBsLXByb2dyZXNzLWlubmVyLXRleHQ6YWZ0ZXIgeyBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7Y29udGVudDogIiI7aGVpZ2h0OiAxMDAlO3ZlcnRpY2FsLWFsaWduOiBtaWRkbGU7fQoJICAgICAgICAucGwtYnRuLXByaW1hcnkgeyBiYWNrZ3JvdW5kOiAke2NvbG9yfTsgYm9yZGVyOiAwOyBib3JkZXItcmFkaXVzOiA0cHg7IGNvbG9yOiAjZmZmZmZmOyBjdXJzb3I6IHBvaW50ZXI7IGZvbnQtc2l6ZTogMTJweDsgb3V0bGluZTogbm9uZTsgZGlzcGxheTpmbGV4OyBhbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgbWFyZ2luOiAycHggMDsgcGFkZGluZzogNnB4IDA7dHJhbnNpdGlvbjogMC4zcyBvcGFjaXR5OyB9CgkgICAgICAgIC5wbC1idG4taW5mbyB7IGJhY2tncm91bmQ6ICM2MDYyNjY7IH0KCSAgICAgICAgLnBsLWJ0bi1wcmltYXJ5OmhvdmVyIHsgb3BhY2l0eTogMC45O3RyYW5zaXRpb246IDAuM3Mgb3BhY2l0eTsgfQoJICAgICAgICAucGwtYnRuLWRhbmdlciB7IGJhY2tncm91bmQ6ICNjYzMyMzU7IH0KCSAgICAgICAgLnBsLWJ0bi1zdWNjZXNzIHsgYmFja2dyb3VuZDogIzU1YWYyODsgYW5pbWF0aW9uOiBlYXNlT3BhY2l0eSAxLjJzIDI7IGFuaW1hdGlvbi1maWxsLW1vZGU6Zm9yd2FyZHMgfQoJICAgICAgICAgQGtleWZyYW1lcyBlYXNlT3BhY2l0eSB7IGZyb20geyBvcGFjaXR5OiAxOyB9IDUwJSB7IG9wYWNpdHk6IDAuMzUgfSB0byB7IG9wYWNpdHk6IDE7IH0gfQoJICAgICAgICAuZWxlbWVudC1jbGlja2VkIHsgb3BhY2l0eTogMC41OyB9CgkgICAgICAgIC5wbC1leHRyYSB7IG1hcmdpbi10b3A6IDEwcHg7ZGlzcGxheTpmbGV4fQoJICAgICAgICAucGwtZXh0cmEgYnV0dG9uIHsgZmxleDogMX0KCSAgICAgICAgLnBvaW50ZXIgeyBjdXJzb3I6cG9pbnRlciB9CgkgICAgICAgIC5wbC1zZXR0aW5nLWxhYmVsIHsgZGlzcGxheTogZmxleDthbGlnbi1pdGVtczogY2VudGVyO2p1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtwYWRkaW5nLXRvcDogMTBweDsgfQoJICAgICAgICAucGwtbGFiZWwgeyBmbGV4OiAwIDAgMTAwcHg7dGV4dC1hbGlnbjpsZWZ0OyB9CgkgICAgICAgIC5wbC1pbnB1dCB7IGZsZXg6IDE7IHBhZGRpbmc6IDhweCAxMHB4OyBib3JkZXI6IDFweCBzb2xpZCAjYzJjMmMyOyBib3JkZXItcmFkaXVzOiA1cHg7IGZvbnQtc2l6ZTogMTRweCB9CgkgICAgICAgIC5wbC1jb2xvciB7IGZsZXg6IDE7ZGlzcGxheTogZmxleDtmbGV4LXdyYXA6IHdyYXA7IG1hcmdpbi1yaWdodDogLTEwcHg7fQoJICAgICAgICAucGwtY29sb3ItYm94IHsgd2lkdGg6IDM1cHg7aGVpZ2h0OiAzNXB4O21hcmdpbjoxMHB4IDEwcHggMCAwOzsgYm94LXNpemluZzogYm9yZGVyLWJveDtib3JkZXI6MXB4IHNvbGlkICNmZmY7Y3Vyc29yOnBvaW50ZXIgfQoJICAgICAgICAucGwtY29sb3ItYm94LmNoZWNrZWQgeyBib3JkZXI6M3B4IGRhc2hlZCAjMTExIWltcG9ydGFudCB9CgkgICAgICAgIC5wbC1jbG9zZTpmb2N1cyB7IG91dGxpbmU6IDA7IGJveC1zaGFkb3c6IG5vbmU7IH0KCSAgICAgICAgLnRhZy1kYW5nZXIge2NvbG9yOiNjYzMyMzU7bWFyZ2luOiAwIDVweDt9CgkgICAgICAgIC5wbC10b29sdGlwIHsgcG9zaXRpb246IGFic29sdXRlOyBjb2xvcjogI2ZmZmZmZjsgbWF4LXdpZHRoOiA2MDBweDsgZm9udC1zaXplOiAxMnB4OyBwYWRkaW5nOiA1cHggMTBweDsgYmFja2dyb3VuZDogIzMzMzsgYm9yZGVyLXJhZGl1czogNXB4OyB6LWluZGV4OiA5OTk5OTsgbGluZS1oZWlnaHQ6IDEuMzsgZGlzcGxheTpub25lOyB3b3JkLWJyZWFrOiBicmVhay1hbGw7fQoJICAgICAgICAgQGtleWZyYW1lcyBsb2FkIHsgMCUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKSB9IDEwMCUgeyB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpIH0gfQoJICAgICAgICAucGwtbG9hZGluZy1ib3ggPiBkaXYgPiBkaXYge3Bvc2l0aW9uOiBhYnNvbHV0ZTtib3JkZXItcmFkaXVzOiA1MCU7fQoJICAgICAgICAucGwtbG9hZGluZy1ib3ggPiBkaXYgPiBkaXY6bnRoLWNoaWxkKDEpIHt0b3A6IDlweDtsZWZ0OiA5cHg7d2lkdGg6IDgycHg7aGVpZ2h0OiA4MnB4O2JhY2tncm91bmQ6ICNmZmZmZmY7fQoJICAgICAgICAucGwtbG9hZGluZy1ib3ggPiBkaXYgPiBkaXY6bnRoLWNoaWxkKDIpIHt0b3A6IDE0cHg7bGVmdDogMzhweDt3aWR0aDogMjVweDtoZWlnaHQ6IDI1cHg7YmFja2dyb3VuZDogIzY2NjY2NjthbmltYXRpb246IGxvYWQgMXMgbGluZWFyIGluZmluaXRlO3RyYW5zZm9ybS1vcmlnaW46IDEycHggMzZweDt9CgkgICAgICAgIC5wbC1sb2FkaW5nIHt3aWR0aDogMTZweDtoZWlnaHQ6IDE2cHg7ZGlzcGxheTogaW5saW5lLWJsb2NrO292ZXJmbG93OiBoaWRkZW47YmFja2dyb3VuZDogbm9uZTt9CgkgICAgICAgIC5wbC1sb2FkaW5nLWJveCB7d2lkdGg6IDEwMCU7aGVpZ2h0OiAxMDAlO3Bvc2l0aW9uOiByZWxhdGl2ZTt0cmFuc2Zvcm06IHRyYW5zbGF0ZVooMCkgc2NhbGUoMC4xNik7YmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuO3RyYW5zZm9ybS1vcmlnaW46IDAgMDt9CgkgICAgICAgIC5wbC1sb2FkaW5nLWJveCBkaXYgeyBib3gtc2l6aW5nOiBjb250ZW50LWJveDsgfQoJICAgICAgICBgCgkJCQl1dGlsLmFkZFN0eWxlKCdwYW5saW5rZXItc3R5bGUnLCAnc3R5bGUnLCBjc3MpCgkJCX0sCgoJCQlhZGRQYWdlTGlzdGVuZXIoKSB7CgkJCQlmdW5jdGlvbiBfZmFjdG9yeShlKSB7CgkJCQkJbGV0IHRhcmdldCA9ICQoZS50YXJnZXQpOwoJCQkJCWxldCBpdGVtID0gdGFyZ2V0LnBhcmVudHMoJy5wbC1pdGVtJyk7CgkJCQkJbGV0IGxpbmsgPSBpdGVtLmZpbmQoJy5wbC1pdGVtLWxpbmsnKTsKCQkJCQlsZXQgcHJvZ3Jlc3MgPSBpdGVtLmZpbmQoJy5wbC1pdGVtLXByb2dyZXNzJyk7CgkJCQkJbGV0IHRpcCA9IGl0ZW0uZmluZCgnLnBsLWl0ZW0tdGlwJyk7CgkJCQkJcmV0dXJuIHsKCQkJCQkJaXRlbSwKCQkJCQkJbGluaywKCQkJCQkJcHJvZ3Jlc3MsCgkJCQkJCXRpcCwKCQkJCQkJdGFyZ2V0LAoJCQkJCX07CgkJCQl9CgoJCQkJZnVuY3Rpb24gX3Jlc2V0KGkpIHsKCQkJCQlpbnNbaV0gJiYgY2xlYXJJbnRlcnZhbChpbnNbaV0pOwoJCQkJCXJlcXVlc3RbaV0gJiYgcmVxdWVzdFtpXS5hYm9ydCgpOwoJCQkJCXByb2dyZXNzW2ldID0gMDsKCQkJCQlpZG1baV0gPSBmYWxzZTsKCQkJCX0KCgkJCQlkb2Mub24oJ2NsaWNrIG1vdXNlbGVhdmUnLCAnLnBsLWJ1dHRvbicsIChlKSA9PiB7CgkJCQkJaWYgKGUudHlwZSA9PT0gJ2NsaWNrJykgewoJCQkJCQkkKGUuY3VycmVudFRhcmdldCkuYWRkQ2xhc3MoJ2J1dHRvbi1vcGVuJyk7CgkJCQkJfSBlbHNlIHsKCQkJCQkJJChlLmN1cnJlbnRUYXJnZXQpLnJlbW92ZUNsYXNzKCdidXR0b24tb3BlbicpOwoJCQkJCX0KCQkJCX0pOwoJCQkJZG9jLm9uKCdjbGljaycsICcucGwtYnV0dG9uLW1vZGUnLCAoZSkgPT4gewoJCQkJCW1vZGUgPSBlLnRhcmdldC5kYXRhc2V0Lm1vZGU7CgkJCQkJU3dhbC5zaG93TG9hZGluZygpOwoJCQkJCXRoaXMuZ2V0UENTTGluaygpOwoJCQkJfSk7CgkJCQlkb2Mub24oJ2NsaWNrJywgJy5saXN0ZW5lci1saW5rLWFwaScsIGFzeW5jIChlKSA9PiB7CgkJCQkJZS5wcmV2ZW50RGVmYXVsdCgpOwoJCQkJCWxldCBvID0gX2ZhY3RvcnkoZSk7CgkJCQkJbGV0ICR3aWR0aCA9IG8uaXRlbS5maW5kKCcucGwtcHJvZ3Jlc3MtaW5uZXInKTsKCQkJCQlsZXQgJHRleHQgPSBvLml0ZW0uZmluZCgnLnBsLXByb2dyZXNzLWlubmVyLXRleHQnKTsKCQkJCQlsZXQgZmlsZW5hbWUgPSBvLmxpbmtbMF0uZGF0YXNldC5maWxlbmFtZTsKCQkJCQlsZXQgaW5kZXggPSBvLmxpbmtbMF0uZGF0YXNldC5pbmRleDsKCQkJCQlfcmVzZXQoaW5kZXgpOwoJCQkJCXV0aWwuZ2V0KG8ubGlua1swXS5kYXRhc2V0LmxpbmssIHsKCQkJCQkJIlVzZXItQWdlbnQiOiAiTG9nU3RhdGlzdGljIgoJCQkJCX0sICdibG9iJywgewoJCQkJCQlmaWxlbmFtZSwKCQkJCQkJaW5kZXgKCQkJCQl9KTsKCQkJCQkvLyBoZWFkZXJHZXQoby5saW5rWzBdLmRhdGFzZXQubGluaywgewoJCQkJCS8vIAkJCSJVc2VyLUFnZW50IjogIkxvZ1N0YXRpc3RpYyIKCQkJCQkvLyAJCX0sICdibG9iJywgewoJCQkJCS8vIAkJCWZpbGVuYW1lLAoJCQkJCS8vIAkJCWluZGV4CgkJCQkJLy8gCQl9KTsKCQkJCQlpbnNbaW5kZXhdID0gc2V0SW50ZXJ2YWwoKCkgPT4gewoJCQkJCQlsZXQgcHJvZyA9IHByb2dyZXNzW2luZGV4XSB8fCAwOwoJCQkJCQlsZXQgaXNJRE0gPSBpZG1baW5kZXhdIHx8IGZhbHNlOwoJCQkJCQlpZiAoaXNJRE0pIHsKCQkJCQkJCW8udGlwLmhpZGUoKTsKCQkJCQkJCW8ucHJvZ3Jlc3MuaGlkZSgpOwoJCQkJCQkJby5saW5rLnRleHQoJ+W3suaIkOWKn+WUpOi1t0lETe+8jOivt+afpeeci0lETeS4i+i9veahhu+8gScpLmFuaW1hdGUoewoJCQkJCQkJCW9wYWNpdHk6ICcwLjUnCgkJCQkJCQl9LCAic2xvdyIpLnNob3coKTsKCQkJCQkJCWNsZWFySW50ZXJ2YWwoaW5zW2luZGV4XSk7CgkJCQkJCQlpZG1baW5kZXhdID0gZmFsc2U7CgkJCQkJCX0gZWxzZSB7CgkJCQkJCQlvLmxpbmsuaGlkZSgpOwoJCQkJCQkJby50aXAuaGlkZSgpOwoJCQkJCQkJby5wcm9ncmVzcy5zaG93KCk7CgkJCQkJCQkkd2lkdGguY3NzKCd3aWR0aCcsIHByb2cgKyAnJScpOwoJCQkJCQkJJHRleHQudGV4dChwcm9nICsgJyUnKTsKCQkJCQkJCWlmIChwcm9nID09IDEwMCkgewoJCQkJCQkJCWNsZWFySW50ZXJ2YWwoaW5zW2luZGV4XSk7CgkJCQkJCQkJcHJvZ3Jlc3NbaW5kZXhdID0gMDsKCQkJCQkJCQlvLml0ZW0uZmluZCgnLnBsLXByb2dyZXNzLXN0b3AnKS5oaWRlKCk7CgkJCQkJCQkJby5pdGVtLmZpbmQoJy5wbC1wcm9ncmVzcy10aXAnKS5odG1sKCfkuIvovb3lrozmiJDvvIzmraPlnKjlvLnlh7rmtY/op4jlmajkuIvovb3moYbvvIEnKTsKCQkJCQkJCX0KCQkJCQkJfQoJCQkJCX0sIDUwMCk7CgkJCQl9KTsKCQkJCWRvYy5vbignY2xpY2snLCAnLmxpc3RlbmVyLXJldHJ5JywgYXN5bmMgKGUpID0+IHsKCQkJCQlsZXQgbyA9IF9mYWN0b3J5KGUpOwoJCQkJCW8udGlwLmhpZGUoKTsKCQkJCQlvLmxpbmsuc2hvdygpOwoJCQkJfSk7CgkJCQlkb2Mub24oJ2NsaWNrJywgJy5saXN0ZW5lci1ob3cnLCBhc3luYyAoZSkgPT4gewoJCQkJCWxldCBvID0gX2ZhY3RvcnkoZSk7CgkJCQkJbGV0IGluZGV4ID0gby5saW5rWzBdLmRhdGFzZXQuaW5kZXg7CgkJCQkJaWYgKHJlcXVlc3RbaW5kZXhdKSB7CgkJCQkJCXJlcXVlc3RbaW5kZXhdLmFib3J0KCk7CgkJCQkJCWNsZWFySW50ZXJ2YWwoaW5zW2luZGV4XSk7CgkJCQkJCW8ucHJvZ3Jlc3MuaGlkZSgpOwoJCQkJCQlvLnRpcC5zaG93KCk7CgkJCQkJfQoKCQkJCX0pOwoJCQkJZG9jLm9uKCdjbGljaycsICcubGlzdGVuZXItc3RvcCcsIGFzeW5jIChlKSA9PiB7CgkJCQkJbGV0IG8gPSBfZmFjdG9yeShlKTsKCQkJCQlsZXQgaW5kZXggPSBvLmxpbmtbMF0uZGF0YXNldC5pbmRleDsKCQkJCQlpZiAocmVxdWVzdFtpbmRleF0pIHsKCQkJCQkJcmVxdWVzdFtpbmRleF0uYWJvcnQoKTsKCQkJCQkJY2xlYXJJbnRlcnZhbChpbnNbaW5kZXhdKTsKCQkJCQkJby50aXAuaGlkZSgpOwoJCQkJCQlvLnByb2dyZXNzLmhpZGUoKTsKCQkJCQkJby5saW5rLnNob3coMCk7CgkJCQkJfQoJCQkJfSk7CgkJCQlkb2Mub24oJ2NsaWNrJywgJy5saXN0ZW5lci1iYWNrJywgYXN5bmMgKGUpID0+IHsKCQkJCQlsZXQgbyA9IF9mYWN0b3J5KGUpOwoJCQkJCW8udGlwLmhpZGUoKTsKCQkJCQlvLmxpbmsuc2hvdygpOwoJCQkJfSk7CgkJCQlkb2Mub24oJ2NsaWNrJywgJy5saXN0ZW5lci1saW5rLWFyaWEsIC5saXN0ZW5lci1jb3B5LWFyaWEnLCAoZSkgPT4gewoJCQkJCWUucHJldmVudERlZmF1bHQoKTsKCQkJCQlpZiAoIWUudGFyZ2V0LmRhdGFzZXQubGluaykgewoJCQkJCQkkKGUudGFyZ2V0KS5yZW1vdmVDbGFzcygnbGlzdGVuZXItY29weS1hcmlhJykuYWRkQ2xhc3MoJ3BsLWJ0bi1kYW5nZXInKS5odG1sKAoJCQkJCQkJYCR7cGFuLmluaXRbNV198J+RiTxhIGhyZWY9IiR7cGFuLmFzc2lzdGFudH0iIHRhcmdldD0iX2JsYW5rIj7ngrnlh7vmraTlpITlronoo4U8L2E+8J+RiGApOwoJCQkJCX0gZWxzZSB7CgkJCQkJCXV0aWwuc2V0Q2xpcGJvYXJkKGRlY29kZVVSSUNvbXBvbmVudChlLnRhcmdldC5kYXRhc2V0LmxpbmspKTsKCQkJCQkJJChlLnRhcmdldCkudGV4dCgn5aSN5Yi25oiQ5Yqf77yM5b+r5Y6757KY6LS05ZCn77yBJykuYW5pbWF0ZSh7CgkJCQkJCQlvcGFjaXR5OiAnMC41JwoJCQkJCQl9LCAic2xvdyIpOwoJCQkJCX0KCQkJCX0pOwoJCQkJZG9jLm9uKCdjbGljaycsICcubGlzdGVuZXItbGluay1ycGMnLCBhc3luYyAoZSkgPT4gewoJCQkJCWxldCB0YXJnZXQgPSAkKGUuY3VycmVudFRhcmdldCk7CgkJCQkJdGFyZ2V0LmZpbmQoJy5pY29uJykucmVtb3ZlKCk7CgkJCQkJdGFyZ2V0LmZpbmQoJy5wbC1sb2FkaW5nJykucmVtb3ZlKCk7CgkJCQkJdGFyZ2V0LnByZXBlbmQodGhpcy5jcmVhdGVMb2FkaW5nKCkpOwoJCQkJCWxldCByZXMgPSBhd2FpdCB0aGlzLnNlbmRMaW5rVG9SUEMoZS5jdXJyZW50VGFyZ2V0LmRhdGFzZXQuZmlsZW5hbWUsIGUuY3VycmVudFRhcmdldAoJCQkJCQkuZGF0YXNldC5saW5rKTsKCQkJCQlpZiAocmVzID09PSAnc3VjY2VzcycpIHsKCQkJCQkJJCgnLmxpc3RlbmVyLXJwYy10YXNrJykuc2hvdygpOwoJCQkJCQl0YXJnZXQucmVtb3ZlQ2xhc3MoJ3BsLWJ0bi1kYW5nZXInKS5odG1sKCflj5HpgIHmiJDlip/vvIzlv6vljrvnnIvnnIvlkKfvvIEnKS5hbmltYXRlKHsKCQkJCQkJCW9wYWNpdHk6ICcwLjUnCgkJCQkJCX0sICJzbG93Iik7CgkJCQkJfSBlbHNlIGlmIChyZXMgPT09ICdhc3Npc3RhbnQnKSB7CgkJCQkJCXRhcmdldC5hZGRDbGFzcygncGwtYnRuLWRhbmdlcicpLmh0bWwoCgkJCQkJCQlgJHtwYW4uaW5pdFs1XX3wn5GJPGEgaHJlZj0iJHtwYW4uYXNzaXN0YW50fSIgdGFyZ2V0PSJfYmxhbmsiPueCueWHu+atpOWkhOWuieijhTwvYT7wn5GIYAoJCQkJCQkJKTsKCQkJCQl9IGVsc2UgewoJCQkJCQl0YXJnZXQuYWRkQ2xhc3MoJ3BsLWJ0bi1kYW5nZXInKS50ZXh0KCflj5HpgIHlpLHotKXvvIzor7fmo4Dmn6XmgqjnmoRSUEPphY3nva7kv6Hmga/vvIEnKS5hbmltYXRlKHsKCQkJCQkJCW9wYWNpdHk6ICcwLjUnCgkJCQkJCX0sICJzbG93Iik7CgkJCQkJfQoJCQkJfSk7CgkJCQlkb2Mub24oJ2NsaWNrJywgJy5saXN0ZW5lci1zZW5kLXJwYycsIChlKSA9PiB7CgkJCQkJJCgnLmxpc3RlbmVyLWxpbmstcnBjJykuY2xpY2soKTsKCQkJCQkkKGUudGFyZ2V0KS50ZXh0KCflj5HpgIHlrozmiJDvvIzlj5HpgIHnu5Pmnpzop4HkuIrmlrnmjInpkq7vvIEnKS5hbmltYXRlKHsKCQkJCQkJb3BhY2l0eTogJzAuNScKCQkJCQl9LCAic2xvdyIpOwoJCQkJfSk7CgkJCQlkb2Mub24oJ2NsaWNrJywgJy5saXN0ZW5lci1jb25maWctcnBjJywgKGUpID0+IHsKCQkJCQl0aGlzLnNob3dTZXR0aW5nKCk7CgkJCQl9KTsKCQkJCWRvYy5vbignY2xpY2snLCAnLmxpc3RlbmVyLXJwYy10YXNrJywgKGUpID0+IHsKCQkJCQlsZXQgcnBjID0gSlNPTi5zdHJpbmdpZnkoewoJCQkJCQkJZG9tYWluOiB1dGlsLmdldFZhbHVlKCdzZXR0aW5nX3JwY19kb21haW4nKSwKCQkJCQkJCXBvcnQ6IHV0aWwuZ2V0VmFsdWUoJ3NldHRpbmdfcnBjX3BvcnQnKSwKCQkJCQkJfSksCgkJCQkJCXVybCA9CgkJCQkJCWBodHRwOi8vZC5iYWlkdXl1bi53aWtpLz9ycGM9JHt1dGlsLmVuY29kZShycGMpfSMke3V0aWwuZ2V0VmFsdWUoJ3NldHRpbmdfcnBjX3Rva2VuJyl9YDsKCQkJCQlHTV9vcGVuSW5UYWIodXJsLCB7CgkJCQkJCWFjdGl2ZTogdHJ1ZQoJCQkJCX0pOwoJCQkJfSk7CgkJCQlkb2Mub24oJ21vdXNlZW50ZXIgbW91c2VsZWF2ZScsICcubGlzdGVuZXItdGlwJywgKGUpID0+IHsKCQkJCQlpZiAoZS50eXBlID09PSAnbW91c2VlbnRlcicpIHsKCQkJCQkJbGV0IHRpcCA9IGUuY3VycmVudFRhcmdldC5pbm5lclRleHQ7CgkJCQkJCSQoZS5jdXJyZW50VGFyZ2V0KS5jc3MoewoJCQkJCQkJb3BhY2l0eTogJzAuNScKCQkJCQkJfSk7CgkJCQkJCSQoJy5wbC10b29sdGlwJykudGV4dCh0aXApLmNzcyh7CgkJCQkJCQknbGVmdCc6IGUucGFnZVggKyAxMCArICdweCcsCgkJCQkJCQkndG9wJzogZS5wYWdlWSAtIGUuY3VycmVudFRhcmdldC5vZmZzZXRUb3AgPiAxNCA/IGUucGFnZVkgKyAncHgnIDogZQoJCQkJCQkJCS5wYWdlWSArIDIwICsgJ3B4JwoJCQkJCQl9KS5zaG93KCk7CgkJCQkJfSBlbHNlIHsKCQkJCQkJJChlLmN1cnJlbnRUYXJnZXQpLmNzcyh7CgkJCQkJCQlvcGFjaXR5OiAnMScKCQkJCQkJfSk7CgkJCQkJCSQoJy5wbC10b29sdGlwJykuaGlkZSgwKTsKCQkJCQl9CgkJCQl9KTsKCQkJfSwKCgkJCWNyZWF0ZVRpcCgpIHsKCQkJCSQoJ2JvZHknKS5hcHBlbmQoJzxkaXYgY2xhc3M9InBsLXRvb2x0aXAiPjwvZGl2PicpOwoJCQl9LAoKCQkJY3JlYXRlTG9hZGluZygpIHsKCQkJCXJldHVybiAkKAoJCQkJCSc8ZGl2IGNsYXNzPSJwbC1sb2FkaW5nIj48ZGl2IGNsYXNzPSJwbC1sb2FkaW5nLWJveCI+PGRpdj48ZGl2PjwvZGl2PjxkaXY+PC9kaXY+PC9kaXY+PC9kaXY+PC9kaXY+JwoJCQkJCSk7CgkJCX0sCgoJCQlhZGRCdXR0b24oKSB7CgkJCQlwYWdlVHlwZSA9IHRoaXMuX2RldGVjdFBhZ2UoKTsKCQkJCWlmIChwYWdlVHlwZSAhPT0gJ2hvbWUnICYmIHBhZ2VUeXBlICE9PSAnc2hhcmUnKSByZXR1cm47CgkJCQlpZiAoKCQoJy5wbC1idXR0b24nKS5sZW5ndGggfHwgJCgnLnBsLWJ1dHRvbi1pbml0JykubGVuZ3RoKSAmJiBwYW4ubmFtZSAhPT0gbmFtZSkgcmV0dXJuOwoKCQkJCWxldCAkdG9vbFdyYXA7CgkJCQlwYWdlVHlwZSA9PT0gJ2hvbWUnID8gJHRvb2xXcmFwID0gJChwYW4uYnRuLmhvbWUpIDogJHRvb2xXcmFwID0gJChwYW4uYnRuLnNoYXJlKTsKCQkJCWxldCAkYnV0dG9uID0gJCgKCQkJCQlgPHNwYW4gY2xhc3M9ImctZHJvcGRvd24tYnV0dG9uIHBvaW50ZXIgcGwtYnV0dG9uIj48YSBzdHlsZT0iY29sb3I6I2ZmZjtiYWNrZ3JvdW5kOiAke2NvbG9yfTtib3JkZXItY29sb3I6JHtjb2xvcn0iIGNsYXNzPSJnLWJ1dHRvbiBnLWJ1dHRvbi1ibHVlIiBocmVmPSJqYXZhc2NyaXB0OjsiPjxzcGFuIGNsYXNzPSJnLWJ1dHRvbi1yaWdodCI+PGVtIGNsYXNzPSJpY29uIGljb24tZG93bmxvYWQiPjwvZW0+PHNwYW4gY2xhc3M9InRleHQiIHN0eWxlPSJ3aWR0aDogNjBweDsiPuS4i+i9veWKqeaJizwvc3Bhbj48L3NwYW4+PC9hPjxzcGFuIGNsYXNzPSJtZW51IiBzdHlsZT0id2lkdGg6YXV0bzt6LWluZGV4OjQxO2JvcmRlci1jb2xvcjoke2NvbG9yfSI+PGEgc3R5bGU9ImNvbG9yOiR7Y29sb3J9IiBjbGFzcz0iZy1idXR0b24tbWVudSBwbC1idXR0b24tbW9kZSIgZGF0YS1tb2RlPSJhcGkiIGhyZWY9ImphdmFzY3JpcHQ6OyI+QVBJ5LiL6L29PC9hPjxhIHN0eWxlPSJjb2xvcjoke2NvbG9yfSIgY2xhc3M9ImctYnV0dG9uLW1lbnUgcGwtYnV0dG9uLW1vZGUiIGRhdGEtbW9kZT0iYXJpYSIgaHJlZj0iamF2YXNjcmlwdDo7IiA+QXJpYeS4i+i9vTwvYT48YSBzdHlsZT0iY29sb3I6JHtjb2xvcn0iIGNsYXNzPSJnLWJ1dHRvbi1tZW51IHBsLWJ1dHRvbi1tb2RlIiBkYXRhLW1vZGU9InJwYyIgaHJlZj0iamF2YXNjcmlwdDo7Ij5SUEPkuIvovb08L2E+PC9zcGFuPjwvc3Bhbj5gCgkJCQkJKTsKCQkJCSR0b29sV3JhcC5wcmVwZW5kKCRidXR0b24pOwoJCQkJZW5kID0gcGVyZm9ybWFuY2Uubm93KCk7CgkJCQlsZXQgdGltZSA9IChlbmQgLSBzdGFydCkudG9GaXhlZCgyKTsKCQkJCXV0aWwuY2xvZyhg5Yqp5omL5Yqg6L295oiQ5Yqf77yB54mI5pys77yaJHt2ZXJzaW9ufSDogJfml7bvvJoke3RpbWV95q+r56eSYCk7CgkJCQl1dGlsLnNldEJEVVNTKCk7CgkJCQl0aGlzLmFkZFBhZ2VMaXN0ZW5lcigpOwoJCQl9LAoKCQkJYWRkSW5pdEJ1dHRvbigpIHsKCQkJCXBhZ2VUeXBlID0gdGhpcy5fZGV0ZWN0UGFnZSgpOwoJCQkJaWYgKHBhZ2VUeXBlICE9PSAnaG9tZScgJiYgcGFnZVR5cGUgIT09ICdzaGFyZScpIHJldHVybjsKCQkJCWlmICgkKCcucGwtYnV0dG9uLWluaXQnKS5sZW5ndGggJiYgcGFuLm5hbWUgIT09IG5hbWUpIHJldHVybjsKCgkJCQlsZXQgJHRvb2xXcmFwOwoJCQkJdXRpbC5zZXRJbnQoJy5wbC1idXR0b24nKTsKCQkJCXBhZ2VUeXBlID09PSAnaG9tZScgPyAkdG9vbFdyYXAgPSAkKHBhbi5idG4uaG9tZSkgOiAkdG9vbFdyYXAgPSAkKHBhbi5idG4uc2hhcmUpOwoJCQkJbGV0ICRidXR0b24gPSAkKAoJCQkJCWA8c3BhbiBjbGFzcz0iZy1kcm9wZG93bi1idXR0b24gcG9pbnRlciBwbC1idXR0b24taW5pdCIgc3R5bGU9Im9wYWNpdHk6IDAuNSI+PGEgc3R5bGU9ImNvbG9yOiNmZmY7YmFja2dyb3VuZDogJHtjb2xvcn07Ym9yZGVyLWNvbG9yOiR7Y29sb3J9IiBjbGFzcz0iZy1idXR0b24gZy1idXR0b24tYmx1ZSIgaHJlZj0iamF2YXNjcmlwdDo7Ij48c3BhbiBjbGFzcz0iZy1idXR0b24tcmlnaHQiPjxlbSBjbGFzcz0iaWNvbiBpY29uLWRvd25sb2FkIj48L2VtPjxzcGFuIGNsYXNzPSJ0ZXh0IiBzdHlsZT0id2lkdGg6IDYwcHg7Ij7kuIvovb3liqnmiYs8L3NwYW4+PC9zcGFuPjwvc3Bhbj48L2E+PC9zcGFuPmAKCQkJCQkpOwoJCQkJJHRvb2xXcmFwLnByZXBlbmQoJGJ1dHRvbik7CgkJCQkkYnV0dG9uLmNsaWNrKCgpID0+IHsKCQkJCQl0aGlzLl9pbml0RGlhbG9nKCk7CgkJCQl9KTsKCQkJfSwKCgkJCWFzeW5jIGdldFBDU0xpbmsoKSB7CgkJCQlzZWxlY3RGaWxlID0gdGhpcy5nZXRTZWxjdGVkRmlsZSgpOwoJCQkJbGV0IGZpZF9saXN0ID0gdGhpcy5fZ2V0RmlkTGlzdCgpLAoJCQkJCXVybCwgcmVzOwoJCQkJaWYgKHBhZ2VUeXBlID09PSAnaG9tZScpIHsKCQkJCQlpZiAoc2VsZWN0RmlsZS5sZW5ndGggPT09IDApIHsKCQkJCQkJcmV0dXJuIHV0aWwubWVzc2FnZS5lcnJvcign5o+Q56S677ya6K+35YWI5Yu+6YCJ6KaB5LiL6L2955qE5paH5Lu277yBJyk7CgkJCQkJfQoJCQkJCWlmIChmaWRfbGlzdC5sZW5ndGggPT09IDIpIHsKCQkJCQkJcmV0dXJuIHV0aWwubWVzc2FnZS5lcnJvcign5o+Q56S677ya6K+35omT5byA5paH5Lu25aS55ZCO5Yu+6YCJ5paH5Lu277yBJyk7CgkJCQkJfQoJCQkJCWZpZF9saXN0ID0gZW5jb2RlVVJJQ29tcG9uZW50KGZpZF9saXN0KTsKCQkJCQl1cmwgPSBgJHtwYW4ucGNzWzBdfSZmc2lkcz0ke2ZpZF9saXN0fWA7CgkJCQkJcmVzID0gYXdhaXQgdXRpbC5nZXQodXJsLCB7CgkJCQkJCSJVc2VyLUFnZW50IjogcGFuLnVhCgkJCQkJfSk7CgkJCQl9CgkJCQlpZiAocGFnZVR5cGUgPT09ICdzaGFyZScpIHsKCQkJCQl0aGlzLmluaXRQYXJhbXMoKTsKCQkJCQlpZiAoc2VsZWN0RmlsZS5sZW5ndGggPT09IDApIHsKCQkJCQkJcmV0dXJuIHV0aWwubWVzc2FnZS5lcnJvcign5o+Q56S677ya6K+35YWI5Yu+6YCJ6KaB5LiL6L2955qE5paH5Lu277yBJyk7CgkJCQkJfQoJCQkJCWlmIChmaWRfbGlzdC5sZW5ndGggPT09IDIpIHsKCQkJCQkJcmV0dXJuIHV0aWwubWVzc2FnZS5lcnJvcign5o+Q56S677ya6K+35omT5byA5paH5Lu25aS55ZCO5Yu+6YCJ5paH5Lu277yBJyk7CgkJCQkJfQoJCQkJCWlmICghcGFyYW1zLnNpZ24pIHsKCQkJCQkJbGV0IHVybCA9IGAke3Bhbi5wY3NbMl19JnN1cmw9JHtwYXJhbXMuc3VybH0mbG9naWQ9JHtwYXJhbXMubG9naWR9YDsKCQkJCQkJbGV0IHIgPSBhd2FpdCB1dGlsLmdldCh1cmwpOwoJCQkJCQlpZiAoci5lcnJubyA9PT0gMCkgewoJCQkJCQkJcGFyYW1zLnNpZ24gPSByLmRhdGEuc2lnbjsKCQkJCQkJCXBhcmFtcy50aW1lc3RhbXAgPSByLmRhdGEudGltZXN0YW1wOwoJCQkJCQkJdGhpcy5fc2V0TG9jYWxzKCdzaWduJywgci5kYXRhLnNpZ24pOwoJCQkJCQkJdGhpcy5fc2V0TG9jYWxzKCd0aW1lc3RhbXAnLCByLmRhdGEudGltZXN0YW1wKTsKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCWxldCBkaWFsb2cgPSBhd2FpdCBTd2FsLmZpcmUoewoJCQkJCQkJCXRvYXN0OiB0cnVlLAoJCQkJCQkJCWljb246ICdpbmZvJywKCQkJCQkJCQl0aXRsZTogYOaPkOekuu+8muivt+WwhuaWh+S7tjxzcGFuIGNsYXNzPSJ0YWctZGFuZ2VyIj5b5L+d5a2Y5Yiw572R55uYXTwvc3Bhbj7wn5GJ5ZyoPHNwYW4gY2xhc3M9InRhZy1kYW5nZXIiPlvmiJHnmoTnvZHnm5hdPC9zcGFuPuS4reS4i+i9ve+8gWAsCgkJCQkJCQkJc2hvd0NvbmZpcm1CdXR0b246IHRydWUsCgkJCQkJCQkJY29uZmlybUJ1dHRvblRleHQ6ICfngrnlh7vkv53lrZgnLAoJCQkJCQkJCXBvc2l0aW9uOiAndG9wJywKCQkJCQkJCX0pOwoJCQkJCQkJaWYgKGRpYWxvZy5pc0NvbmZpcm1lZCkgewoJCQkJCQkJCSQoJy50b29scy1zaGFyZS1zYXZlLWhiJylbMF0uY2xpY2soKTsKCQkJCQkJCX0KCQkJCQkJCXJldHVybjsKCQkJCQkJfQoJCQkJCX0KCQkJCQlpZiAoIXBhcmFtcy5iZHN0b2tlbikgewoJCQkJCQlyZXR1cm4gdXRpbC5tZXNzYWdlLmVycm9yKCfmj5DnpLrvvJrnmbvlvZXnvZHnm5jlkI7miY3og73kvb/nlKjmraTlip/og73lk6bvvIEnKTsKCQkJCQl9CgkJCQkJbGV0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7CgkJCQkJZm9ybURhdGEuYXBwZW5kKCdlbmNyeXB0JywgcGFyYW1zLmVuY3J5cHQpOwoJCQkJCWZvcm1EYXRhLmFwcGVuZCgncHJvZHVjdCcsIHBhcmFtcy5wcm9kdWN0KTsKCQkJCQlmb3JtRGF0YS5hcHBlbmQoJ3VrJywgcGFyYW1zLnVrKTsKCQkJCQlmb3JtRGF0YS5hcHBlbmQoJ3ByaW1hcnlpZCcsIHBhcmFtcy5wcmltYXJ5aWQpOwoJCQkJCWZvcm1EYXRhLmFwcGVuZCgnZmlkX2xpc3QnLCBmaWRfbGlzdCk7CgkJCQkJZm9ybURhdGEuYXBwZW5kKCdsb2dpZCcsIHBhcmFtcy5sb2dpZCk7CgkJCQkJcGFyYW1zLnNoYXJlVHlwZSA9PSAnc2VjcmV0JyA/IGZvcm1EYXRhLmFwcGVuZCgnZXh0cmEnLCBwYXJhbXMuZXh0cmEpIDogJyc7CgkJCQkJdXJsID0gYCR7cGFuLnBjc1sxXX0mc2lnbj0ke3BhcmFtcy5zaWdufSZ0aW1lc3RhbXA9JHtwYXJhbXMudGltZXN0YW1wfWA7CgkJCQkJcmVzID0gYXdhaXQgdXRpbC5wb3N0KHVybCwgZm9ybURhdGEsIHsKCQkJCQkJIlVzZXItQWdlbnQiOiBwYW4udWEKCQkJCQl9KTsKCQkJCX0KCQkJCWlmIChyZXMuZXJybm8gPT09IDApIHsKCQkJCQlsZXQgaHRtbCA9IHRoaXMuZ2VuZXJhdGVEb20ocmVzLmxpc3QpOwoJCQkJCXRoaXMuc2hvd01haW5EaWFsb2cocGFuW21vZGVdWzBdLCBodG1sLCBwYW5bbW9kZV1bMV0pOwoJCQkJfSBlbHNlIGlmIChyZXMuZXJybm8gPT09IDExMikgewoJCQkJCXJldHVybiB1dGlsLm1lc3NhZ2UuZXJyb3IoJ+aPkOekuu+8mumhtemdoui/h+acn++8jOivt+WIt+aWsOmHjeivle+8gScpOwoJCQkJfSBlbHNlIHsKCQkJCQl1dGlsLm1lc3NhZ2UuZXJyb3IoJ+aPkOekuu+8muiOt+WPluS4i+i9vemTvuaOpeWksei0pe+8geivt+WIt+aWsOe9kemhteWQjumHjeivle+8gScpOwoJCQkJfQoJCQl9LAoKCQkJZ2VuZXJhdGVEb20obGlzdCkgewoJCQkJbGV0IGNvbnRlbnQgPSAnPGRpdiBjbGFzcz0icGwtbWFpbiI+JzsKCQkJCWxldCBhbGlua0FsbFRleHQgPSAnJzsKCQkJCWxpc3QuZm9yRWFjaCgodiwgaSkgPT4gewoJCQkJCWlmICh2LmlzZGlyID09PSAxKSByZXR1cm47CgkJCQkJbGV0IGZpbGVuYW1lID0gdi5zZXJ2ZXJfZmlsZW5hbWUgfHwgdi5maWxlbmFtZTsKCQkJCQlsZXQgZXh0ID0gdXRpbC5nZXRFeHRlbnNpb24oZmlsZW5hbWUpOwoJCQkJCWxldCBkbGluayA9IHYuZGxpbms7CgkJCQkJaWYgKG1vZGUgPT09ICdhcGknKSB7CgkJCQkJCWxldCB1cmw9YGh0dHBzOi8vamguaWRleS5jbi9saW5rLnBocD9saW5rPSR7ZW5jb2RlVVJJQ29tcG9uZW50KGRsaW5rKX1gOwoJCQkJCQlsZXQgcmVzPSBoR2V0KHVybCk7CgkJCQkJCWlmKHJlcy50eXBlPT0nc3VjY2VzcycgJiYgcmVzLmRhdGEgIT1mYWxzZSl7CgkJCQkJCQlyZXMuZGF0YT0naHR0cDovLycrcmVzLmRhdGE7CgkJCQkJCQljb250ZW50ICs9IGA8ZGl2IGNsYXNzPSJwbC1pdGVtIj4KCQkJCQkJCSAgICAgICAgPGRpdiBjbGFzcz0icGwtaXRlbS10aXRsZSBsaXN0ZW5lci10aXAiPiR7ZmlsZW5hbWV9PC9kaXY+CgkJCQkJCQkgICAgICAgIDxhIGNsYXNzPSJwbC1pdGVtLWxpbmsgbGlzdGVuZXItbGluay1hcGkiIGhyZWY9IiR7cmVzLmRhdGF9IiBkYXRhLWZpbGVuYW1lPSIke2ZpbGVuYW1lfSIgZGF0YS1saW5rPSIke3Jlcy5kYXRhfSIgZGF0YS1pbmRleD0iJHtpfSIgPiR7cmVzLmRhdGF9PC9hPgoJCQkJCQkJICAgICAgICA8ZGl2IGNsYXNzPSJwbC1pdGVtLXRpcCIgc3R5bGU9ImRpc3BsYXk6IG5vbmUiPjxzcGFuPuiLpeayoeacieW8ueWHuklETeS4i+i9veahhu+8jOaJvuWIsElETSA8Yj7pgInpobk8L2I+IC0+IDxiPuaWh+S7tuexu+WeizwvYj4gLT4gPGI+56ys5LiA5Liq5qGGPC9iPiDkuK3mt7vliqDlkI7nvIAgPHNwYW4gY2xhc3M9InBsLWV4dCI+JHtleHR9PC9zcGFuPu+8jDxhIGhyZWY9Imh0dHBzOi8vd3d3LmJhaWR1eXVuLndpa2kvemgtY24vaWRtLmh0bWwiIHRhcmdldD0iX2JsYW5rIj7or6bop4HmraTlpIQ8L2E+PC9zcGFuPiA8c3BhbiBjbGFzcz0icGwtYmFjayBsaXN0ZW5lci1iYWNrIj7ov5Tlm548L3NwYW4+PC9kaXY+CgkJCQkJCQkgICAgICAgIDxkaXYgY2xhc3M9InBsLWl0ZW0tcHJvZ3Jlc3MiIHN0eWxlPSJkaXNwbGF5OiBub25lIj4KCQkJCQkJCSAgICAgICAgICAgIDxkaXYgY2xhc3M9InBsLXByb2dyZXNzIj4KCQkJCQkJCSAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwbC1wcm9ncmVzcy1vdXRlciI+PC9kaXY+CgkJCQkJCQkgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGwtcHJvZ3Jlc3MtaW5uZXIiIHN0eWxlPSJ3aWR0aDo1JSI+CgkJCQkJCQkgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwbC1wcm9ncmVzcy1pbm5lci10ZXh0Ij4wJTwvZGl2PgoJCQkJCQkJICAgICAgICAgICAgICAgIDwvZGl2PgoJCQkJCQkJICAgICAgICAgICAgPC9kaXY+CgkJCQkJCQkgICAgICAgICAgICA8c3BhbiBjbGFzcz0icGwtcHJvZ3Jlc3Mtc3RvcCBsaXN0ZW5lci1zdG9wIj7lj5bmtojkuIvovb08L3NwYW4+CgkJCQkJCQkgICAgICAgICAgICA8c3BhbiBjbGFzcz0icGwtcHJvZ3Jlc3MtdGlwIj7mnKrlj5HnjrBJRE3vvIzkvb/nlKjoh6rluKbmtY/op4jlmajkuIvovb08L3NwYW4+CgkJCQkJCQkgICAgICAgICAgICA8c3BhbiBjbGFzcz0icGwtcHJvZ3Jlc3MtaG93IGxpc3RlbmVyLWhvdyI+5aaC5L2V5ZSk6LW3SURN77yfPC9zcGFuPgoJCQkJCQkJICAgICAgICA8L2Rpdj48L2Rpdj5gOwoJCQkJCQl9ZWxzZSBpZihyZXMudHlwZT09J3N1Y2Nlc3MnICYmIHJlcy5kYXRhID09ZmFsc2UpewoJCQkJCQkJY29udGVudCArPSBgPGRpdiBjbGFzcz0icGwtaXRlbSI+CgkJCQkJCQkgICAgICAgIDxkaXYgY2xhc3M9InBsLWl0ZW0tdGl0bGUgbGlzdGVuZXItdGlwIj48L2Rpdj4KCQkJCQkJCSAgICAgICAgPGEgY2xhc3M9InBsLWl0ZW0tbGluayBsaXN0ZW5lci1saW5rLWFwaSIgaHJlZj0iIiBkYXRhLWZpbGVuYW1lPSIiIGRhdGEtbGluaz0iIiBkYXRhLWluZGV4PSIiID7mirHmrYnvvIzojrflj5bpq5jpgJ/kuIvovb3pk77mjqXlpLHotKXvvIzor7fpgIDlh7rlvZPliY3otKblj7fph43mlrDnmbvlvZXljbPlj688L2E+CgkJCQkJCQkgICAgICAgPC9kaXY+YDsKCQkJCQkJfWVsc2V7CgkJCQkJCQljb250ZW50ICs9IGA8ZGl2IGNsYXNzPSJwbC1pdGVtIj4KCQkJCQkJCSAgICAgICAgPGRpdiBjbGFzcz0icGwtaXRlbS10aXRsZSBsaXN0ZW5lci10aXAiPiR7ZmlsZW5hbWV9PC9kaXY+CgkJCQkJCQkgICAgICAgIDxhIGNsYXNzPSJwbC1pdGVtLWxpbmsgbGlzdGVuZXItbGluay1hcGkiIGhyZWY9IiR7ZGxpbmt9IiBkYXRhLWZpbGVuYW1lPSIke2ZpbGVuYW1lfSIgZGF0YS1saW5rPSIke2RsaW5rfSIgZGF0YS1pbmRleD0iJHtpfSIgPiR7ZGxpbmt9PC9hPgoJCQkJCQkJICAgICAgICA8ZGl2IGNsYXNzPSJwbC1pdGVtLXRpcCIgc3R5bGU9ImRpc3BsYXk6IG5vbmUiPjxzcGFuPuiLpeayoeacieW8ueWHuklETeS4i+i9veahhu+8jOaJvuWIsElETSA8Yj7pgInpobk8L2I+IC0+IDxiPuaWh+S7tuexu+WeizwvYj4gLT4gPGI+56ys5LiA5Liq5qGGPC9iPiDkuK3mt7vliqDlkI7nvIAgPHNwYW4gY2xhc3M9InBsLWV4dCI+JHtleHR9PC9zcGFuPu+8jDxhIGhyZWY9Imh0dHBzOi8vd3d3LmJhaWR1eXVuLndpa2kvemgtY24vaWRtLmh0bWwiIHRhcmdldD0iX2JsYW5rIj7or6bop4HmraTlpIQ8L2E+PC9zcGFuPiA8c3BhbiBjbGFzcz0icGwtYmFjayBsaXN0ZW5lci1iYWNrIj7ov5Tlm548L3NwYW4+PC9kaXY+CgkJCQkJCQkgICAgICAgIDxkaXYgY2xhc3M9InBsLWl0ZW0tcHJvZ3Jlc3MiIHN0eWxlPSJkaXNwbGF5OiBub25lIj4KCQkJCQkJCSAgICAgICAgICAgIDxkaXYgY2xhc3M9InBsLXByb2dyZXNzIj4KCQkJCQkJCSAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwbC1wcm9ncmVzcy1vdXRlciI+PC9kaXY+CgkJCQkJCQkgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGwtcHJvZ3Jlc3MtaW5uZXIiIHN0eWxlPSJ3aWR0aDo1JSI+CgkJCQkJCQkgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwbC1wcm9ncmVzcy1pbm5lci10ZXh0Ij4wJTwvZGl2PgoJCQkJCQkJICAgICAgICAgICAgICAgIDwvZGl2PgoJCQkJCQkJICAgICAgICAgICAgPC9kaXY+CgkJCQkJCQkgICAgICAgICAgICA8c3BhbiBjbGFzcz0icGwtcHJvZ3Jlc3Mtc3RvcCBsaXN0ZW5lci1zdG9wIj7lj5bmtojkuIvovb08L3NwYW4+CgkJCQkJCQkgICAgICAgICAgICA8c3BhbiBjbGFzcz0icGwtcHJvZ3Jlc3MtdGlwIj7mnKrlj5HnjrBJRE3vvIzkvb/nlKjoh6rluKbmtY/op4jlmajkuIvovb08L3NwYW4+CgkJCQkJCQkgICAgICAgICAgICA8c3BhbiBjbGFzcz0icGwtcHJvZ3Jlc3MtaG93IGxpc3RlbmVyLWhvdyI+5aaC5L2V5ZSk6LW3SURN77yfPC9zcGFuPgoJCQkJCQkJICAgICAgICA8L2Rpdj48L2Rpdj5gOwoJCQkJCQl9CgoJCQkJCX0KCQkJCQlpZiAobW9kZSA9PT0gJ2FyaWEnKSB7CgkJCQkJCWxldCBhbGluayA9IHV0aWwuY29udmVydFRvQXJpYShkbGluaywgZmlsZW5hbWUsIHBhbi51YSk7CgkJCQkJCWlmICh0eXBlb2YoYWxpbmspID09PSAnb2JqZWN0JykgewoJCQkJCQkJY29udGVudCArPQoJCQkJCQkJCWA8ZGl2IGNsYXNzPSJwbC1pdGVtIj4KCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwbC1pdGVtLXRpdGxlIGxpc3RlbmVyLXRpcCI+JHtmaWxlbmFtZX08L2Rpdj4KCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0icGwtaXRlbS1saW5rIiB0YXJnZXQ9Il9ibGFuayIgaHJlZj0iJHthbGluay5saW5rfSIgYWx0PSLngrnlh7vlpI3liLZhcmlhMmPpk77mjqUiIGRhdGEtZmlsZW5hbWU9IiR7ZmlsZW5hbWV9IiBkYXRhLWxpbms9IiR7YWxpbmsubGlua30iPiR7ZGVjb2RlVVJJQ29tcG9uZW50KGFsaW5rLnRleHQpfTwvYT4gPC9kaXY+YDsKCQkJCQkJfSBlbHNlIHsKCQkJCQkJCWFsaW5rQWxsVGV4dCArPSBhbGluayArICdcclxuJzsKCQkJCQkJCWNvbnRlbnQgKz0KCQkJCQkJCQlgPGRpdiBjbGFzcz0icGwtaXRlbSI+CgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGwtaXRlbS10aXRsZSBsaXN0ZW5lci10aXAiPiR7ZmlsZW5hbWV9PC9kaXY+CgkgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InBsLWl0ZW0tbGluayBsaXN0ZW5lci1saW5rLWFyaWEiIGhyZWY9IiR7YWxpbmt9IiBhbHQ9IueCueWHu+WkjeWItmFyaWEyY+mTvuaOpSIgZGF0YS1maWxlbmFtZT0iJHtmaWxlbmFtZX0iIGRhdGEtbGluaz0iJHthbGlua30iPiR7ZGVjb2RlVVJJQ29tcG9uZW50KGFsaW5rKX08L2E+IDwvZGl2PmA7CgkJCQkJCX0KCQkJCQl9CgkJCQkJaWYgKG1vZGUgPT09ICdycGMnKSB7CgkJCQkJCWNvbnRlbnQgKz0KCQkJCQkJCWA8ZGl2IGNsYXNzPSJwbC1pdGVtIj4KCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwbC1pdGVtLXRpdGxlIGxpc3RlbmVyLXRpcCI+JHtmaWxlbmFtZX08L2Rpdj4KCSAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YnV0dG9uIGNsYXNzPSJwbC1pdGVtLWxpbmsgbGlzdGVuZXItbGluay1ycGMgcGwtYnRuLXByaW1hcnkgcGwtYnRuLWluZm8iIGRhdGEtZmlsZW5hbWU9IiR7ZmlsZW5hbWV9IiBkYXRhLWxpbms9IiR7ZGxpbmt9Ij48ZW0gY2xhc3M9Imljb24gaWNvbi1kZXZpY2UiPjwvZW0+PHNwYW4gc3R5bGU9Im1hcmdpbi1sZWZ0OiA1cHg7Ij7mjqjpgIHliLBSUEPkuIvovb3lmag8L3NwYW4+PC9idXR0b24+PC9kaXY+YDsKCQkJCQl9CgkJCQl9KTsKCQkJCWNvbnRlbnQgKz0gJzwvZGl2Pic7CgkJCQlpZiAobW9kZSA9PT0gJ2FyaWEnKQoJCQkJCWNvbnRlbnQgKz0KCQkJCQlgPGRpdiBjbGFzcz0icGwtZXh0cmEiPjxidXR0b24gY2xhc3M9InBsLWJ0bi1wcmltYXJ5IGxpc3RlbmVyLWNvcHktYXJpYSIgZGF0YS1saW5rPSIke2FsaW5rQWxsVGV4dH0iPuWkjeWItuWFqOmDqOmTvuaOpTwvYnV0dG9uPjwvZGl2PmA7CgkJCQlpZiAobW9kZSA9PT0gJ3JwYycpCgkJCQkJY29udGVudCArPQoJCQkJCSc8ZGl2IGNsYXNzPSJwbC1leHRyYSI+PGJ1dHRvbiBjbGFzcz0icGwtYnRuLXByaW1hcnkgIGxpc3RlbmVyLXNlbmQtcnBjIj7lj5HpgIHlhajpg6jpk77mjqU8L2J1dHRvbj48YnV0dG9uIGNsYXNzPSJwbC1idG4tcHJpbWFyeSBsaXN0ZW5lci1jb25maWctcnBjIiBzdHlsZT0ibWFyZ2luLWxlZnQ6IDEwcHg7Ij7phY3nva5SUEPmnI3liqE8L2J1dHRvbj48YnV0dG9uIGNsYXNzPSJwbC1idG4tcHJpbWFyeSBwbC1idG4tc3VjY2VzcyBsaXN0ZW5lci1ycGMtdGFzayIgc3R5bGU9Im1hcmdpbi1sZWZ0OiAxMHB4O2Rpc3BsYXk6IG5vbmUiPuafpeeci+S4i+i9veS7u+WKoTwvYnV0dG9uPjwvZGl2Pic7CgkJCQlyZXR1cm4gY29udGVudDsKCQkJfSwKCgkJCWFzeW5jIHNlbmRMaW5rVG9SUEMoZmlsZW5hbWUsIGxpbmspIHsKCQkJCWxldCBycGMgPSB7CgkJCQkJZG9tYWluOiB1dGlsLmdldFZhbHVlKCdzZXR0aW5nX3JwY19kb21haW4nKSwKCQkJCQlwb3J0OiB1dGlsLmdldFZhbHVlKCdzZXR0aW5nX3JwY19wb3J0JyksCgkJCQkJdG9rZW46IHV0aWwuZ2V0VmFsdWUoJ3NldHRpbmdfcnBjX3Rva2VuJyksCgkJCQkJZGlyOiB1dGlsLmdldFZhbHVlKCdzZXR0aW5nX3JwY19kaXInKSwKCQkJCX07CgkJCQlsZXQgQkRVU1MgPSB1dGlsLmdldEJEVVNTKCk7CgkJCQlpZiAoIUJEVVNTKSByZXR1cm4gJ2Fzc2lzdGFudCc7CgoJCQkJbGV0IHVybCA9IGAke3JwYy5kb21haW59OiR7cnBjLnBvcnR9L2pzb25ycGNgOwoJCQkJbGV0IGpzb25fcnBjID0gewoJCQkJCWlkOiBuZXcgRGF0ZSgpLmdldFRpbWUoKSwKCQkJCQlqc29ucnBjOiAnMi4wJywKCQkJCQltZXRob2Q6ICdhcmlhMi5hZGRVcmknLAoJCQkJCXBhcmFtczogW2B0b2tlbjoke3JwYy50b2tlbn1gLCBbbGlua10sIHsKCQkJCQkJZGlyOiBycGMuZGlyLAoJCQkJCQlvdXQ6IGZpbGVuYW1lLAoJCQkJCQloZWFkZXI6IFtgVXNlci1BZ2VudDogJHtwYW4udWF9YCwgYENvb2tpZTogQkRVU1M9JHtCRFVTU31gXQoJCQkJCX1dCgkJCQl9OwoJCQkJdHJ5IHsKCQkJCQlsZXQgcmVzID0gYXdhaXQgdXRpbC5wb3N0KHVybCwgSlNPTi5zdHJpbmdpZnkoanNvbl9ycGMpLCB7CgkJCQkJCSJVc2VyLUFnZW50IjogcGFuLnVhCgkJCQkJfSwgJycpOwoJCQkJCWlmIChyZXMucmVzdWx0KSByZXR1cm4gJ3N1Y2Nlc3MnOwoJCQkJCXJldHVybiAnZmFpbCc7CgkJCQl9IGNhdGNoIChlKSB7CgkJCQkJcmV0dXJuICdmYWlsJzsKCQkJCX0KCQkJfSwKCgkJCS8qKgoJCQkgKiDojrflj5bpgInkuK3mlofku7bliJfooagKCQkJICogQHJldHVybnMgeyp9CgkJCSAqLwoJCQlnZXRTZWxjdGVkRmlsZSgpIHsKCQkJCXJldHVybiByZXF1aXJlKCdzeXN0ZW0tY29yZTpjb250ZXh0L2NvbnRleHQuanMnKS5pbnN0YW5jZUZvclN5c3RlbS5saXN0LmdldFNlbGVjdGVkKCk7CgkJCX0sCgoJCQlnZXRMb2dpZCgpIHsKCQkJCWxldCB1dCA9IHJlcXVpcmUoInN5c3RlbS1jb3JlOmNvbnRleHQvY29udGV4dC5qcyIpLmluc3RhbmNlRm9yU3lzdGVtLnRvb2xzLmJhc2VTZXJ2aWNlOwoJCQkJcmV0dXJuIHV0LmJhc2U2NEVuY29kZSh1dGlsLmdldENvb2tpZSgiQkFJRFVJRCIpKTsKCQkJfSwKCgkJCWluaXRQYXJhbXMoKSB7CgkJCQlwYXJhbXMuc2hhcmVUeXBlID0gJ3NlY3JldCc7CgkJCQlwYXJhbXMuc2lnbiA9IHRoaXMuX2dldExvY2Fscygnc2lnbicpOwoJCQkJcGFyYW1zLnRpbWVzdGFtcCA9IHRoaXMuX2dldExvY2FscygndGltZXN0YW1wJyk7CgkJCQlwYXJhbXMuYmRzdG9rZW4gPSB0aGlzLl9nZXRMb2NhbHMoJ2Jkc3Rva2VuJyk7CgkJCQlwYXJhbXMuY2hhbm5lbCA9ICdjaHVubGVpJzsKCQkJCXBhcmFtcy5jbGllbnR0eXBlID0gMDsKCQkJCXBhcmFtcy53ZWIgPSAxOwoJCQkJcGFyYW1zLmFwcF9pZCA9IDI1MDUyODsKCQkJCXBhcmFtcy5lbmNyeXB0ID0gMDsKCQkJCXBhcmFtcy5wcm9kdWN0ID0gJ3NoYXJlJzsKCQkJCXBhcmFtcy5sb2dpZCA9IHRoaXMuZ2V0TG9naWQoKTsKCQkJCXBhcmFtcy5wcmltYXJ5aWQgPSB0aGlzLl9nZXRMb2NhbHMoJ3NoYXJlaWQnKTsKCQkJCXBhcmFtcy51ayA9IHRoaXMuX2dldExvY2Fscygnc2hhcmVfdWsnKTsKCQkJCXBhcmFtcy5zaGFyZVR5cGUgPT09ICdzZWNyZXQnICYmIChwYXJhbXMuZXh0cmEgPSB0aGlzLl9nZXRFeHRyYSgpKTsKCQkJCXBhcmFtcy5zdXJsID0gdGhpcy5fZ2V0U3VybCgpOwoJCQl9LAoKCQkJX2RldGVjdFBhZ2UoKSB7CgkJCQlsZXQgcmVneCA9IC9bXC9dLitbXC9dL2c7CgkJCQlsZXQgcGFnZSA9IGxvY2F0aW9uLnBhdGhuYW1lLm1hdGNoKHJlZ3gpOwoJCQkJbGV0IHBhdGggPSBwYWdlWzBdLnJlcGxhY2UoL1wvL2csICcnKTsKCQkJCWlmIChwYXRoID09PSAnZGlzaycpIHJldHVybiAnaG9tZSc7CgkJCQlpZiAocGF0aCA9PT0gJ3MnIHx8IHBhdGggPT09ICdzaGFyZScpIHJldHVybiAnc2hhcmUnOwoJCQkJcmV0dXJuICcnOwoJCQl9LAoKCQkJX2dldExvY2Fscyh2YWwpIHsKCQkJCXRyeSB7CgkJCQkJcmV0dXJuIGxvY2Fscy5nZXQodmFsKTsKCQkJCX0gY2F0Y2ggewoJCQkJCXJldHVybiAnJzsKCQkJCX0KCQkJfSwKCgkJCV9zZXRMb2NhbHMobmFtZSwgdmFsKSB7CgkJCQl0cnkgewoJCQkJCXJldHVybiBsb2NhbHMuc2V0KG5hbWUsIHZhbCk7CgkJCQl9IGNhdGNoIHsKCQkJCQlyZXR1cm4gJyc7CgkJCQl9CgkJCX0sCgoJCQlfZ2V0RXh0cmEoKSB7CgkJCQlsZXQgc2VLZXkgPSBkZWNvZGVVUklDb21wb25lbnQodXRpbC5nZXRDb29raWUoJ0JEQ0xORCcpKTsKCQkJCXJldHVybiAneycgKyAnInNla2V5IjoiJyArIHNlS2V5ICsgJyInICsgIn0iOwoJCQl9LAoKCQkJX2dldFN1cmwoKSB7CgkJCQlsZXQgcmVnID0gLyg/PD1zXC98c3VybD0pKFthLXpBLVowLTlfLV0rKS9nOwoJCQkJaWYgKHJlZy50ZXN0KGxvY2F0aW9uLmhyZWYpKSB7CgkJCQkJcmV0dXJuIGxvY2F0aW9uLmhyZWYubWF0Y2gocmVnKVswXTsKCQkJCX0KCQkJCXJldHVybiAnJzsKCQkJfSwKCgkJCV9nZXRGaWRMaXN0KCkgewoJCQkJbGV0IGZpZGxpc3QgPSBbXTsKCQkJCXNlbGVjdEZpbGUuZm9yRWFjaCh2ID0+IHsKCQkJCQlpZiAodi5pc2RpciA9PSAxKSByZXR1cm47CgkJCQkJZmlkbGlzdC5wdXNoKHYuZnNfaWQpOwoJCQkJfSk7CgkJCQlyZXR1cm4gJ1snICsgZmlkbGlzdCArICddJzsKCQkJfSwKCQkJX3Jlc2V0RGF0YSgpIHsKCQkJCXByb2dyZXNzID0ge307CgkJCQkkLmVhY2gocmVxdWVzdCwgKGtleSkgPT4gewoJCQkJCShyZXF1ZXN0W2tleV0pLmFib3J0KCk7CgkJCQl9KTsKCQkJCSQuZWFjaChpbnMsIChrZXkpID0+IHsKCQkJCQljbGVhckludGVydmFsKGluc1trZXldKTsKCQkJCX0pOwoJCQkJaWRtID0ge307CgkJCQlpbnMgPSB7fTsKCQkJCXJlcXVlc3QgPSB7fTsKCQkJfSwKCgkJCXNob3dNYWluRGlhbG9nKHRpdGxlLCBodG1sLCBmb290ZXIpIHsKCQkJCVN3YWwuZmlyZSh7CgkJCQkJdGl0bGUsCgkJCQkJaHRtbCwKCQkJCQlmb290ZXIsCgkJCQkJYWxsb3dPdXRzaWRlQ2xpY2s6IGZhbHNlLAoJCQkJCXNob3dDbG9zZUJ1dHRvbjogdHJ1ZSwKCQkJCQlzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCgkJCQkJcG9zaXRpb246ICd0b3AnLAoJCQkJCXdpZHRoLAoJCQkJCXBhZGRpbmc6ICcxNXB4IDIwcHggNXB4JywKCQkJCQljdXN0b21DbGFzcywKCQkJCX0pLnRoZW4oKCkgPT4gewoJCQkJCXRoaXMuX3Jlc2V0RGF0YSgpOwoJCQkJfSk7CgkJCX0sCgoJCQlhc3luYyBpbml0UGFuTGlua2VyKCkgewoJCQkJc3RhcnQgPSBwZXJmb3JtYW5jZS5ub3coKTsKCQkJCWxldCByZXMgPSBhd2FpdCB1dGlsLnBvc3QoYGh0dHBzOi8vYXBpLmJhaWR1eXVuLndpa2kvY29uZmlnP3Zlcj0ke3ZlcnNpb259JmE9JHthdXRob3J9YCwge30sIHt9LAoJCQkJCSd0ZXh0Jyk7CgkJCQlwYW4gPSBKU09OLnBhcnNlKHV0aWwuZGVjb2RlKHJlcykpOwoJCQkJT2JqZWN0LmZyZWV6ZSAmJiBPYmplY3QuZnJlZXplKHBhbik7CgkJCQl1dGlsLnNsZWVwKDUwMCkudGhlbigoKT0+ewoJCQkJCXRoaXMuYWRkQnV0dG9uKCk7CgkJCQl9KQoKCQkJfSwKCgkJCXJlZ2lzdGVyTWVudUNvbW1hbmQoKSB7CgkJCQlHTV9yZWdpc3Rlck1lbnVDb21tYW5kKCforr7nva4nLCAoKSA9PiB7CgkJCQkJdGhpcy5zaG93U2V0dGluZygpOwoJCQkJfSk7CgkJCX0sCgoJCQlzaG93U2V0dGluZygpIHsKCQkJCWxldCBkb20gPSAnJywKCQkJCQlidG4gPSAnJywKCQkJCQljb2xvckxpc3QgPSBbJyMwOUFBRkYnLCAnI2NjMzIzNScsICcjNTc0YWI4JywgJyM1MThjMTcnLCAnI2VkOTQ0YicsICcjZjk2OWE1JywgJyNiY2EyODAnXTsKCQkJCWRvbSArPQoJCQkJCWA8bGFiZWwgY2xhc3M9InBsLXNldHRpbmctbGFiZWwiPjxkaXYgY2xhc3M9InBsLWxhYmVsIj5SUEPkuLvmnLo8L2Rpdj48aW5wdXQgdHlwZT0idGV4dCIgIHBsYWNlaG9sZGVyPSLkuLvmnLrlnLDlnYDvvIzpnIDluKbkuIpodHRwKHMpOi8vIiBjbGFzcz0icGwtaW5wdXQgbGlzdGVuZXItZG9tYWluIiB2YWx1ZT0iJHt1dGlsLmdldFZhbHVlKCdzZXR0aW5nX3JwY19kb21haW4nKX0iPjwvbGFiZWw+YDsKCQkJCWRvbSArPQoJCQkJCWA8bGFiZWwgY2xhc3M9InBsLXNldHRpbmctbGFiZWwiPjxkaXYgY2xhc3M9InBsLWxhYmVsIj5SUEPnq6/lj6M8L2Rpdj48aW5wdXQgdHlwZT0idGV4dCIgcGxhY2Vob2xkZXI9Iuerr+WPo+WPt++8jOS+i+Wmgu+8mk1vdHJpeOS4ujE2ODAwIiBjbGFzcz0icGwtaW5wdXQgbGlzdGVuZXItcG9ydCIgdmFsdWU9IiR7dXRpbC5nZXRWYWx1ZSgnc2V0dGluZ19ycGNfcG9ydCcpfSI+PC9sYWJlbD5gOwoJCQkJZG9tICs9CgkJCQkJYDxsYWJlbCBjbGFzcz0icGwtc2V0dGluZy1sYWJlbCI+PGRpdiBjbGFzcz0icGwtbGFiZWwiPlJQQ+WvhumSpTwvZGl2PjxpbnB1dCB0eXBlPSJ0ZXh0IiBwbGFjZWhvbGRlcj0i5peg5a+G6ZKl5peg6ZyA5aGr5YaZIiBjbGFzcz0icGwtaW5wdXQgbGlzdGVuZXItdG9rZW4iIHZhbHVlPSIke3V0aWwuZ2V0VmFsdWUoJ3NldHRpbmdfcnBjX3Rva2VuJyl9Ij48L2xhYmVsPmA7CgkJCQlkb20gKz0KCQkJCQlgPGxhYmVsIGNsYXNzPSJwbC1zZXR0aW5nLWxhYmVsIj48ZGl2IGNsYXNzPSJwbC1sYWJlbCI+5L+d5a2Y6Lev5b6EPC9kaXY+PGlucHV0IHR5cGU9InRleHQiIHBsYWNlaG9sZGVyPSLmlofku7bkuIvovb3lkI7kv53lrZjot6/lvoTvvIzkvovlpoLvvJpEOiIgY2xhc3M9InBsLWlucHV0IGxpc3RlbmVyLWRpciIgdmFsdWU9IiR7dXRpbC5nZXRWYWx1ZSgnc2V0dGluZ19ycGNfZGlyJyl9Ij48L2xhYmVsPmA7CgoJCQkJY29sb3JMaXN0LmZvckVhY2goKHYpID0+IHsKCQkJCQlidG4gKz0KCQkJCQkJYDxkaXYgZGF0YS1jb2xvcj0iJHt2fSIgc3R5bGU9ImJhY2tncm91bmQ6ICR7dn07Ym9yZGVyOiAxcHggc29saWQgJHt2fSIgY2xhc3M9InBsLWNvbG9yLWJveCBsaXN0ZW5lci1jb2xvciAke3YgPT0gdXRpbC5nZXRWYWx1ZSgnc2V0dGluZ190aGVtZV9jb2xvcicpID8gJ2NoZWNrZWQnIDogJyd9Ij48L2Rpdj5gOwoJCQkJfSk7CgkJCQlkb20gKz0KCQkJCQlgPGxhYmVsIGNsYXNzPSJwbC1zZXR0aW5nLWxhYmVsIj48ZGl2IGNsYXNzPSJwbC1sYWJlbCI+5Li76aKY6aKc6ImyPC9kaXY+IDxkaXYgY2xhc3M9InBsLWNvbG9yIj4ke2J0bn08ZGl2PjwvbGFiZWw+YDsKCQkJCWRvbSA9ICc8ZGl2PicgKyBkb20gKyAnPC9kaXY+JzsKCgkJCQlTd2FsLmZpcmUoewoJCQkJCXRpdGxlOiAn5Yqp5omL6YWN572uJywKCQkJCQlodG1sOiBkb20sCgkJCQkJaWNvbjogJ2luZm8nLAoJCQkJCXNob3dDbG9zZUJ1dHRvbjogdHJ1ZSwKCQkJCQlzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCgkJCQkJZm9vdGVyOiBwYW4uZm9vdGVyLAoJCQkJfSkudGhlbigoKSA9PiB7CgkJCQkJdXRpbC5tZXNzYWdlLnN1Y2Nlc3MoJ+iuvue9ruaIkOWKn++8gScpOwoJCQkJCWhpc3RvcnkuZ28oMCk7CgkJCQl9KTsKCgkJCQlkb2Mub24oJ2NsaWNrJywgJy5saXN0ZW5lci1jb2xvcicsIGFzeW5jIChlKSA9PiB7CgkJCQkJdXRpbC5zZXRWYWx1ZSgnc2V0dGluZ190aGVtZV9jb2xvcicsIGUudGFyZ2V0LmRhdGFzZXQuY29sb3IpOwoJCQkJCXV0aWwubWVzc2FnZS5zdWNjZXNzKCforr7nva7miJDlip/vvIEnKTsKCQkJCQloaXN0b3J5LmdvKDApOwoJCQkJfSk7CgkJCQlkb2Mub24oJ2lucHV0JywgJy5saXN0ZW5lci1kb21haW4nLCBhc3luYyAoZSkgPT4gewoJCQkJCXV0aWwuc2V0VmFsdWUoJ3NldHRpbmdfcnBjX2RvbWFpbicsIGUudGFyZ2V0LnZhbHVlKTsKCQkJCX0pOwoJCQkJZG9jLm9uKCdpbnB1dCcsICcubGlzdGVuZXItcG9ydCcsIGFzeW5jIChlKSA9PiB7CgkJCQkJdXRpbC5zZXRWYWx1ZSgnc2V0dGluZ19ycGNfcG9ydCcsIGUudGFyZ2V0LnZhbHVlKTsKCQkJCX0pOwoJCQkJZG9jLm9uKCdpbnB1dCcsICcubGlzdGVuZXItdG9rZW4nLCBhc3luYyAoZSkgPT4gewoJCQkJCXV0aWwuc2V0VmFsdWUoJ3NldHRpbmdfcnBjX3Rva2VuJywgZS50YXJnZXQudmFsdWUpOwoJCQkJfSk7CgkJCQlkb2Mub24oJ2lucHV0JywgJy5saXN0ZW5lci1kaXInLCBhc3luYyAoZSkgPT4gewoJCQkJCXV0aWwuc2V0VmFsdWUoJ3NldHRpbmdfcnBjX2RpcicsIGUudGFyZ2V0LnZhbHVlKTsKCQkJCX0pOwoJCQl9LAoKCQkJaW5pdCgpIHsKCQkJCXRoaXMuaW5pdFZhbHVlKCk7CgkJCQl0aGlzLmFkZFN0eWxlKCk7CgkJCQl0aGlzLmluaXRQYW5MaW5rZXIoKTsKCQkJCXRoaXMuY3JlYXRlVGlwKCk7CgkJCQl0aGlzLnJlZ2lzdGVyTWVudUNvbW1hbmQoKTsKCQkJfQoJCX07CgkJaWYgKHBhZ2V0eXBlID09ICd0YW9iYW9faXRlbScpIHsKCQkJb2JqLmluaXRTdHlsZShzdHlsZSk7CgkJCQl2YXIgcHJvZHVjdElkID0gb2JqLmdldF9wYWdlX3VybF9pZChwYWdldHlwZSwgcGFnZXVybCwgcGFnZXVybCk7CgkJCQkJCQl2YXIgY291cG9udXJsID0gImh0dHBzOi8vd3d3LmlkZXkuY24vYXBpL2luZGV4L3JlY292ZV91cmw/aXRlbXVybD0iICsgZW5jb2RlVVJJQ29tcG9uZW50KGxvY2F0aW9uLmhyZWYpICsKCQkJCQkJCQknJml0ZW1pZD0nICsKCQkJCQkJCQlwcm9kdWN0SWQ7CgkJCQkJCQkkLmdldEpTT04oY291cG9udXJsLCBmdW5jdGlvbihyZXMpIHsKCQkJCQkJCQl2YXIgZGF0YSA9IHJlcy5kYXRhOwoKCQkJCQkJCQl2YXIgY291cG9uQXJlYSA9ICc8ZGl2IGNsYXNzPSJpZGV5LW1pbmliYXJfYmciPic7CgkJCQkJCQkJY291cG9uQXJlYSArPSAnPGRpdiBpZD0iaWRleV9taW5pYmFyIiBjbGFzcz0iYWxpc2l0ZV9wYWdlIj4nOwoJCQkJCQkJCWNvdXBvbkFyZWEgKz0KCQkJCQkJCQkJJzxhIGNsYXNzPSJpZGV5X3dlYnNpdGUiICBpZD0iaWRleV93ZWJzaXRlX2ljb24iIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3Rhb2Jhby5pZGV5LmNuIj4nOwoJCQkJCQkJCWNvdXBvbkFyZWEgKz0gJzxlbSBjbGFzcz0ic2V0dGluZy1iZyB3ZWJzaXRlX2ljb24iPjwvZW0+PC9hPic7CgkJCQkJCQkJY291cG9uQXJlYSArPSAnPGRpdiAgaWQ9Im1pbmlfcHJpY2VfaGlzdG9yeSIgY2xhc3M9Im1pbmliYXItdGFiIj4nOwoKCgoJCQkJCQkJCWNvdXBvbkFyZWEgKz0KCQkJCQkJCQkJJzxzcGFuIGNsYXNzPSJibGtjb2xvcjEiPuW9k+WJjeS7tzo8c3BhbiBzdHlsZT0iY29sb3I6cmVkIiBpZD0ibm93X3ByaWNlIj7liqDovb3kuK0uLi48L3NwYW4+PC9zcGFuPic7CgkJCQkJCQkJY291cG9uQXJlYSArPSAnPGRpdiBjbGFzcz0idHJlbmQtZXJyb3ItaW5mby1taW5pIiBpZD0iZWNoYXJ0LWJveCI+JzsKCQkJCQkJCQljb3Vwb25BcmVhICs9ICc8L2Rpdj48L2Rpdj4nOwoJCQkJCQkJCWNvdXBvbkFyZWEgKz0KCQkJCQkJCQkJJzxkaXYgc3R5bGU9ImZsZXg6IDEiIGlkPSJpZGV5X21pbmlfY29tcGFyZSIgY2xhc3M9Im1pbmliYXItdGFiIj7mnIDkvY7ku7fvvJo8c3BhbiBzdHlsZT0iY29sb3I6cmVkIiBpZD0ibWluX3ByaWNlIj7liqDovb3kuK0uLi48L3NwYW4+PC9kaXY+JzsKCQkJCQkJCQljb3Vwb25BcmVhICs9ICc8ZGl2IHN0eWxlPSJmbGV4OiAxIiBpZD0iaWRleV9taW5pX3JlbWluZCIgY2xhc3M9Im1pbmliYXItdGFiIj4nOwoJCQkJCQkJCWNvdXBvbkFyZWEgKz0gJ+WKteWQjuS7t++8mjxzcGFuIHN0eWxlPSJjb2xvcjpyZWQiIGlkPSJjb3Vwb25fcHJpY2UiPuWKoOi9veS4rS4uLjwvc3Bhbj4nOwoKCQkJCQkJCQljb3Vwb25BcmVhICs9ICcgPC9kaXY+PC9kaXY+JzsKCQkJCQkJCQljb3Vwb25BcmVhICs9CgkJCQkJCQkJCScgPGRpdiBjbGFzcz0iaWRleS1taW5pLXBsYWNlaG9sZGVyIGlkZXktcHJpY2UtcHJvdGVjdCI+PC9kaXY+PGRpdiBpZD0icHJvbW9fYm94Ij48L2Rpdj4nOwoKCgoJCQkJCQkJCWlmIChyZXMudHlwZSA9PSAnc3VjY2VzcycpIHsKCQkJCQkJCQkJaWYgKGRhdGEuY291cG9uQW1vdW50ID4gMCkgewoJCQkJCQkJCQkJY291cG9uQXJlYSArPQoJCQkJCQkJCQkJCSc8YSBpZD0iY291cG9uX2JveCIgdGl0bGU9IiIgY2xhc3M9ImNvdXBvbi1ib3gxIiBocmVmPSJodHRwczovL3d3dy5pZGV5LmNuL2FwaS9pbmRleC9yZWRpcmVjdF91cmw/aXRlbWlkPScgKwoJCQkJCQkJCQkJCXByb2R1Y3RJZCArICcmY291cG9uaWQ9JyArIGRhdGEuY291cG9uSWQgKyAnIj4nOwoJCQkJCQkJCQkJY291cG9uQXJlYSArPSAnPHNwYW4gY2xhc3M9ImNvdXBvbi1pY29uIj48L3NwYW4+JzsKCQkJCQkJCQkJCWNvdXBvbkFyZWEgKz0gJyA8ZGl2IGNsYXNzPSJjb3Vwb24tdGxlIj4gPHNwYW4+5b2T5YmN5ZWG5ZOB6aKG5Yi456uL5YePJyArIGRhdGEuY291cG9uQW1vdW50ICsKCQkJCQkJCQkJCQkn5YWDPC9zcGFuPiA8ZW0gY2xhc3M9ImNvdXBvbl9naWYiPjwvZW0+PC9kaXY+JzsKCQkJCQkJCQkJCWNvdXBvbkFyZWEgKz0gJzxkaXYgY2xhc3M9ImNsaWNrMmdldCI+PHNwYW4gY2xhc3M9ImMyZy1zcDEiPu+/pScgKyBkYXRhLmNvdXBvbkFtb3VudCArCgkJCQkJCQkJCQkJJzwvc3Bhbj48c3BhbiBjbGFzcz0iYzJnLXNwMiI+6aKG5Y+WPC9zcGFuPjwvZGl2Pic7CgkJCQkJCQkJCQljb3Vwb25BcmVhICs9ICc8L2E+JzsKCQkJCQkJCQkJfQoKCQkJCQkJCQl9IGVsc2UgewoJCQkJCQkJCQljb3Vwb25BcmVhICs9CgkJCQkJCQkJCQknPGEgaWQ9ImNvdXBvbl9ib3giIHRpdGxlPSIiIGNsYXNzPSJjb3Vwb24tYm94MSIgPic7CgkJCQkJCQkJCWNvdXBvbkFyZWEgKz0gJzxzcGFuIGNsYXNzPSJjb3Vwb24taWNvbiI+PC9zcGFuPic7CgkJCQkJCQkJCWNvdXBvbkFyZWEgKz0gJyA8ZGl2IGNsYXNzPSJjb3Vwb24tdGxlIj7mraTllYblk4HmmoLml6DnuqLljIU8L2Rpdj4nOwoJCQkJCQkJCQljb3Vwb25BcmVhICs9ICc8L2E+JzsKCQkJCQkJCQl9CgoKCQkJCQkJCQljb3Vwb25BcmVhICs9ICc8L2Rpdj4nOwoKCgkJCQkJCQkJaWYgKGxvY2F0aW9uLmhyZWYuaW5kZXhPZigiLy9kZXRhaWwudG1hbGwiKSAhPSAtMSkgewoJCQkJCQkJCQkkKCIudG0tZmNzLXBhbmVsIikuYWZ0ZXIoY291cG9uQXJlYSk7CgkJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQkJJCgidWwudGItbWV0YSIpLmFmdGVyKGNvdXBvbkFyZWEpOwoJCQkJCQkJCX0KCQkJCQkJCQlpZiAoZGF0YS5pdGVtX2xpbmsub3JpZ2luYWxQcmljZSkgewoJCQkJCQkJCQkkKCIjbm93X3ByaWNlIikuaHRtbCgnwqUnICsgZGF0YS5pdGVtX2xpbmsub3JpZ2luYWxQcmljZSk7CgkJCQkJCQkJfQoJCQkJCQkJCWlmIChkYXRhLml0ZW1fbGluay5hY3R1YWxQcmljZSkgewoJCQkJCQkJCQkkKCIjY291cG9uX3ByaWNlIikuaHRtbCgnwqUnICsgZGF0YS5pdGVtX2xpbmsuYWN0dWFsUHJpY2UpOwoJCQkJCQkJCX0KCQkJCQkJCQlpZiAocmVzLnR5cGUgPT0gJ2Vycm9yJyAmJiBkYXRhLml0ZW1fbGluay5pdGVtVXJsKSB7CgkJCQkJCQkJCSQoJyNxcmNvZGUnKS5xcmNvZGUoewoJCQkJCQkJCQkJcmVuZGVyOiAiY2FudmFzIiwgLy/kuZ/lj6/ku6Xmm7/mjaLkuLp0YWJsZQoJCQkJCQkJCQkJd2lkdGg6IDExMCwKCQkJCQkJCQkJCWhlaWdodDogMTEwLAoJCQkJCQkJCQkJdGV4dDogZGF0YS5pdGVtX2xpbmsuaXRlbVVybAoJCQkJCQkJCQl9KTsKCQkJCQkJCQl9IGVsc2UgewoJCQkJCQkJCQkkKCcjcXJjb2RlJykucXJjb2RlKHsKCQkJCQkJCQkJCXJlbmRlcjogImNhbnZhcyIsIC8v5Lmf5Y+v5Lul5pu/5o2i5Li6dGFibGUKCQkJCQkJCQkJCXdpZHRoOiAxMTAsCgkJCQkJCQkJCQloZWlnaHQ6IDExMCwKCQkJCQkJCQkJCXRleHQ6IGRhdGEuaXRlbV9saW5rLnBhZ2V1cmwKCQkJCQkJCQkJfSk7CgkJCQkJCQkJfQoKCgkJCQkJCQl9KTsKCgkJfSBlbHNlIGlmIChwYWdldHlwZSA9PSAnamRfaXRlbScpIHsKCQkJb2JqLmluaXRTdHlsZShzdHlsZSk7CgkJCXZhciBwcm9kdWN0SWQgPSAvKFxkKylcLmh0bWwvLmV4ZWMod2luZG93LmxvY2F0aW9uLmhyZWYpWzFdOwoJCQl2YXIgY291cG9udXJsID0gImh0dHBzOi8vc2hvcC5hemtvdS5jbi9qZC5waHA/YWN0PXJlY292ZWxpbmsmaXRlbXVybD0iICsgZW5jb2RlVVJJQ29tcG9uZW50KGxvY2F0aW9uLmhyZWYpICsKCQkJCScmaXRlbWlkPScgKyBwcm9kdWN0SWQ7CgkJCQkkLmdldEpTT04oY291cG9udXJsLCBmdW5jdGlvbihyZXMpIHsKCQkJCQl2YXIgZGF0YSA9IHJlcy5kYXRhOwoJCQkJCWlmICghb2JqLkdldFF1ZXJ5U3RyaW5nKCdqZC5pZGV5LmNuJykgJiYgZGF0YSkgewoJCQkJCQl3aW5kb3cubG9jYXRpb24uaHJlZiA9ICdodHRwczovL2pkLmlkZXkuY24vcmVkLmh0bWw/dXJsPScgKyBlbmNvZGVVUklDb21wb25lbnQoZGF0YSk7CgkJCQkJfQoKCQkJCX0pOwoJCQl2YXIgY291cG9udXJscyA9ICJodHRwczovL3Nob3AuYXprb3UuY24vamQucGhwP2FjdD1pdGVtJml0ZW11cmw9IiArIGVuY29kZVVSSUNvbXBvbmVudChsb2NhdGlvbi5ocmVmKSArCgkJCQknJml0ZW1pZD0nICsgcHJvZHVjdElkOwoKCQkJJC5nZXRKU09OKGNvdXBvbnVybHMsIGZ1bmN0aW9uKHJlcykgewoJCQkJdmFyIGRhdGEgPSByZXMuZGF0YTsKCgkJCQl2YXIgY291cG9uQXJlYSA9ICc8ZGl2IGNsYXNzPSJpZGV5LW1pbmliYXJfYmciPic7CgkJCQkJCQljb3Vwb25BcmVhICs9ICc8ZGl2IGlkPSJpZGV5X21pbmliYXIiIGNsYXNzPSJhbGlzaXRlX3BhZ2UiPic7CgkJCQkJCQljb3Vwb25BcmVhICs9CgkJCQkJCQkJJzxhIGNsYXNzPSJpZGV5X3dlYnNpdGUiICBpZD0iaWRleV93ZWJzaXRlX2ljb24iIHRhcmdldD0iX2JsYW5rIiBocmVmPSJodHRwczovL3d3dy5pZGV5LmNuIj4nOwoJCQkJCQkJY291cG9uQXJlYSArPSAnPGVtIGNsYXNzPSJzZXR0aW5nLWJnIHdlYnNpdGVfaWNvbiI+PC9lbT48L2E+JzsKCQkJCQkJCWNvdXBvbkFyZWEgKz0gJzxkaXYgIGlkPSJtaW5pX3ByaWNlX2hpc3RvcnkiIGNsYXNzPSJtaW5pYmFyLXRhYiI+JzsKCgoKCQkJCQkJCWNvdXBvbkFyZWEgKz0KCQkJCQkJCQknPHNwYW4gY2xhc3M9ImJsa2NvbG9yMSI+5b2T5YmN5Lu3OjxzcGFuIHN0eWxlPSJjb2xvcjpyZWQiIGlkPSJub3dfcHJpY2UiPuWKoOi9veS4rS4uLjwvc3Bhbj48L3NwYW4+JzsKCQkJCQkJCWNvdXBvbkFyZWEgKz0gJzxkaXYgY2xhc3M9InRyZW5kLWVycm9yLWluZm8tbWluaSIgaWQ9ImVjaGFydC1ib3giPic7CgkJCQkJCQljb3Vwb25BcmVhICs9ICc8L2Rpdj48L2Rpdj4nOwoJCQkJCQkJY291cG9uQXJlYSArPQoJCQkJCQkJCSc8ZGl2IHN0eWxlPSJmbGV4OiAxIiBpZD0iaWRleV9taW5pX2NvbXBhcmUiIGNsYXNzPSJtaW5pYmFyLXRhYiI+5pyA5L2O5Lu377yaPHNwYW4gc3R5bGU9ImNvbG9yOnJlZCIgaWQ9Im1pbl9wcmljZSI+5Yqg6L295LitLi4uPC9zcGFuPjwvZGl2Pic7CgkJCQkJCQljb3Vwb25BcmVhICs9ICc8ZGl2IHN0eWxlPSJmbGV4OiAxIiBpZD0iaWRleV9taW5pX3JlbWluZCIgY2xhc3M9Im1pbmliYXItdGFiIj4nOwoJCQkJCQkJY291cG9uQXJlYSArPSAn5Yq15ZCO5Lu377yaPHNwYW4gc3R5bGU9ImNvbG9yOnJlZCIgaWQ9ImNvdXBvbl9wcmljZSI+5Yqg6L295LitLi4uPC9zcGFuPic7CgoJCQkJCQkJY291cG9uQXJlYSArPSAnIDwvZGl2PjwvZGl2Pic7CgkJCQkJCQljb3Vwb25BcmVhICs9CgkJCQkJCQkJJyA8ZGl2IGNsYXNzPSJpZGV5LW1pbmktcGxhY2Vob2xkZXIgaWRleS1wcmljZS1wcm90ZWN0Ij48L2Rpdj48ZGl2IGlkPSJwcm9tb19ib3giPjwvZGl2Pic7CgoKCgkJCQkJCQlpZiAocmVzLnR5cGUgPT0gJ3N1Y2Nlc3MnKSB7CgkJCQkJCQkJaWYgKGRhdGEuY291cG9uTGlua1R5cGUgPT0gMSkgewoJCQkJCQkJCQljb3Vwb25BcmVhICs9CgkJCQkJCQkJCQknPGEgaWQ9ImNvdXBvbl9ib3giIHRpdGxlPSIiIGNsYXNzPSJjb3Vwb24tYm94MSIgaHJlZj0iJyArIGRhdGEuY291cG9uTGluayArICciPic7CgkJCQkJCQkJCWNvdXBvbkFyZWEgKz0gJzxzcGFuIGNsYXNzPSJjb3Vwb24taWNvbiI+PC9zcGFuPic7CgkJCQkJCQkJCWNvdXBvbkFyZWEgKz0gJyA8ZGl2IGNsYXNzPSJjb3Vwb24tdGxlIj4gPHNwYW4+5b2T5YmN5ZWG5ZOB6aKG5Yi456uL5YePJyArIGRhdGEuY291cG9uQW1vdW50ICsKCQkJCQkJCQkJCSflhYM8L3NwYW4+IDxlbSBjbGFzcz0iY291cG9uX2dpZiI+PC9lbT48L2Rpdj4nOwoJCQkJCQkJCQljb3Vwb25BcmVhICs9ICc8ZGl2IGNsYXNzPSJjbGljazJnZXQiPjxzcGFuIGNsYXNzPSJjMmctc3AxIj7vv6UnICsgZGF0YS5jb3Vwb25BbW91bnQgKwoJCQkJCQkJCQkJJzwvc3Bhbj48c3BhbiBjbGFzcz0iYzJnLXNwMiI+6aKG5Y+WPC9zcGFuPjwvZGl2Pic7CgkJCQkJCQkJCWNvdXBvbkFyZWEgKz0gJzwvYT4nOwoJCQkJCQkJCX0gZWxzZSB7CgkJCQkJCQkJCWNvdXBvbkFyZWEgKz0KCQkJCQkJCQkJCSc8YSBpZD0iY291cG9uX2JveCIgdGl0bGU9IiIgY2xhc3M9ImNvdXBvbi1ib3gxIiA+JzsKCQkJCQkJCQkJY291cG9uQXJlYSArPSAnPHNwYW4gY2xhc3M9ImNvdXBvbi1pY29uIj48L3NwYW4+JzsKCQkJCQkJCQkJY291cG9uQXJlYSArPSAnIDxkaXYgY2xhc3M9ImNvdXBvbi10bGUiPiA8c3Bhbj7nq4vlh48nICsgZGF0YS5jb3Vwb25BbW91bnQgKwoJCQkJCQkJCQkJJ+WFgyjkuqzkuJzmiavnoIHpooblj5YpPC9zcGFuPiA8ZW0gY2xhc3M9ImNvdXBvbl9naWYiPjwvZW0+PC9kaXY+JzsKCQkJCQkJCQkJY291cG9uQXJlYSArPSAnPGRpdiBpZD0icXJjb2RlIj48L2Rpdj4nOwoJCQkJCQkJCQljb3Vwb25BcmVhICs9ICc8L2E+JzsKCQkJCQkJCQl9CgoJCQkJCQkJfSBlbHNlIHsKCgkJCQkJCQkJY291cG9uQXJlYSArPQoJCQkJCQkJCQknPGEgaWQ9ImNvdXBvbl9ib3giIHRpdGxlPSIiIGNsYXNzPSJjb3Vwb24tYm94MSIgPic7CgkJCQkJCQkJY291cG9uQXJlYSArPSAnPHNwYW4gY2xhc3M9ImNvdXBvbi1pY29uIj48L3NwYW4+JzsKCQkJCQkJCQljb3Vwb25BcmVhICs9ICcgPGRpdiBjbGFzcz0iY291cG9uLXRsZSI+5q2k5ZWG5ZOB5pqC5peg57qi5YyFPC9kaXY+JzsKCgkJCQkJCQkJY291cG9uQXJlYSArPSAnPC9hPic7CgoKCQkJCQkJCX0KCgkJCQkJCQljb3Vwb25BcmVhICs9ICc8L2Rpdj4nOwoKCgoJCQkJCQkJJCgiLnN1bW1hcnktcHJpY2Utd3JhcCIpLmFmdGVyKGNvdXBvbkFyZWEpOwoKCQkJCQkJCWlmIChkYXRhLmNvdXBvbkxpbmspIHsKCQkJCQkJCQkkKCcjcXJjb2RlJykucXJjb2RlKHsKCQkJCQkJCQkJcmVuZGVyOiAiY2FudmFzIiwgLy/kuZ/lj6/ku6Xmm7/mjaLkuLp0YWJsZQoJCQkJCQkJCQl3aWR0aDogMTI1LAoJCQkJCQkJCQloZWlnaHQ6IDEyMCwKCQkJCQkJCQkJdGV4dDogZGF0YS5jb3Vwb25MaW5rCgkJCQkJCQkJfSk7CgoJCQkJCQkJfSBlbHNlIGlmIChkYXRhLml0ZW1fbGluay5zaG9ydFVybCkgewoJCQkJCQkJCSQoJyNxcmNvZGUnKS5xcmNvZGUoewoJCQkJCQkJCQlyZW5kZXI6ICJjYW52YXMiLCAvL+S5n+WPr+S7peabv+aNouS4unRhYmxlCgkJCQkJCQkJCXdpZHRoOiAxMjUsCgkJCQkJCQkJCWhlaWdodDogMTIwLAoJCQkJCQkJCQl0ZXh0OiBkYXRhLml0ZW1fbGluay5zaG9ydFVybAoJCQkJCQkJCX0pOwoJCQkJCQkJfSBlbHNlIHsKCQkJCQkJCQkkKCcjcXJjb2RlJykucXJjb2RlKHsKCQkJCQkJCQkJcmVuZGVyOiAiY2FudmFzIiwgLy/kuZ/lj6/ku6Xmm7/mjaLkuLp0YWJsZQoJCQkJCQkJCQl3aWR0aDogMTI1LAoJCQkJCQkJCQloZWlnaHQ6IDEyMCwKCQkJCQkJCQkJdGV4dDogZGF0YS5pdGVtX2xpbmsubG9uZ1VybAoJCQkJCQkJCX0pOwoJCQkJCQkJfQoJCQkJCQkJaWYgKGRhdGEuaXRlbV9saW5rLm9yaWdpbmFsUHJpY2UpIHsKCQkJCQkJCQkkKCIjbm93X3ByaWNlIikuaHRtbCgnwqUnICsgZGF0YS5pdGVtX2xpbmsub3JpZ2luYWxQcmljZSk7CgkJCQkJCQl9CgkJCQkJCQlpZiAoZGF0YS5pdGVtX2xpbmsuYWN0dWFsUHJpY2UpIHsKCQkJCQkJCQkkKCIjY291cG9uX3ByaWNlIikuaHRtbCgnwqUnICsgZGF0YS5pdGVtX2xpbmsuYWN0dWFsUHJpY2UpOwoJCQkJCQkJfQoJCQkJCQl9KTsKCgkJfSBlbHNlIGlmIChwYWdldHlwZSA9PSAnamRfbGlzdCcpIHsKCQkJc2V0SW50ZXJ2YWwob2JqLmdldF91cmwsIDMwMCk7CgoKCQl9IGVsc2UgaWYgKHBhZ2V0eXBlID09ICdqZF9taWFvc2hhJykgewoJCSQoIi5zZWNraWxsX21vZF9nb29kc2xpc3QgbGkiKS5maW5kKCJhIikuY2xpY2soZnVuY3Rpb24oZSkgewoJCQkJCWlmICgkKHRoaXMpLmF0dHIoJ2RhdGEtcmVmJykpIHsKCQkJCQkJZS5wcmV2ZW50RGVmYXVsdCgpOwoJCQkJCQlvYmoub25jbGlja3MoJCh0aGlzKS5hdHRyKCdkYXRhLXJlZicpKTsKCQkJCQl9CgkJCQl9KQoKCQkJCXNldEludGVydmFsKG9iai5nZXRfbWlhb3NoYSwgMzAwKTsKCgkJfWVsc2UgewoJCQltYWluLmluaXQoKTsKCQkJfQoJCX0pKCk7","requires":[{"meta":{"name":"jquery.min.js","url":"https://cdn.staticfile.org/jquery/1.12.4/jquery.min.js","ts":1635731952748,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"echarts.min.js","url":"https://cdn.staticfile.org/echarts/4.3.0/echarts.min.js","ts":1635731953183,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"jquery.qrcode.min.js","url":"https://cdn.bootcss.com/jquery.qrcode/1.0/jquery.qrcode.min.js","ts":1635731952523,"mimetype":"text/javascript"},"source":""},{"meta":{"name":"sweetalert2.all.min.js","url":"https://cdn.jsdelivr.net/npm/sweetalert2@10.15.5/dist/sweetalert2.all.min.js","ts":1635731952645,"mimetype":"text/javascript"},"source":""}]}],"settings":{"script_blacklist_server":[{"rules":["/https?:\\/\\/userscripts\\.org\\/scripts\\/(source|version)/(102614).*\\.user\\.js/"],"severity":"2"},{"name":"SaveFrom.net helper","reason":"Shows advertisements","rules":["/https?:\\/\\/sf-addon\\.com\\/.*\\/.*\\.user\\.js/","/https?:\\/\\/.*\\.sf-helper\\.com\\/.*\\.user\\.js/"],"severity":"3"},{"reasons":{"en":"Used for a phishing compain to compromise users of baon-nutrition.com"},"rules":["/https?:\\/\\/files\\.ulysse\\.travel\\/.*\\.user\\.js/"],"severity":"8"}]}}